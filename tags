!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$K/kernel	Makefile	/^$K\/kernel: $(OBJS) $K\/kernel.ld $U\/initcode$/;"	t
$U/_forktest	Makefile	/^$U\/_forktest: $U\/forktest.o $(ULIB)$/;"	t
$U/_uthread	Makefile	/^$U\/_uthread: $U\/uthread.o $U\/uthread_switch.o $(ULIB)$/;"	t
$U/initcode	Makefile	/^$U\/initcode: $U\/initcode.S$/;"	t
$U/usys.S	Makefile	/^$U\/usys.S : $U\/usys.pl$/;"	t
$U/usys.o	Makefile	/^$U\/usys.o : $U\/usys.S$/;"	t
$U/uthread_switch.o	Makefile	/^$U\/uthread_switch.o : $U\/uthread_switch.S$/;"	t
.bss	kernel/kernel.ld	/^  .bss : {$/;"	S
.data	kernel/kernel.ld	/^  .data : {$/;"	S
.gdbinit	Makefile	/^.gdbinit: .gdbinit.tmpl-riscv$/;"	t
.rodata	kernel/kernel.ld	/^  .rodata : {$/;"	S
.text	kernel/kernel.ld	/^  .text : {$/;"	S
AS	Makefile	/^AS = $(TOOLPREFIX)gas$/;"	m
Align	user/umalloc.c	/^typedef long Align;$/;"	t	typeref:typename:long	file:
BACK	user/sh.c	/^#define BACK /;"	d	file:
BACKSPACE	kernel/console.c	/^#define BACKSPACE /;"	d	file:
BBLOCK	kernel/fs.h	/^#define BBLOCK(/;"	d
BIG	user/usertests.c	/^  enum { BIG=100*1024*1024 };$/;"	e	enum:sbrkfail::__anon2469bfd61103	file:
BIG	user/usertests.c	/^  enum { BIG=100*1024*1024 };$/;"	e	enum:sbrkmuch::__anon2469bfd61003	file:
BPB	kernel/fs.h	/^#define BPB /;"	d
BSIZE	kernel/fs.h	/^#define BSIZE /;"	d
BUFSZ	user/usertests.c	/^#define BUFSZ /;"	d	file:
C	kernel/console.c	/^#define C(/;"	d	file:
CC	Makefile	/^CC = $(TOOLPREFIX)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Werror -O -fno-omit-frame-pointer -ggdb$/;"	m
CLINT	kernel/memlayout.h	/^#define CLINT /;"	d
CLINT_MTIME	kernel/memlayout.h	/^#define CLINT_MTIME /;"	d
CLINT_MTIMECMP	kernel/memlayout.h	/^#define CLINT_MTIMECMP(/;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
CONSOLE	kernel/file.h	/^#define CONSOLE /;"	d
CPUS	Makefile	/^CPUS := 1$/;"	m
CPUS	Makefile	/^CPUS := 3$/;"	m
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
DIRSIZ	kernel/fs.h	/^#define DIRSIZ /;"	d
Disassembly	kernel/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/bigfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/grep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/grind.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/initcode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/kill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/ln.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/mkdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/rm.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/stressfs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/symlinktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/usertests.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/wc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/zombie.asm	/^Disassembly of section .text:$/;"	l
ELF_MAGIC	kernel/elf.h	/^#define ELF_MAGIC /;"	d
ELF_PROG_FLAG_EXEC	kernel/elf.h	/^#define ELF_PROG_FLAG_EXEC /;"	d
ELF_PROG_FLAG_READ	kernel/elf.h	/^#define ELF_PROG_FLAG_READ /;"	d
ELF_PROG_FLAG_WRITE	kernel/elf.h	/^#define ELF_PROG_FLAG_WRITE /;"	d
ELF_PROG_LOAD	kernel/elf.h	/^#define ELF_PROG_LOAD /;"	d
EXEC	user/sh.c	/^#define EXEC /;"	d	file:
FCR	kernel/uart.c	/^#define FCR /;"	d	file:
FCR_FIFO_CLEAR	kernel/uart.c	/^#define FCR_FIFO_CLEAR /;"	d	file:
FCR_FIFO_ENABLE	kernel/uart.c	/^#define FCR_FIFO_ENABLE /;"	d	file:
FD_DEVICE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anonc1f1ee2b0103
FD_INODE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anonc1f1ee2b0103
FD_NONE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anonc1f1ee2b0103
FD_PIPE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anonc1f1ee2b0103
FSMAGIC	kernel/fs.h	/^#define FSMAGIC /;"	d
FSSIZE	kernel/param.h	/^#define FSSIZE /;"	d
FWDPORT	Makefile	/^FWDPORT = $(shell expr `id -u` % 5000 + 25999)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	Makefile	/^GDBPORT = $(shell expr `id -u` % 5000 + 25000)$/;"	m
Header	user/umalloc.c	/^typedef union header Header;$/;"	t	typeref:union:header	file:
IBLOCK	kernel/fs.h	/^#define IBLOCK(/;"	d
IER	kernel/uart.c	/^#define IER /;"	d	file:
IER_RX_ENABLE	kernel/uart.c	/^#define IER_RX_ENABLE /;"	d	file:
IER_TX_ENABLE	kernel/uart.c	/^#define IER_TX_ENABLE /;"	d	file:
INPUT_BUF	kernel/console.c	/^#define INPUT_BUF /;"	d	file:
IPB	kernel/fs.h	/^#define IPB /;"	d
ISR	kernel/uart.c	/^#define ISR /;"	d	file:
K	Makefile	/^K=kernel$/;"	m
KERNBASE	kernel/memlayout.h	/^#define KERNBASE /;"	d
KSTACK	kernel/memlayout.h	/^#define KSTACK(/;"	d
LAB	conf/lab.mk	/^LAB=fs$/;"	m
LABUPPER	Makefile	/^LABUPPER = $(shell echo $(LAB) | tr a-z A-Z)$/;"	m
LCR	kernel/uart.c	/^#define LCR /;"	d	file:
LCR_BAUD_LATCH	kernel/uart.c	/^#define LCR_BAUD_LATCH /;"	d	file:
LCR_EIGHT_BITS	kernel/uart.c	/^#define LCR_EIGHT_BITS /;"	d	file:
LD	Makefile	/^LD = $(TOOLPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -z max-page-size=4096$/;"	m
LIST	user/sh.c	/^#define LIST /;"	d	file:
LOGSIZE	kernel/param.h	/^#define LOGSIZE /;"	d
LSR	kernel/uart.c	/^#define LSR /;"	d	file:
LSR_RX_READY	kernel/uart.c	/^#define LSR_RX_READY /;"	d	file:
LSR_TX_IDLE	kernel/uart.c	/^#define LSR_TX_IDLE /;"	d	file:
MAKE_SATP	kernel/riscv.h	/^#define MAKE_SATP(/;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAXARG	kernel/param.h	/^#define MAXARG /;"	d
MAXARGS	user/sh.c	/^#define MAXARGS /;"	d	file:
MAXFILE	kernel/fs.h	/^#define MAXFILE /;"	d
MAXOPBLOCKS	kernel/param.h	/^#define MAXOPBLOCKS /;"	d
MAXPATH	kernel/param.h	/^#define MAXPATH /;"	d
MAXVA	kernel/riscv.h	/^#define MAXVA /;"	d
MIE_MEIE	kernel/riscv.h	/^#define MIE_MEIE /;"	d
MIE_MSIE	kernel/riscv.h	/^#define MIE_MSIE /;"	d
MIE_MTIE	kernel/riscv.h	/^#define MIE_MTIE /;"	d
MSTATUS_MIE	kernel/riscv.h	/^#define MSTATUS_MIE /;"	d
MSTATUS_MPP_M	kernel/riscv.h	/^#define MSTATUS_MPP_M /;"	d
MSTATUS_MPP_MASK	kernel/riscv.h	/^#define MSTATUS_MPP_MASK /;"	d
MSTATUS_MPP_S	kernel/riscv.h	/^#define MSTATUS_MPP_S /;"	d
MSTATUS_MPP_U	kernel/riscv.h	/^#define MSTATUS_MPP_U /;"	d
N	user/forktest.asm	/^#define N /;"	d	file:
N	user/forktest.c	/^#define N /;"	d	file:
N	user/usertests.c	/^  enum { N = 1000, SZ=10};$/;"	e	enum:sharedfd::__anon2469bfd60503	file:
N	user/usertests.c	/^  enum { N = 20, NCHILD=4 };$/;"	e	enum:createdelete::__anon2469bfd60703	file:
N	user/usertests.c	/^  enum { N = 20, SZ=600 };$/;"	e	enum:bigfile::__anon2469bfd60d03	file:
N	user/usertests.c	/^  enum { N = 40 };$/;"	e	enum:concreate::__anon2469bfd60a03	file:
N	user/usertests.c	/^  enum { N = 500 };$/;"	e	enum:bigdir::__anon2469bfd60c03	file:
N	user/usertests.c	/^  enum { N=100, SZ=10 };$/;"	e	enum:writetest::__anon2469bfd60103	file:
N	user/usertests.c	/^  enum { N=12, NCHILD=4, SZ=500 };$/;"	e	enum:fourfiles::__anon2469bfd60603	file:
N	user/usertests.c	/^  enum { N=2 };$/;"	e	enum:forkfork::__anon2469bfd60403	file:
N	user/usertests.c	/^  enum { N=5, SZ=1033 };$/;"	e	enum:pipe1::__anon2469bfd60303	file:
N	user/usertests.c	/^  enum { N=52 };$/;"	e	enum:createtest::__anon2469bfd60203	file:
N	user/usertests.c	/^  enum{ N = 1000 };$/;"	e	enum:forktest::__anon2469bfd60e03	file:
NBUF	kernel/param.h	/^#define NBUF /;"	d
NCHILD	user/usertests.c	/^  enum { N = 20, NCHILD=4 };$/;"	e	enum:createdelete::__anon2469bfd60703	file:
NCHILD	user/usertests.c	/^  enum { N=12, NCHILD=4, SZ=500 };$/;"	e	enum:fourfiles::__anon2469bfd60603	file:
NCPU	kernel/param.h	/^#define NCPU /;"	d
NDEV	kernel/param.h	/^#define NDEV /;"	d
NDINDIRECT	kernel/fs.h	/^#define NDINDIRECT /;"	d
NDIRECT	kernel/fs.h	/^#define NDIRECT /;"	d
NELEM	kernel/defs.h	/^#define NELEM(/;"	d
NFILE	kernel/param.h	/^#define NFILE /;"	d
NINDIRECT	kernel/fs.h	/^#define NINDIRECT /;"	d
NINODE	kernel/param.h	/^#define NINODE /;"	d
NINODES	mkfs/mkfs.c	/^#define NINODES /;"	d	file:
NOFILE	kernel/param.h	/^#define NOFILE /;"	d
NPROC	kernel/param.h	/^#define NPROC /;"	d
NTINDIRECT	kernel/fs.h	/^#define NTINDIRECT /;"	d
NUM	kernel/virtio.h	/^#define NUM /;"	d
OBJCOPY	Makefile	/^OBJCOPY = $(TOOLPREFIX)objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = $(TOOLPREFIX)objdump$/;"	m
OBJS	Makefile	/^OBJS = \\$/;"	m
O_CREATE	kernel/fcntl.h	/^#define O_CREATE /;"	d
O_NOFOLLOW	kernel/fcntl.h	/^#define O_NOFOLLOW /;"	d
O_RDONLY	kernel/fcntl.h	/^#define O_RDONLY /;"	d
O_RDWR	kernel/fcntl.h	/^#define O_RDWR /;"	d
O_TRUNC	kernel/fcntl.h	/^#define O_TRUNC /;"	d
O_WRONLY	kernel/fcntl.h	/^#define O_WRONLY /;"	d
PA2PTE	kernel/riscv.h	/^#define PA2PTE(/;"	d
PART_TOTAL	gradelib.py	/^PART_TOTAL = PART_POSSIBLE = 0$/;"	v
PGROUNDDOWN	kernel/riscv.h	/^#define PGROUNDDOWN(/;"	d
PGROUNDUP	kernel/riscv.h	/^#define PGROUNDUP(/;"	d
PGSHIFT	kernel/riscv.h	/^#define PGSHIFT /;"	d
PGSIZE	kernel/riscv.h	/^#define PGSIZE /;"	d
PHYSTOP	kernel/memlayout.h	/^#define PHYSTOP /;"	d
PIPE	user/sh.c	/^#define PIPE /;"	d	file:
PIPESIZE	kernel/pipe.c	/^#define PIPESIZE /;"	d	file:
PLIC	kernel/memlayout.h	/^#define PLIC /;"	d
PLIC_MCLAIM	kernel/memlayout.h	/^#define PLIC_MCLAIM(/;"	d
PLIC_MENABLE	kernel/memlayout.h	/^#define PLIC_MENABLE(/;"	d
PLIC_MPRIORITY	kernel/memlayout.h	/^#define PLIC_MPRIORITY(/;"	d
PLIC_PENDING	kernel/memlayout.h	/^#define PLIC_PENDING /;"	d
PLIC_PRIORITY	kernel/memlayout.h	/^#define PLIC_PRIORITY /;"	d
PLIC_SCLAIM	kernel/memlayout.h	/^#define PLIC_SCLAIM(/;"	d
PLIC_SENABLE	kernel/memlayout.h	/^#define PLIC_SENABLE(/;"	d
PLIC_SPRIORITY	kernel/memlayout.h	/^#define PLIC_SPRIORITY(/;"	d
PTE2PA	kernel/riscv.h	/^#define PTE2PA(/;"	d
PTE_FLAGS	kernel/riscv.h	/^#define PTE_FLAGS(/;"	d
PTE_R	kernel/riscv.h	/^#define PTE_R /;"	d
PTE_U	kernel/riscv.h	/^#define PTE_U /;"	d
PTE_V	kernel/riscv.h	/^#define PTE_V /;"	d
PTE_W	kernel/riscv.h	/^#define PTE_W /;"	d
PTE_X	kernel/riscv.h	/^#define PTE_X /;"	d
PX	kernel/riscv.h	/^#define PX(/;"	d
PXMASK	kernel/riscv.h	/^#define PXMASK /;"	d
PXSHIFT	kernel/riscv.h	/^#define PXSHIFT(/;"	d
QEMU	Makefile	/^QEMU = qemu-system-riscv64$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUGDB	Makefile	/^QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -machine virt -bios none -kernel $K\/kernel -m 128M -smp $(CPUS) -nographic$/;"	m
R	kernel/virtio_disk.c	/^#define R(/;"	d	file:
REDIR	user/sh.c	/^#define REDIR /;"	d	file:
RHR	kernel/uart.c	/^#define RHR /;"	d	file:
ROOTDEV	kernel/param.h	/^#define ROOTDEV /;"	d
ROOTINO	kernel/fs.h	/^#define ROOTINO /;"	d
RUNNABLE	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
RUNNING	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
ReadReg	kernel/uart.c	/^#define ReadReg(/;"	d	file:
Reg	kernel/uart.c	/^#define Reg(/;"	d	file:
Runner	gradelib.py	/^class Runner():$/;"	c
SATP_SV39	kernel/riscv.h	/^#define SATP_SV39 /;"	d
SERVERPORT	Makefile	/^SERVERPORT = $(shell expr `id -u` % 5000 + 25099)$/;"	m
SIE_SEIE	kernel/riscv.h	/^#define SIE_SEIE /;"	d
SIE_SSIE	kernel/riscv.h	/^#define SIE_SSIE /;"	d
SIE_STIE	kernel/riscv.h	/^#define SIE_STIE /;"	d
SLEEPING	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
SSTATUS_SIE	kernel/riscv.h	/^#define SSTATUS_SIE /;"	d
SSTATUS_SPIE	kernel/riscv.h	/^#define SSTATUS_SPIE /;"	d
SSTATUS_SPP	kernel/riscv.h	/^#define SSTATUS_SPP /;"	d
SSTATUS_UIE	kernel/riscv.h	/^#define SSTATUS_UIE /;"	d
SSTATUS_UPIE	kernel/riscv.h	/^#define SSTATUS_UPIE /;"	d
SYS_chdir	kernel/syscall.h	/^#define SYS_chdir /;"	d
SYS_close	kernel/syscall.h	/^#define SYS_close /;"	d
SYS_dup	kernel/syscall.h	/^#define SYS_dup /;"	d
SYS_exec	kernel/syscall.h	/^#define SYS_exec /;"	d
SYS_exit	kernel/syscall.h	/^#define SYS_exit /;"	d
SYS_fork	kernel/syscall.h	/^#define SYS_fork /;"	d
SYS_fstat	kernel/syscall.h	/^#define SYS_fstat /;"	d
SYS_getpid	kernel/syscall.h	/^#define SYS_getpid /;"	d
SYS_kill	kernel/syscall.h	/^#define SYS_kill /;"	d
SYS_link	kernel/syscall.h	/^#define SYS_link /;"	d
SYS_mkdir	kernel/syscall.h	/^#define SYS_mkdir /;"	d
SYS_mknod	kernel/syscall.h	/^#define SYS_mknod /;"	d
SYS_open	kernel/syscall.h	/^#define SYS_open /;"	d
SYS_pipe	kernel/syscall.h	/^#define SYS_pipe /;"	d
SYS_read	kernel/syscall.h	/^#define SYS_read /;"	d
SYS_sbrk	kernel/syscall.h	/^#define SYS_sbrk /;"	d
SYS_sleep	kernel/syscall.h	/^#define SYS_sleep /;"	d
SYS_symlink	kernel/syscall.h	/^#define SYS_symlink /;"	d
SYS_unlink	kernel/syscall.h	/^#define SYS_unlink /;"	d
SYS_uptime	kernel/syscall.h	/^#define SYS_uptime /;"	d
SYS_wait	kernel/syscall.h	/^#define SYS_wait /;"	d
SYS_write	kernel/syscall.h	/^#define SYS_write /;"	d
SZ	user/usertests.c	/^  enum { N = 1000, SZ=10};$/;"	e	enum:sharedfd::__anon2469bfd60503	file:
SZ	user/usertests.c	/^  enum { N = 20, SZ=600 };$/;"	e	enum:bigfile::__anon2469bfd60d03	file:
SZ	user/usertests.c	/^  enum { N=100, SZ=10 };$/;"	e	enum:writetest::__anon2469bfd60103	file:
SZ	user/usertests.c	/^  enum { N=12, NCHILD=4, SZ=500 };$/;"	e	enum:fourfiles::__anon2469bfd60603	file:
SZ	user/usertests.c	/^  enum { N=5, SZ=1033 };$/;"	e	enum:pipe1::__anon2469bfd60303	file:
SZ	user/usertests.c	/^  enum { SZ = 5 };$/;"	e	enum:linktest::__anon2469bfd60903	file:
SZ	user/usertests.c	/^  enum { SZ = 5 };$/;"	e	enum:unlinkread::__anon2469bfd60803	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
THR	kernel/uart.c	/^#define THR /;"	d	file:
TOOLPREFIX	Makefile	/^TOOLPREFIX := $(shell if riscv64-unknown-elf-objdump -i 2>&1 | grep 'elf64-big' >\/dev\/null 2>&/;"	m
TOOMUCH	user/usertests.c	/^  enum { TOOMUCH=1024*1024*1024};$/;"	e	enum:sbrkbasic::__anon2469bfd60f03	file:
TOTAL	gradelib.py	/^TOTAL = POSSIBLE = 0$/;"	v
TRAMPOLINE	kernel/memlayout.h	/^#define TRAMPOLINE /;"	d
TRAPFRAME	kernel/memlayout.h	/^#define TRAPFRAME /;"	d
T_DEVICE	kernel/stat.h	/^#define T_DEVICE /;"	d
T_DIR	kernel/stat.h	/^#define T_DIR /;"	d
T_FILE	kernel/stat.h	/^#define T_FILE /;"	d
T_SYMLINK	kernel/stat.h	/^#define T_SYMLINK /;"	d
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
U	Makefile	/^U=user$/;"	m
UART0	kernel/memlayout.h	/^#define UART0 /;"	d
UART0_IRQ	kernel/memlayout.h	/^#define UART0_IRQ /;"	d
UART_TX_BUF_SIZE	kernel/uart.c	/^#define UART_TX_BUF_SIZE /;"	d	file:
UEXTRA	Makefile	/^UEXTRA=$/;"	m
ULIB	Makefile	/^ULIB = $U\/ulib.o $U\/usys.o $U\/printf.o $U\/umalloc.o$/;"	m
UNUSED	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
UPROGS	Makefile	/^UPROGS=\\$/;"	m
UPSTREAM	Makefile	/^UPSTREAM := $(shell git remote -v | grep -m 1 "xv6-labs-2020" | awk '{split($$0,a," "); print a[/;"	m
VIRTIO0	kernel/memlayout.h	/^#define VIRTIO0 /;"	d
VIRTIO0_IRQ	kernel/memlayout.h	/^#define VIRTIO0_IRQ /;"	d
VIRTIO_BLK_F_CONFIG_WCE	kernel/virtio.h	/^#define VIRTIO_BLK_F_CONFIG_WCE /;"	d
VIRTIO_BLK_F_MQ	kernel/virtio.h	/^#define VIRTIO_BLK_F_MQ /;"	d
VIRTIO_BLK_F_RO	kernel/virtio.h	/^#define VIRTIO_BLK_F_RO /;"	d
VIRTIO_BLK_F_SCSI	kernel/virtio.h	/^#define VIRTIO_BLK_F_SCSI /;"	d
VIRTIO_BLK_T_IN	kernel/virtio.h	/^#define VIRTIO_BLK_T_IN /;"	d
VIRTIO_BLK_T_OUT	kernel/virtio.h	/^#define VIRTIO_BLK_T_OUT /;"	d
VIRTIO_CONFIG_S_ACKNOWLEDGE	kernel/virtio.h	/^#define VIRTIO_CONFIG_S_ACKNOWLEDGE	/;"	d
VIRTIO_CONFIG_S_DRIVER	kernel/virtio.h	/^#define VIRTIO_CONFIG_S_DRIVER	/;"	d
VIRTIO_CONFIG_S_DRIVER_OK	kernel/virtio.h	/^#define VIRTIO_CONFIG_S_DRIVER_OK	/;"	d
VIRTIO_CONFIG_S_FEATURES_OK	kernel/virtio.h	/^#define VIRTIO_CONFIG_S_FEATURES_OK	/;"	d
VIRTIO_F_ANY_LAYOUT	kernel/virtio.h	/^#define VIRTIO_F_ANY_LAYOUT /;"	d
VIRTIO_MMIO_DEVICE_FEATURES	kernel/virtio.h	/^#define VIRTIO_MMIO_DEVICE_FEATURES	/;"	d
VIRTIO_MMIO_DEVICE_ID	kernel/virtio.h	/^#define VIRTIO_MMIO_DEVICE_ID	/;"	d
VIRTIO_MMIO_DRIVER_FEATURES	kernel/virtio.h	/^#define VIRTIO_MMIO_DRIVER_FEATURES	/;"	d
VIRTIO_MMIO_GUEST_PAGE_SIZE	kernel/virtio.h	/^#define VIRTIO_MMIO_GUEST_PAGE_SIZE	/;"	d
VIRTIO_MMIO_INTERRUPT_ACK	kernel/virtio.h	/^#define VIRTIO_MMIO_INTERRUPT_ACK	/;"	d
VIRTIO_MMIO_INTERRUPT_STATUS	kernel/virtio.h	/^#define VIRTIO_MMIO_INTERRUPT_STATUS	/;"	d
VIRTIO_MMIO_MAGIC_VALUE	kernel/virtio.h	/^#define VIRTIO_MMIO_MAGIC_VALUE	/;"	d
VIRTIO_MMIO_QUEUE_ALIGN	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_ALIGN	/;"	d
VIRTIO_MMIO_QUEUE_NOTIFY	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_NOTIFY	/;"	d
VIRTIO_MMIO_QUEUE_NUM	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_NUM	/;"	d
VIRTIO_MMIO_QUEUE_NUM_MAX	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_NUM_MAX	/;"	d
VIRTIO_MMIO_QUEUE_PFN	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_PFN	/;"	d
VIRTIO_MMIO_QUEUE_READY	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_READY	/;"	d
VIRTIO_MMIO_QUEUE_SEL	kernel/virtio.h	/^#define VIRTIO_MMIO_QUEUE_SEL	/;"	d
VIRTIO_MMIO_STATUS	kernel/virtio.h	/^#define VIRTIO_MMIO_STATUS	/;"	d
VIRTIO_MMIO_VENDOR_ID	kernel/virtio.h	/^#define VIRTIO_MMIO_VENDOR_ID	/;"	d
VIRTIO_MMIO_VERSION	kernel/virtio.h	/^#define VIRTIO_MMIO_VERSION	/;"	d
VIRTIO_RING_F_EVENT_IDX	kernel/virtio.h	/^#define VIRTIO_RING_F_EVENT_IDX /;"	d
VIRTIO_RING_F_INDIRECT_DESC	kernel/virtio.h	/^#define VIRTIO_RING_F_INDIRECT_DESC /;"	d
VRING_DESC_F_NEXT	kernel/virtio.h	/^#define VRING_DESC_F_NEXT /;"	d
VRING_DESC_F_WRITE	kernel/virtio.h	/^#define VRING_DESC_F_WRITE /;"	d
WEBSUB	Makefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2020\/handin.py$/;"	m
WriteReg	kernel/uart.c	/^#define WriteReg(/;"	d	file:
ZOMBIE	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
_%	Makefile	/^_%: %.o $(ULIB)$/;"	t
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon033c111f0108	kernel/fs.c	/^struct {$/;"	s	file:
__anon0ecc7a2d0108	kernel/virtio_disk.c	/^  struct {$/;"	s	struct:disk	file:
__anon2469bfd60103	user/usertests.c	/^  enum { N=100, SZ=10 };$/;"	g	function:writetest	file:
__anon2469bfd60203	user/usertests.c	/^  enum { N=52 };$/;"	g	function:createtest	file:
__anon2469bfd60303	user/usertests.c	/^  enum { N=5, SZ=1033 };$/;"	g	function:pipe1	file:
__anon2469bfd60403	user/usertests.c	/^  enum { N=2 };$/;"	g	function:forkfork	file:
__anon2469bfd60503	user/usertests.c	/^  enum { N = 1000, SZ=10};$/;"	g	function:sharedfd	file:
__anon2469bfd60603	user/usertests.c	/^  enum { N=12, NCHILD=4, SZ=500 };$/;"	g	function:fourfiles	file:
__anon2469bfd60703	user/usertests.c	/^  enum { N = 20, NCHILD=4 };$/;"	g	function:createdelete	file:
__anon2469bfd60803	user/usertests.c	/^  enum { SZ = 5 };$/;"	g	function:unlinkread	file:
__anon2469bfd60903	user/usertests.c	/^  enum { SZ = 5 };$/;"	g	function:linktest	file:
__anon2469bfd60a03	user/usertests.c	/^  enum { N = 40 };$/;"	g	function:concreate	file:
__anon2469bfd60b08	user/usertests.c	/^  struct {$/;"	s	function:concreate	file:
__anon2469bfd60c03	user/usertests.c	/^  enum { N = 500 };$/;"	g	function:bigdir	file:
__anon2469bfd60d03	user/usertests.c	/^  enum { N = 20, SZ=600 };$/;"	g	function:bigfile	file:
__anon2469bfd60e03	user/usertests.c	/^  enum{ N = 1000 };$/;"	g	function:forktest	file:
__anon2469bfd60f03	user/usertests.c	/^  enum { TOOMUCH=1024*1024*1024};$/;"	g	function:sbrkbasic	file:
__anon2469bfd61003	user/usertests.c	/^  enum { BIG=100*1024*1024 };$/;"	g	function:sbrkmuch	file:
__anon2469bfd61103	user/usertests.c	/^  enum { BIG=100*1024*1024 };$/;"	g	function:sbrkfail	file:
__anon3c3fa87c0108	kernel/kalloc.c	/^struct {$/;"	s	file:
__anon3d351ad10108	user/umalloc.c	/^  struct {$/;"	s	union:header	file:
__anon6a7165400108	kernel/bio.c	/^struct {$/;"	s	file:
__anonb6393d190108	kernel/console.c	/^struct {$/;"	s	file:
__anonc1f1ee260108	kernel/file.c	/^struct {$/;"	s	file:
__anonc1f1ee2b0103	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	g	struct:file
__anonef4e5b790108	kernel/printf.c	/^static struct {$/;"	s	file:
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
_entry	kernel/entry.S	/^_entry:$/;"	l
_trampoline	kernel/kernel.ld	/^    _trampoline = .;$/;"	s	section:.text
a	kernel/kernel.asm	/^    a = (uint*)bp->data;       $/;"	d
a	kernel/kernel.asm	/^    a = (uint*)bp->data;     \/\/ nacitame data$/;"	d
a	kernel/kernel.asm	/^  a = PGROUNDDOWN(va);$/;"	d
a	user/cat.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/echo.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/forktest.asm	/^   a:	84aa                	mv	s1,a0$/;"	l
a	user/grep.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/init.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	user/kill.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	user/ln.asm	/^   a:	478d                	li	a5,3$/;"	l
a	user/ls.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/mkdir.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/rm.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	user/sh.asm	/^       a:	1000                	addi	s0,sp,32$/;"	l
a	user/symlinktest.asm	/^   a:	84ae                	mv	s1,a1$/;"	l
a	user/usertests.asm	/^    a = b + 1;$/;"	d
a	user/usertests.asm	/^    a = sbrk(0);$/;"	d
a	user/usertests.asm	/^    a = sbrk(TOOMUCH);$/;"	d
a	user/usertests.asm	/^  a = sbrk(0);$/;"	d
a	user/usertests.asm	/^  a = sbrk(PGSIZE);$/;"	d
a	user/wc.asm	/^   a:	ecce                	sd	s3,88(sp)$/;"	l
a0	kernel/proc.h	/^  \/* 112 *\/ uint64 a0;$/;"	m	struct:trapframe	typeref:typename:uint64
a0	user/bigfile.asm	/^  a0:	00000097          	auipc	ra,0x0$/;"	l
a0	user/cat.asm	/^  a0:	00858913          	addi	s2,a1,8$/;"	l
a0	user/echo.asm	/^  a0:	1141                	addi	sp,sp,-16$/;"	l
a0	user/forktest.asm	/^  a0:	34fd                	addiw	s1,s1,-1$/;"	l
a0	user/grep.asm	/^  a0:	b7e5                	j	88 <matchhere+0x3a>$/;"	l
a0	user/ls.asm	/^  a0:	02000593          	li	a1,32$/;"	l
a0	user/mkdir.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	user/rm.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	user/sh.asm	/^      a0:	00000097          	auipc	ra,0x0$/;"	l
a0	user/stressfs.asm	/^  a0:	00000097          	auipc	ra,0x0$/;"	l
a0	user/symlinktest.asm	/^  a0:	8f4080e7          	jalr	-1804(ra) # 990 <unlink>$/;"	l
a0	user/usertests.asm	/^      a0:	e426                	sd	s1,8(sp)$/;"	l
a0	user/wc.asm	/^  a0:	02095913          	srli	s2,s2,0x20$/;"	l
a0	user/zombie.asm	/^  a0:	0800                	addi	s0,sp,16$/;"	l
a00	user/grep.asm	/^ a00:	ec6080e7          	jalr	-314(ra) # 8c2 <free>$/;"	l
a00	user/ls.asm	/^ a00:	97ba                	add	a5,a5,a4$/;"	l
a02	user/grind.asm	/^     a02:	7aa080e7          	jalr	1962(ra) # 11a8 <fprintf>$/;"	l
a02	user/ls.asm	/^ a02:	0137a423          	sw	s3,8(a5)$/;"	l
a02	user/sh.asm	/^     a02:	df6080e7          	jalr	-522(ra) # 7f4 <parseline>$/;"	l
a02	user/symlinktest.asm	/^ a02:	60e2                	ld	ra,24(sp)$/;"	l
a02	user/usertests.asm	/^     a02:	06f51c63          	bne	a0,a5,a7a <writebig+0xd0>$/;"	l
a04	user/grep.asm	/^ a04:	00093503          	ld	a0,0(s2)$/;"	l
a04	user/symlinktest.asm	/^ a04:	6442                	ld	s0,16(sp)$/;"	l
a06	user/grind.asm	/^     a06:	4511                	li	a0,4$/;"	l
a06	user/ls.asm	/^ a06:	00000717          	auipc	a4,0x0$/;"	l
a06	user/sh.asm	/^     a06:	892a                	mv	s2,a0$/;"	l
a06	user/symlinktest.asm	/^ a06:	6105                	addi	sp,sp,32$/;"	l
a06	user/usertests.asm	/^     a06:	2485                	addiw	s1,s1,1$/;"	l
a08	user/grep.asm	/^ a08:	d971                	beqz	a0,9dc <malloc+0x92>$/;"	l
a08	user/grind.asm	/^     a08:	00000097          	auipc	ra,0x0$/;"	l
a08	user/sh.asm	/^     a08:	00001617          	auipc	a2,0x1$/;"	l
a08	user/symlinktest.asm	/^ a08:	8082                	ret$/;"	l
a08	user/usertests.asm	/^     a08:	ff4491e3          	bne	s1,s4,9ea <writebig+0x40>$/;"	l
a0a	user/grep.asm	/^ a0a:	611c                	ld	a5,0(a0)$/;"	l
a0a	user/ls.asm	/^ a0a:	0ea73923          	sd	a0,242(a4) # af8 <freep>$/;"	l
a0a	user/symlinktest.asm	/^ a0a:	7139                	addi	sp,sp,-64$/;"	l
a0c	user/grep.asm	/^ a0c:	4798                	lw	a4,8(a5)$/;"	l
a0c	user/grind.asm	/^     a0c:	44e080e7          	jalr	1102(ra) # e56 <exit>$/;"	l
a0c	user/sh.asm	/^     a0c:	9c060613          	addi	a2,a2,-1600 # 13c8 <malloc+0x1c8>$/;"	l
a0c	user/symlinktest.asm	/^ a0c:	fc06                	sd	ra,56(sp)$/;"	l
a0c	user/usertests.asm	/^     a0c:	854e                	mv	a0,s3$/;"	l
a0e	user/grep.asm	/^ a0e:	fa9776e3          	bgeu	a4,s1,9ba <malloc+0x70>$/;"	l
a0e	user/ls.asm	/^ a0e:	01078513          	addi	a0,a5,16$/;"	l
a0e	user/symlinktest.asm	/^ a0e:	f822                	sd	s0,48(sp)$/;"	l
a0e	user/usertests.asm	/^     a0e:	00005097          	auipc	ra,0x5$/;"	l
a1	kernel/proc.h	/^  \/* 120 *\/ uint64 a1;$/;"	m	struct:trapframe	typeref:typename:uint64
a10	user/grind.asm	/^     a10:	f9842503          	lw	a0,-104(s0)$/;"	l
a10	user/sh.asm	/^     a10:	85a6                	mv	a1,s1$/;"	l
a10	user/symlinktest.asm	/^ a10:	f426                	sd	s1,40(sp)$/;"	l
a12	user/grep.asm	/^ a12:	00093703          	ld	a4,0(s2)$/;"	l
a12	user/ls.asm	/^ a12:	70e2                	ld	ra,56(sp)$/;"	l
a12	user/sh.asm	/^     a12:	fd840513          	addi	a0,s0,-40$/;"	l
a12	user/symlinktest.asm	/^ a12:	f04a                	sd	s2,32(sp)$/;"	l
a12	user/usertests.asm	/^     a12:	c2c080e7          	jalr	-980(ra) # 563a <close>$/;"	l
a14	user/grind.asm	/^     a14:	00000097          	auipc	ra,0x0$/;"	l
a14	user/ls.asm	/^ a14:	7442                	ld	s0,48(sp)$/;"	l
a14	user/symlinktest.asm	/^ a14:	ec4e                	sd	s3,24(sp)$/;"	l
a16	user/grep.asm	/^ a16:	853e                	mv	a0,a5$/;"	l
a16	user/ls.asm	/^ a16:	74a2                	ld	s1,40(sp)$/;"	l
a16	user/sh.asm	/^     a16:	00000097          	auipc	ra,0x0$/;"	l
a16	user/symlinktest.asm	/^ a16:	0080                	addi	s0,sp,64$/;"	l
a16	user/usertests.asm	/^     a16:	4581                	li	a1,0$/;"	l
a18	user/grep.asm	/^ a18:	fef719e3          	bne	a4,a5,a0a <malloc+0xc0>$/;"	l
a18	user/grind.asm	/^     a18:	46a080e7          	jalr	1130(ra) # e7e <close>$/;"	l
a18	user/ls.asm	/^ a18:	7902                	ld	s2,32(sp)$/;"	l
a18	user/symlinktest.asm	/^ a18:	84aa                	mv	s1,a0$/;"	l
a18	user/usertests.asm	/^     a18:	00006517          	auipc	a0,0x6$/;"	l
a1a	user/ls.asm	/^ a1a:	69e2                	ld	s3,24(sp)$/;"	l
a1a	user/sh.asm	/^     a1a:	b02080e7          	jalr	-1278(ra) # 518 <peek>$/;"	l
a1a	user/symlinktest.asm	/^ a1a:	c299                	beqz	a3,a20 <printint+0x16>$/;"	l
a1c	user/grep.asm	/^ a1c:	8552                	mv	a0,s4$/;"	l
a1c	user/grind.asm	/^     a1c:	4505                	li	a0,1$/;"	l
a1c	user/ls.asm	/^ a1c:	6a42                	ld	s4,16(sp)$/;"	l
a1c	user/symlinktest.asm	/^ a1c:	0805c863          	bltz	a1,aac <printint+0xa2>$/;"	l
a1c	user/usertests.asm	/^     a1c:	84050513          	addi	a0,a0,-1984 # 6258 <malloc+0x808>$/;"	l
a1e	user/grep.asm	/^ a1e:	00000097          	auipc	ra,0x0$/;"	l
a1e	user/grind.asm	/^     a1e:	00000097          	auipc	ra,0x0$/;"	l
a1e	user/ls.asm	/^ a1e:	6aa2                	ld	s5,8(sp)$/;"	l
a1e	user/sh.asm	/^     a1e:	fd843603          	ld	a2,-40(s0)$/;"	l
a2	kernel/proc.h	/^  \/* 128 *\/ uint64 a2;$/;"	m	struct:trapframe	typeref:typename:uint64
a2	user/echo.asm	/^  a2:	e422                	sd	s0,8(sp)$/;"	l
a2	user/forktest.asm	/^  a2:	f8e5                	bnez	s1,92 <forktest+0x64>$/;"	l
a2	user/grep.asm	/^  a2:	c691                	beqz	a3,ae <matchhere+0x60>$/;"	l
a2	user/grind.asm	/^      a2:	00001097          	auipc	ra,0x1$/;"	l
a2	user/init.asm	/^  a2:	00000097          	auipc	ra,0x0$/;"	l
a2	user/kill.asm	/^  a2:	40a7853b          	subw	a0,a5,a0$/;"	l
a2	user/ln.asm	/^  a2:	6422                	ld	s0,8(sp)$/;"	l
a2	user/usertests.asm	/^      a2:	1000                	addi	s0,sp,32$/;"	l
a2	user/zombie.asm	/^  a2:	ca19                	beqz	a2,b8 <memset+0x1c>$/;"	l
a20	user/ls.asm	/^ a20:	6b02                	ld	s6,0(sp)$/;"	l
a20	user/symlinktest.asm	/^ a20:	2581                	sext.w	a1,a1$/;"	l
a20	user/usertests.asm	/^     a20:	00005097          	auipc	ra,0x5$/;"	l
a22	user/grep.asm	/^ a22:	b76080e7          	jalr	-1162(ra) # 594 <sbrk>$/;"	l
a22	user/grind.asm	/^     a22:	460080e7          	jalr	1120(ra) # e7e <close>$/;"	l
a22	user/ls.asm	/^ a22:	6121                	addi	sp,sp,64$/;"	l
a22	user/sh.asm	/^     a22:	00961e63          	bne	a2,s1,a3e <parsecmd+0x66>$/;"	l
a22	user/symlinktest.asm	/^ a22:	4881                	li	a7,0$/;"	l
a24	user/ls.asm	/^ a24:	8082                	ret$/;"	l
a24	user/symlinktest.asm	/^ a24:	fc040693          	addi	a3,s0,-64$/;"	l
a24	user/usertests.asm	/^     a24:	c32080e7          	jalr	-974(ra) # 5652 <open>$/;"	l
a26	user/grep.asm	/^ a26:	fd5518e3          	bne	a0,s5,9f6 <malloc+0xac>$/;"	l
a26	user/grind.asm	/^     a26:	fa442503          	lw	a0,-92(s0)$/;"	l
a26	user/ls.asm	/^ a26:	6398                	ld	a4,0(a5)$/;"	l
a26	user/sh.asm	/^     a26:	854a                	mv	a0,s2$/;"	l
a28	user/ls.asm	/^ a28:	e118                	sd	a4,0(a0)$/;"	l
a28	user/sh.asm	/^     a28:	00000097          	auipc	ra,0x0$/;"	l
a28	user/symlinktest.asm	/^ a28:	4701                	li	a4,0$/;"	l
a28	user/usertests.asm	/^     a28:	89aa                	mv	s3,a0$/;"	l
a2a	user/grep.asm	/^ a2a:	4501                	li	a0,0$/;"	l
a2a	user/grind.asm	/^     a2a:	00000097          	auipc	ra,0x0$/;"	l
a2a	user/ls.asm	/^ a2a:	bff1                	j	a06 <malloc+0x86>$/;"	l
a2a	user/symlinktest.asm	/^ a2a:	2601                	sext.w	a2,a2$/;"	l
a2a	user/usertests.asm	/^     a2a:	4481                	li	s1,0$/;"	l
a2c	user/grep.asm	/^ a2c:	bf45                	j	9dc <malloc+0x92>$/;"	l
a2c	user/ls.asm	/^ a2c:	01652423          	sw	s6,8(a0)$/;"	l
a2c	user/sh.asm	/^     a2c:	f18080e7          	jalr	-232(ra) # 940 <nulterminate>$/;"	l
a2c	user/symlinktest.asm	/^ a2c:	00001517          	auipc	a0,0x1$/;"	l
a2c	user/usertests.asm	/^     a2c:	0000b917          	auipc	s2,0xb$/;"	l
a2e	user/grind.asm	/^     a2e:	4a4080e7          	jalr	1188(ra) # ece <dup>$/;"	l
a3	kernel/proc.h	/^  \/* 136 *\/ uint64 a3;$/;"	m	struct:trapframe	typeref:typename:uint64
a30	user/ls.asm	/^ a30:	0541                	addi	a0,a0,16$/;"	l
a30	user/sh.asm	/^     a30:	854a                	mv	a0,s2$/;"	l
a30	user/symlinktest.asm	/^ a30:	8dc50513          	addi	a0,a0,-1828 # 1308 <digits>$/;"	l
a30	user/usertests.asm	/^     a30:	07c90913          	addi	s2,s2,124 # baa8 <buf>$/;"	l
a32	user/grind.asm	/^     a32:	4785                	li	a5,1$/;"	l
a32	user/ls.asm	/^ a32:	00000097          	auipc	ra,0x0$/;"	l
a32	user/sh.asm	/^     a32:	70a2                	ld	ra,40(sp)$/;"	l
a34	user/grind.asm	/^     a34:	02f50063          	beq	a0,a5,a54 <go+0x9dc>$/;"	l
a34	user/sh.asm	/^     a34:	7402                	ld	s0,32(sp)$/;"	l
a34	user/symlinktest.asm	/^ a34:	883a                	mv	a6,a4$/;"	l
a34	user/usertests.asm	/^     a34:	06054263          	bltz	a0,a98 <writebig+0xee>$/;"	l
a36	user/ls.asm	/^ a36:	ec6080e7          	jalr	-314(ra) # 8f8 <free>$/;"	l
a36	user/sh.asm	/^     a36:	64e2                	ld	s1,24(sp)$/;"	l
a36	user/symlinktest.asm	/^ a36:	2705                	addiw	a4,a4,1$/;"	l
a38	user/grind.asm	/^     a38:	00001597          	auipc	a1,0x1$/;"	l
a38	user/sh.asm	/^     a38:	6942                	ld	s2,16(sp)$/;"	l
a38	user/symlinktest.asm	/^ a38:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
a38	user/usertests.asm	/^     a38:	40000613          	li	a2,1024$/;"	l
a3a	user/ls.asm	/^ a3a:	00093503          	ld	a0,0(s2)$/;"	l
a3a	user/sh.asm	/^     a3a:	6145                	addi	sp,sp,48$/;"	l
a3c	user/grind.asm	/^     a3c:	b8058593          	addi	a1,a1,-1152 # 15b8 <malloc+0x324>$/;"	l
a3c	user/sh.asm	/^     a3c:	8082                	ret$/;"	l
a3c	user/symlinktest.asm	/^ a3c:	1782                	slli	a5,a5,0x20$/;"	l
a3c	user/usertests.asm	/^     a3c:	85ca                	mv	a1,s2$/;"	l
a3e	user/ls.asm	/^ a3e:	d971                	beqz	a0,a12 <malloc+0x92>$/;"	l
a3e	user/sh.asm	/^     a3e:	00001597          	auipc	a1,0x1$/;"	l
a3e	user/symlinktest.asm	/^ a3e:	9381                	srli	a5,a5,0x20$/;"	l
a3e	user/usertests.asm	/^     a3e:	854e                	mv	a0,s3$/;"	l
a4	kernel/proc.h	/^  \/* 144 *\/ uint64 a4;$/;"	m	struct:trapframe	typeref:typename:uint64
a4	user/bigfile.asm	/^  a4:	6d8080e7          	jalr	1752(ra) # 778 <printf>$/;"	l
a4	user/cat.asm	/^  a4:	ffe5099b          	addiw	s3,a0,-2$/;"	l
a4	user/echo.asm	/^  a4:	0800                	addi	s0,sp,16$/;"	l
a4	user/forktest.asm	/^  a4:	4501                	li	a0,0$/;"	l
a4	user/grep.asm	/^  a4:	0005c683          	lbu	a3,0(a1)$/;"	l
a4	user/ln.asm	/^  a4:	0141                	addi	sp,sp,16$/;"	l
a4	user/ls.asm	/^  a4:	01298533          	add	a0,s3,s2$/;"	l
a4	user/mkdir.asm	/^  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>$/;"	l
a4	user/rm.asm	/^  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>$/;"	l
a4	user/sh.asm	/^      a4:	fb4080e7          	jalr	-76(ra) # 54 <panic>$/;"	l
a4	user/stressfs.asm	/^  a4:	2fa080e7          	jalr	762(ra) # 39a <write>$/;"	l
a4	user/symlinktest.asm	/^  a4:	00001517          	auipc	a0,0x1$/;"	l
a4	user/usertests.asm	/^      a4:	84aa                	mv	s1,a0$/;"	l
a4	user/wc.asm	/^  a4:	996e                	add	s2,s2,s11$/;"	l
a4	user/zombie.asm	/^  a4:	87aa                	mv	a5,a0$/;"	l
a40	user/grind.asm	/^     a40:	4509                	li	a0,2$/;"	l
a40	user/ls.asm	/^ a40:	611c                	ld	a5,0(a0)$/;"	l
a40	user/symlinktest.asm	/^ a40:	97aa                	add	a5,a5,a0$/;"	l
a40	user/usertests.asm	/^     a40:	00005097          	auipc	ra,0x5$/;"	l
a42	user/grind.asm	/^     a42:	00000097          	auipc	ra,0x0$/;"	l
a42	user/ls.asm	/^ a42:	4798                	lw	a4,8(a5)$/;"	l
a42	user/sh.asm	/^     a42:	99258593          	addi	a1,a1,-1646 # 13d0 <malloc+0x1d0>$/;"	l
a42	user/symlinktest.asm	/^ a42:	0007c783          	lbu	a5,0(a5)$/;"	l
a44	user/ls.asm	/^ a44:	fa9776e3          	bgeu	a4,s1,9f0 <malloc+0x70>$/;"	l
a44	user/usertests.asm	/^     a44:	bea080e7          	jalr	-1046(ra) # 562a <read>$/;"	l
a46	user/grind.asm	/^     a46:	766080e7          	jalr	1894(ra) # 11a8 <fprintf>$/;"	l
a46	user/sh.asm	/^     a46:	4509                	li	a0,2$/;"	l
a46	user/symlinktest.asm	/^ a46:	00f68023          	sb	a5,0(a3)$/;"	l
a48	user/ls.asm	/^ a48:	00093703          	ld	a4,0(s2)$/;"	l
a48	user/sh.asm	/^     a48:	00000097          	auipc	ra,0x0$/;"	l
a48	user/usertests.asm	/^     a48:	c535                	beqz	a0,ab4 <writebig+0x10a>$/;"	l
a4a	user/grind.asm	/^     a4a:	4515                	li	a0,5$/;"	l
a4a	user/symlinktest.asm	/^ a4a:	0005879b          	sext.w	a5,a1$/;"	l
a4a	user/usertests.asm	/^     a4a:	40000793          	li	a5,1024$/;"	l
a4c	user/grind.asm	/^     a4c:	00000097          	auipc	ra,0x0$/;"	l
a4c	user/ls.asm	/^ a4c:	853e                	mv	a0,a5$/;"	l
a4c	user/sh.asm	/^     a4c:	6cc080e7          	jalr	1740(ra) # 1114 <fprintf>$/;"	l
a4e	user/ls.asm	/^ a4e:	fef719e3          	bne	a4,a5,a40 <malloc+0xc0>$/;"	l
a4e	user/symlinktest.asm	/^ a4e:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
a4e	user/usertests.asm	/^     a4e:	0cf51063          	bne	a0,a5,b0e <writebig+0x164>$/;"	l
a5	kernel/proc.h	/^  \/* 152 *\/ uint64 a5;$/;"	m	struct:trapframe	typeref:typename:uint64
a50	user/grind.asm	/^     a50:	40a080e7          	jalr	1034(ra) # e56 <exit>$/;"	l
a50	user/sh.asm	/^     a50:	00001517          	auipc	a0,0x1$/;"	l
a52	user/ls.asm	/^ a52:	8552                	mv	a0,s4$/;"	l
a52	user/symlinktest.asm	/^ a52:	0685                	addi	a3,a3,1$/;"	l
a52	user/usertests.asm	/^     a52:	00092683          	lw	a3,0(s2)$/;"	l
a54	user/grind.asm	/^     a54:	fa442503          	lw	a0,-92(s0)$/;"	l
a54	user/ls.asm	/^ a54:	00000097          	auipc	ra,0x0$/;"	l
a54	user/sh.asm	/^     a54:	91050513          	addi	a0,a0,-1776 # 1360 <malloc+0x160>$/;"	l
a54	user/symlinktest.asm	/^ a54:	fec7f0e3          	bgeu	a5,a2,a34 <printint+0x2a>$/;"	l
a56	user/usertests.asm	/^     a56:	0c969b63          	bne	a3,s1,b2c <writebig+0x182>$/;"	l
a58	user/grind.asm	/^     a58:	00000097          	auipc	ra,0x0$/;"	l
a58	user/ls.asm	/^ a58:	b76080e7          	jalr	-1162(ra) # 5ca <sbrk>$/;"	l
a58	user/sh.asm	/^     a58:	fffff097          	auipc	ra,0xfffff$/;"	l
a58	user/symlinktest.asm	/^ a58:	00088b63          	beqz	a7,a6e <printint+0x64>$/;"	l
a5a	user/usertests.asm	/^     a5a:	2485                	addiw	s1,s1,1$/;"	l
a5c	user/grind.asm	/^     a5c:	426080e7          	jalr	1062(ra) # e7e <close>$/;"	l
a5c	user/ls.asm	/^ a5c:	fd5518e3          	bne	a0,s5,a2c <malloc+0xac>$/;"	l
a5c	user/sh.asm	/^     a5c:	5fc080e7          	jalr	1532(ra) # 54 <panic>$/;"	l
a5c	user/symlinktest.asm	/^ a5c:	fd040793          	addi	a5,s0,-48$/;"	l
a5c	user/usertests.asm	/^     a5c:	bff1                	j	a38 <writebig+0x8e>$/;"	l
a5e	user/usertests.asm	/^     a5e:	85d6                	mv	a1,s5$/;"	l
a6	kernel/proc.h	/^  \/* 160 *\/ uint64 a6;$/;"	m	struct:trapframe	typeref:typename:uint64
a6	user/echo.asm	/^  a6:	00054783          	lbu	a5,0(a0)$/;"	l
a6	user/forktest.asm	/^  a6:	00000097          	auipc	ra,0x0$/;"	l
a6	user/grind.asm	/^      a6:	e1c080e7          	jalr	-484(ra) # ebe <mkdir>$/;"	l
a6	user/init.asm	/^  a6:	304080e7          	jalr	772(ra) # 3a6 <open>$/;"	l
a6	user/kill.asm	/^  a6:	6422                	ld	s0,8(sp)$/;"	l
a6	user/ln.asm	/^  a6:	8082                	ret$/;"	l
a6	user/usertests.asm	/^      a6:	4581                	li	a1,0$/;"	l
a6	user/wc.asm	/^  a6:	bf4d                	j	58 <wc+0x58>$/;"	l
a6	user/zombie.asm	/^  a6:	1602                	slli	a2,a2,0x20$/;"	l
a60	user/grind.asm	/^     a60:	00001797          	auipc	a5,0x1$/;"	l
a60	user/ls.asm	/^ a60:	4501                	li	a0,0$/;"	l
a60	user/sh.asm	/^     a60:	7139                	addi	sp,sp,-64$/;"	l
a60	user/symlinktest.asm	/^ a60:	973e                	add	a4,a4,a5$/;"	l
a60	user/usertests.asm	/^     a60:	00006517          	auipc	a0,0x6$/;"	l
a62	user/ls.asm	/^ a62:	bf45                	j	a12 <malloc+0x92>$/;"	l
a62	user/sh.asm	/^     a62:	fc06                	sd	ra,56(sp)$/;"	l
a62	user/symlinktest.asm	/^ a62:	02d00793          	li	a5,45$/;"	l
a64	user/grind.asm	/^     a64:	ba878793          	addi	a5,a5,-1112 # 1608 <malloc+0x374>$/;"	l
a64	user/sh.asm	/^     a64:	f822                	sd	s0,48(sp)$/;"	l
a64	user/usertests.asm	/^     a64:	80050513          	addi	a0,a0,-2048 # 6260 <malloc+0x810>$/;"	l
a66	user/sh.asm	/^     a66:	f426                	sd	s1,40(sp)$/;"	l
a66	user/symlinktest.asm	/^ a66:	fef70823          	sb	a5,-16(a4)$/;"	l
a68	user/grind.asm	/^     a68:	faf43423          	sd	a5,-88(s0)$/;"	l
a68	user/sh.asm	/^     a68:	f04a                	sd	s2,32(sp)$/;"	l
a68	user/usertests.asm	/^     a68:	00005097          	auipc	ra,0x5$/;"	l
a6a	user/sh.asm	/^     a6a:	ec4e                	sd	s3,24(sp)$/;"	l
a6a	user/symlinktest.asm	/^ a6a:	0028071b          	addiw	a4,a6,2$/;"	l
a6c	user/grind.asm	/^     a6c:	fa043823          	sd	zero,-80(s0)$/;"	l
a6c	user/sh.asm	/^     a6c:	e852                	sd	s4,16(sp)$/;"	l
a6c	user/usertests.asm	/^     a6c:	f2a080e7          	jalr	-214(ra) # 5992 <printf>$/;"	l
a6e	user/sh.asm	/^     a6e:	e456                	sd	s5,8(sp)$/;"	l
a6e	user/symlinktest.asm	/^ a6e:	02e05863          	blez	a4,a9e <printint+0x94>$/;"	l
a7	kernel/proc.h	/^  \/* 168 *\/ uint64 a7;$/;"	m	struct:trapframe	typeref:typename:uint64
a70	user/grind.asm	/^     a70:	fa840593          	addi	a1,s0,-88$/;"	l
a70	user/sh.asm	/^     a70:	0080                	addi	s0,sp,64$/;"	l
a70	user/usertests.asm	/^     a70:	4505                	li	a0,1$/;"	l
a72	user/sh.asm	/^     a72:	00001497          	auipc	s1,0x1$/;"	l
a72	user/symlinktest.asm	/^ a72:	fc040793          	addi	a5,s0,-64$/;"	l
a72	user/usertests.asm	/^     a72:	00005097          	auipc	ra,0x5$/;"	l
a74	user/grind.asm	/^     a74:	00001517          	auipc	a0,0x1$/;"	l
a76	user/sh.asm	/^     a76:	96e48493          	addi	s1,s1,-1682 # 13e0 <malloc+0x1e0>$/;"	l
a76	user/symlinktest.asm	/^ a76:	00e78933          	add	s2,a5,a4$/;"	l
a76	user/usertests.asm	/^     a76:	ba0080e7          	jalr	-1120(ra) # 5612 <exit>$/;"	l
a78	user/grind.asm	/^     a78:	b9c50513          	addi	a0,a0,-1124 # 1610 <malloc+0x37c>$/;"	l
a7a	user/sh.asm	/^     a7a:	4589                	li	a1,2$/;"	l
a7a	user/symlinktest.asm	/^ a7a:	fff78993          	addi	s3,a5,-1$/;"	l
a7a	user/usertests.asm	/^     a7a:	8626                	mv	a2,s1$/;"	l
a7c	user/grind.asm	/^     a7c:	00000097          	auipc	ra,0x0$/;"	l
a7c	user/sh.asm	/^     a7c:	8526                	mv	a0,s1$/;"	l
a7c	user/usertests.asm	/^     a7c:	85d6                	mv	a1,s5$/;"	l
a7e	user/sh.asm	/^     a7e:	00000097          	auipc	ra,0x0$/;"	l
a7e	user/symlinktest.asm	/^ a7e:	99ba                	add	s3,s3,a4$/;"	l
a7e	user/usertests.asm	/^     a7e:	00006517          	auipc	a0,0x6$/;"	l
a8	user/bigfile.asm	/^  a8:	010007b7          	lui	a5,0x1000$/;"	l
a8	user/cat.asm	/^  a8:	1982                	slli	s3,s3,0x20$/;"	l
a8	user/grep.asm	/^  a8:	fee9                	bnez	a3,82 <matchhere+0x34>$/;"	l
a8	user/kill.asm	/^  a8:	0141                	addi	sp,sp,16$/;"	l
a8	user/ln.asm	/^  a8:	1141                	addi	sp,sp,-16$/;"	l
a8	user/ls.asm	/^  a8:	00000097          	auipc	ra,0x0$/;"	l
a8	user/mkdir.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	user/rm.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	user/sh.asm	/^      a8:	7179                	addi	sp,sp,-48$/;"	l
a8	user/stressfs.asm	/^  a8:	34fd                	addiw	s1,s1,-1$/;"	l
a8	user/symlinktest.asm	/^  a8:	e1450513          	addi	a0,a0,-492 # eb8 <malloc+0x13a>$/;"	l
a8	user/usertests.asm	/^      a8:	00006517          	auipc	a0,0x6$/;"	l
a8	user/wc.asm	/^  a8:	02054e63          	bltz	a0,e4 <wc+0xe4>$/;"	l
a8	user/zombie.asm	/^  a8:	9201                	srli	a2,a2,0x20$/;"	l
a80	user/grind.asm	/^     a80:	412080e7          	jalr	1042(ra) # e8e <exec>$/;"	l
a80	user/symlinktest.asm	/^ a80:	377d                	addiw	a4,a4,-1$/;"	l
a82	user/sh.asm	/^     a82:	384080e7          	jalr	900(ra) # e02 <open>$/;"	l
a82	user/symlinktest.asm	/^ a82:	1702                	slli	a4,a4,0x20$/;"	l
a82	user/usertests.asm	/^     a82:	80250513          	addi	a0,a0,-2046 # 6280 <malloc+0x830>$/;"	l
a84	user/grind.asm	/^     a84:	00001597          	auipc	a1,0x1$/;"	l
a84	user/symlinktest.asm	/^ a84:	9301                	srli	a4,a4,0x20$/;"	l
a86	user/sh.asm	/^     a86:	00054963          	bltz	a0,a98 <main+0x38>$/;"	l
a86	user/symlinktest.asm	/^ a86:	40e989b3          	sub	s3,s3,a4$/;"	l
a86	user/usertests.asm	/^     a86:	00005097          	auipc	ra,0x5$/;"	l
a88	user/grind.asm	/^     a88:	b9458593          	addi	a1,a1,-1132 # 1618 <malloc+0x384>$/;"	l
a8a	user/sh.asm	/^     a8a:	4789                	li	a5,2$/;"	l
a8a	user/symlinktest.asm	/^ a8a:	fff94583          	lbu	a1,-1(s2)$/;"	l
a8a	user/usertests.asm	/^     a8a:	f0c080e7          	jalr	-244(ra) # 5992 <printf>$/;"	l
a8c	user/grind.asm	/^     a8c:	4509                	li	a0,2$/;"	l
a8c	user/sh.asm	/^     a8c:	fea7d7e3          	bge	a5,a0,a7a <main+0x1a>$/;"	l
a8e	user/grind.asm	/^     a8e:	00000097          	auipc	ra,0x0$/;"	l
a8e	user/symlinktest.asm	/^ a8e:	8526                	mv	a0,s1$/;"	l
a8e	user/usertests.asm	/^     a8e:	4505                	li	a0,1$/;"	l
a90	user/sh.asm	/^     a90:	00000097          	auipc	ra,0x0$/;"	l
a90	user/symlinktest.asm	/^ a90:	00000097          	auipc	ra,0x0$/;"	l
a90	user/usertests.asm	/^     a90:	00005097          	auipc	ra,0x5$/;"	l
a92	user/grind.asm	/^     a92:	71a080e7          	jalr	1818(ra) # 11a8 <fprintf>$/;"	l
a94	user/sh.asm	/^     a94:	35a080e7          	jalr	858(ra) # dea <close>$/;"	l
a94	user/symlinktest.asm	/^ a94:	f58080e7          	jalr	-168(ra) # 9e8 <putc>$/;"	l
a94	user/usertests.asm	/^     a94:	b82080e7          	jalr	-1150(ra) # 5612 <exit>$/;"	l
a96	user/grind.asm	/^     a96:	4519                	li	a0,6$/;"	l
a98	user/grind.asm	/^     a98:	00000097          	auipc	ra,0x0$/;"	l
a98	user/sh.asm	/^     a98:	00001497          	auipc	s1,0x1$/;"	l
a98	user/symlinktest.asm	/^ a98:	197d                	addi	s2,s2,-1$/;"	l
a98	user/usertests.asm	/^     a98:	85d6                	mv	a1,s5$/;"	l
a9a	user/symlinktest.asm	/^ a9a:	ff3918e3          	bne	s2,s3,a8a <printint+0x80>$/;"	l
a9a	user/usertests.asm	/^     a9a:	00006517          	auipc	a0,0x6$/;"	l
a9c	user/grind.asm	/^     a9c:	3be080e7          	jalr	958(ra) # e56 <exit>$/;"	l
a9c	user/sh.asm	/^     a9c:	9c848493          	addi	s1,s1,-1592 # 1460 <buf.0>$/;"	l
a9e	user/symlinktest.asm	/^ a9e:	70e2                	ld	ra,56(sp)$/;"	l
a9e	user/usertests.asm	/^     a9e:	80e50513          	addi	a0,a0,-2034 # 62a8 <malloc+0x858>$/;"	l
aa	user/cat.asm	/^  aa:	0209d993          	srli	s3,s3,0x20$/;"	l
aa	user/echo.asm	/^  aa:	cb91                	beqz	a5,be <strcmp+0x1e>$/;"	l
aa	user/forktest.asm	/^  aa:	2ee080e7          	jalr	750(ra) # 394 <wait>$/;"	l
aa	user/grep.asm	/^  aa:	4501                	li	a0,0$/;"	l
aa	user/grind.asm	/^      aa:	00001517          	auipc	a0,0x1$/;"	l
aa	user/init.asm	/^  aa:	bfa5                	j	22 <main+0x22>$/;"	l
aa	user/kill.asm	/^  aa:	8082                	ret$/;"	l
aa	user/ln.asm	/^  aa:	e422                	sd	s0,8(sp)$/;"	l
aa	user/mkdir.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	user/rm.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	user/sh.asm	/^      aa:	f406                	sd	ra,40(sp)$/;"	l
aa	user/stressfs.asm	/^  aa:	f4f5                	bnez	s1,96 <main+0x96>$/;"	l
aa	user/zombie.asm	/^  aa:	00a60733          	add	a4,a2,a0$/;"	l
aa0	user/grind.asm	/^     aa0:	00001597          	auipc	a1,0x1$/;"	l
aa0	user/sh.asm	/^     aa0:	06300913          	li	s2,99$/;"	l
aa0	user/symlinktest.asm	/^ aa0:	7442                	ld	s0,48(sp)$/;"	l
aa2	user/symlinktest.asm	/^ aa2:	74a2                	ld	s1,40(sp)$/;"	l
aa2	user/usertests.asm	/^     aa2:	00005097          	auipc	ra,0x5$/;"	l
aa4	user/grind.asm	/^     aa4:	9d858593          	addi	a1,a1,-1576 # 1478 <malloc+0x1e4>$/;"	l
aa4	user/sh.asm	/^     aa4:	02000993          	li	s3,32$/;"	l
aa4	user/symlinktest.asm	/^ aa4:	7902                	ld	s2,32(sp)$/;"	l
aa6	user/symlinktest.asm	/^ aa6:	69e2                	ld	s3,24(sp)$/;"	l
aa6	user/usertests.asm	/^     aa6:	ef0080e7          	jalr	-272(ra) # 5992 <printf>$/;"	l
aa8	user/grind.asm	/^     aa8:	4509                	li	a0,2$/;"	l
aa8	user/sh.asm	/^     aa8:	00001a17          	auipc	s4,0x1$/;"	l
aa8	user/symlinktest.asm	/^ aa8:	6121                	addi	sp,sp,64$/;"	l
aaa	user/grind.asm	/^     aaa:	00000097          	auipc	ra,0x0$/;"	l
aaa	user/symlinktest.asm	/^ aaa:	8082                	ret$/;"	l
aaa	user/usertests.asm	/^     aaa:	4505                	li	a0,1$/;"	l
aac	user/sh.asm	/^     aac:	9bba0a13          	addi	s4,s4,-1605 # 1463 <buf.0+0x3>$/;"	l
aac	user/symlinktest.asm	/^ aac:	40b005bb          	negw	a1,a1$/;"	l
aac	user/usertests.asm	/^     aac:	00005097          	auipc	ra,0x5$/;"	l
aae	user/grind.asm	/^     aae:	6fe080e7          	jalr	1790(ra) # 11a8 <fprintf>$/;"	l
ab0	user/sh.asm	/^     ab0:	00001a97          	auipc	s5,0x1$/;"	l
ab0	user/symlinktest.asm	/^ ab0:	4885                	li	a7,1$/;"	l
ab0	user/usertests.asm	/^     ab0:	b66080e7          	jalr	-1178(ra) # 5612 <exit>$/;"	l
ab2	user/grind.asm	/^     ab2:	451d                	li	a0,7$/;"	l
ab2	user/symlinktest.asm	/^ ab2:	bf8d                	j	a24 <printint+0x1a>$/;"	l
ab4	user/grind.asm	/^     ab4:	00000097          	auipc	ra,0x0$/;"	l
ab4	user/sh.asm	/^     ab4:	938a8a93          	addi	s5,s5,-1736 # 13e8 <malloc+0x1e8>$/;"	l
ab4	user/symlinktest.asm	/^ ab4:	7119                	addi	sp,sp,-128$/;"	l
ab4	user/usertests.asm	/^     ab4:	010007b7          	lui	a5,0x1000$/;"	l
ab6	user/symlinktest.asm	/^ ab6:	fc86                	sd	ra,120(sp)$/;"	l
ab8	user/grind.asm	/^     ab8:	3a2080e7          	jalr	930(ra) # e56 <exit>$/;"	l
ab8	user/sh.asm	/^     ab8:	a819                	j	ace <main+0x6e>$/;"	l
ab8	user/symlinktest.asm	/^ ab8:	f8a2                	sd	s0,112(sp)$/;"	l
ab8	user/usertests.asm	/^     ab8:	10a78793          	addi	a5,a5,266 # 100010a <__BSS_END__+0xff1652>$/;"	l
aba	user/sh.asm	/^     aba:	fffff097          	auipc	ra,0xfffff$/;"	l
aba	user/symlinktest.asm	/^ aba:	f4a6                	sd	s1,104(sp)$/;"	l
abc	user/grind.asm	/^     abc:	7179                	addi	sp,sp,-48$/;"	l
abc	user/symlinktest.asm	/^ abc:	f0ca                	sd	s2,96(sp)$/;"	l
abc	user/usertests.asm	/^     abc:	02f48a63          	beq	s1,a5,af0 <writebig+0x146>$/;"	l
abe	user/grind.asm	/^     abe:	f406                	sd	ra,40(sp)$/;"	l
abe	user/sh.asm	/^     abe:	5c0080e7          	jalr	1472(ra) # 7a <fork1>$/;"	l
abe	user/symlinktest.asm	/^ abe:	ecce                	sd	s3,88(sp)$/;"	l
ac	user/bigfile.asm	/^  ac:	10b78793          	addi	a5,a5,267 # 100010b <__global_pointer$+0xffeeb2>$/;"	l
ac	user/echo.asm	/^  ac:	0005c703          	lbu	a4,0(a1)$/;"	l
ac	user/grep.asm	/^  ac:	bff1                	j	88 <matchhere+0x3a>$/;"	l
ac	user/init.asm	/^  ac:	00000517          	auipc	a0,0x0$/;"	l
ac	user/kill.asm	/^  ac:	1141                	addi	sp,sp,-16$/;"	l
ac	user/ln.asm	/^  ac:	0800                	addi	s0,sp,16$/;"	l
ac	user/ls.asm	/^  ac:	29e080e7          	jalr	670(ra) # 346 <memset>$/;"	l
ac	user/mkdir.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	user/rm.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	user/sh.asm	/^      ac:	f022                	sd	s0,32(sp)$/;"	l
ac	user/stressfs.asm	/^  ac:	854a                	mv	a0,s2$/;"	l
ac	user/symlinktest.asm	/^  ac:	00001097          	auipc	ra,0x1$/;"	l
ac	user/usertests.asm	/^      ac:	de850513          	addi	a0,a0,-536 # 5e90 <malloc+0x440>$/;"	l
ac	user/wc.asm	/^  ac:	f8043703          	ld	a4,-128(s0)$/;"	l
ac0	user/grind.asm	/^     ac0:	f022                	sd	s0,32(sp)$/;"	l
ac0	user/symlinktest.asm	/^ ac0:	e8d2                	sd	s4,80(sp)$/;"	l
ac0	user/usertests.asm	/^     ac0:	854e                	mv	a0,s3$/;"	l
ac2	user/grind.asm	/^     ac2:	ec26                	sd	s1,24(sp)$/;"	l
ac2	user/sh.asm	/^     ac2:	c925                	beqz	a0,b32 <main+0xd2>$/;"	l
ac2	user/symlinktest.asm	/^ ac2:	e4d6                	sd	s5,72(sp)$/;"	l
ac2	user/usertests.asm	/^     ac2:	00005097          	auipc	ra,0x5$/;"	l
ac4	user/grind.asm	/^     ac4:	e84a                	sd	s2,16(sp)$/;"	l
ac4	user/sh.asm	/^     ac4:	4501                	li	a0,0$/;"	l
ac4	user/symlinktest.asm	/^ ac4:	e0da                	sd	s6,64(sp)$/;"	l
ac6	user/grind.asm	/^     ac6:	1800                	addi	s0,sp,48$/;"	l
ac6	user/sh.asm	/^     ac6:	00000097          	auipc	ra,0x0$/;"	l
ac6	user/symlinktest.asm	/^ ac6:	fc5e                	sd	s7,56(sp)$/;"	l
ac6	user/usertests.asm	/^     ac6:	b78080e7          	jalr	-1160(ra) # 563a <close>$/;"	l
ac8	user/grind.asm	/^     ac8:	00001517          	auipc	a0,0x1$/;"	l
ac8	user/symlinktest.asm	/^ ac8:	f862                	sd	s8,48(sp)$/;"	l
aca	user/sh.asm	/^     aca:	304080e7          	jalr	772(ra) # dca <wait>$/;"	l
aca	user/symlinktest.asm	/^ aca:	f466                	sd	s9,40(sp)$/;"	l
aca	user/usertests.asm	/^     aca:	00005517          	auipc	a0,0x5$/;"	l
acc	user/grind.asm	/^     acc:	99050513          	addi	a0,a0,-1648 # 1458 <malloc+0x1c4>$/;"	l
acc	user/symlinktest.asm	/^ acc:	f06a                	sd	s10,32(sp)$/;"	l
ace	user/sh.asm	/^     ace:	06400593          	li	a1,100$/;"	l
ace	user/symlinktest.asm	/^ ace:	ec6e                	sd	s11,24(sp)$/;"	l
ace	user/usertests.asm	/^     ace:	78e50513          	addi	a0,a0,1934 # 6258 <malloc+0x808>$/;"	l
acquire	kernel/spinlock.c	/^acquire(struct spinlock *lk)$/;"	f	typeref:typename:void
acquiresleep	kernel/sleeplock.c	/^acquiresleep(struct sleeplock *lk)$/;"	f	typeref:typename:void
ad0	user/grind.asm	/^     ad0:	00000097          	auipc	ra,0x0$/;"	l
ad0	user/symlinktest.asm	/^ ad0:	0100                	addi	s0,sp,128$/;"	l
ad2	user/sh.asm	/^     ad2:	8526                	mv	a0,s1$/;"	l
ad2	user/symlinktest.asm	/^ ad2:	0005c903          	lbu	s2,0(a1)$/;"	l
ad2	user/usertests.asm	/^     ad2:	00005097          	auipc	ra,0x5$/;"	l
ad4	user/grind.asm	/^     ad4:	3d6080e7          	jalr	982(ra) # ea6 <unlink>$/;"	l
ad4	user/sh.asm	/^     ad4:	fffff097          	auipc	ra,0xfffff$/;"	l
ad6	user/symlinktest.asm	/^ ad6:	18090f63          	beqz	s2,c74 <vprintf+0x1c0>$/;"	l
ad6	user/usertests.asm	/^     ad6:	b90080e7          	jalr	-1136(ra) # 5662 <unlink>$/;"	l
ad8	user/grind.asm	/^     ad8:	00001517          	auipc	a0,0x1$/;"	l
ad8	user/sh.asm	/^     ad8:	52c080e7          	jalr	1324(ra) # 0 <getcmd>$/;"	l
ada	user/symlinktest.asm	/^ ada:	8aaa                	mv	s5,a0$/;"	l
ada	user/usertests.asm	/^     ada:	06054863          	bltz	a0,b4a <writebig+0x1a0>$/;"	l
adc	user/grind.asm	/^     adc:	93050513          	addi	a0,a0,-1744 # 1408 <malloc+0x174>$/;"	l
adc	user/sh.asm	/^     adc:	06054763          	bltz	a0,b4a <main+0xea>$/;"	l
adc	user/symlinktest.asm	/^ adc:	8b32                	mv	s6,a2$/;"	l
addr	kernel/kernel.asm	/^  addr = myproc()->sz;$/;"	d
addr	kernel/virtio.h	/^  uint64 addr;$/;"	m	struct:virtq_desc	typeref:typename:uint64
addrs	kernel/file.h	/^  uint addrs[NDIRECT+2];$/;"	m	struct:inode	typeref:typename:uint[]
addrs	kernel/fs.h	/^  uint addrs[NDIRECT+2];   \/\/ Data block addresses$/;"	m	struct:dinode	typeref:typename:uint[]
ade	user/symlinktest.asm	/^ ade:	00158493          	addi	s1,a1,1$/;"	l
ade	user/usertests.asm	/^     ade:	70e2                	ld	ra,56(sp)$/;"	l
ae	user/cat.asm	/^  ae:	098e                	slli	s3,s3,0x3$/;"	l
ae	user/forktest.asm	/^  ae:	57fd                	li	a5,-1$/;"	l
ae	user/grep.asm	/^  ae:	0005c503          	lbu	a0,0(a1)$/;"	l
ae	user/grind.asm	/^      ae:	2ce50513          	addi	a0,a0,718 # 1378 <malloc+0xe4>$/;"	l
ae	user/kill.asm	/^  ae:	e422                	sd	s0,8(sp)$/;"	l
ae	user/ln.asm	/^  ae:	00054783          	lbu	a5,0(a0)$/;"	l
ae	user/sh.asm	/^      ae:	ec26                	sd	s1,24(sp)$/;"	l
ae	user/stressfs.asm	/^  ae:	00000097          	auipc	ra,0x0$/;"	l
ae	user/zombie.asm	/^  ae:	00b78023          	sb	a1,0(a5)$/;"	l
ae0	user/grind.asm	/^     ae0:	00000097          	auipc	ra,0x0$/;"	l
ae0	user/sh.asm	/^     ae0:	0004c783          	lbu	a5,0(s1)$/;"	l
ae0	user/usertests.asm	/^     ae0:	7442                	ld	s0,48(sp)$/;"	l
ae2	user/symlinktest.asm	/^ ae2:	4981                	li	s3,0$/;"	l
ae2	user/usertests.asm	/^     ae2:	74a2                	ld	s1,40(sp)$/;"	l
ae4	user/grind.asm	/^     ae4:	3c6080e7          	jalr	966(ra) # ea6 <unlink>$/;"	l
ae4	user/sh.asm	/^     ae4:	fd279be3          	bne	a5,s2,aba <main+0x5a>$/;"	l
ae4	user/symlinktest.asm	/^ ae4:	02500a13          	li	s4,37$/;"	l
ae4	user/usertests.asm	/^     ae4:	7902                	ld	s2,32(sp)$/;"	l
ae6	user/usertests.asm	/^     ae6:	69e2                	ld	s3,24(sp)$/;"	l
ae8	user/grind.asm	/^     ae8:	00000097          	auipc	ra,0x0$/;"	l
ae8	user/sh.asm	/^     ae8:	0014c703          	lbu	a4,1(s1)$/;"	l
ae8	user/symlinktest.asm	/^ ae8:	06400c13          	li	s8,100$/;"	l
ae8	user/usertests.asm	/^     ae8:	6a42                	ld	s4,16(sp)$/;"	l
aea	user/usertests.asm	/^     aea:	6aa2                	ld	s5,8(sp)$/;"	l
aec	user/grind.asm	/^     aec:	366080e7          	jalr	870(ra) # e4e <fork>$/;"	l
aec	user/sh.asm	/^     aec:	06400793          	li	a5,100$/;"	l
aec	user/symlinktest.asm	/^ aec:	06c00c93          	li	s9,108$/;"	l
aec	user/usertests.asm	/^     aec:	6121                	addi	sp,sp,64$/;"	l
aee	user/usertests.asm	/^     aee:	8082                	ret$/;"	l
af0	user/grind.asm	/^     af0:	00054e63          	bltz	a0,b0c <iter+0x50>$/;"	l
af0	user/sh.asm	/^     af0:	fcf715e3          	bne	a4,a5,aba <main+0x5a>$/;"	l
af0	user/symlinktest.asm	/^ af0:	07800d13          	li	s10,120$/;"	l
af0	user/usertests.asm	/^     af0:	863e                	mv	a2,a5$/;"	l
af2	user/usertests.asm	/^     af2:	85d6                	mv	a1,s5$/;"	l
af4	user/grind.asm	/^     af4:	84aa                	mv	s1,a0$/;"	l
af4	user/sh.asm	/^     af4:	0024c783          	lbu	a5,2(s1)$/;"	l
af4	user/symlinktest.asm	/^ af4:	07000d93          	li	s11,112$/;"	l
af4	user/usertests.asm	/^     af4:	00005517          	auipc	a0,0x5$/;"	l
af6	user/grind.asm	/^     af6:	e905                	bnez	a0,b26 <iter+0x6a>$/;"	l
af8	user/grind.asm	/^     af8:	47fd                	li	a5,31$/;"	l
af8	user/sh.asm	/^     af8:	fd3791e3          	bne	a5,s3,aba <main+0x5a>$/;"	l
af8	user/symlinktest.asm	/^ af8:	00001b97          	auipc	s7,0x1$/;"	l
af8	user/usertests.asm	/^     af8:	7d450513          	addi	a0,a0,2004 # 62c8 <malloc+0x878>$/;"	l
afa	user/grind.asm	/^     afa:	00001717          	auipc	a4,0x1$/;"	l
afc	user/sh.asm	/^     afc:	8526                	mv	a0,s1$/;"	l
afc	user/symlinktest.asm	/^ afc:	810b8b93          	addi	s7,s7,-2032 # 1308 <digits>$/;"	l
afc	user/usertests.asm	/^     afc:	00005097          	auipc	ra,0x5$/;"	l
afe	user/grind.asm	/^     afe:	b6f73f23          	sd	a5,-1154(a4) # 1678 <rand_next>$/;"	l
afe	user/sh.asm	/^     afe:	00000097          	auipc	ra,0x0$/;"	l
align	kernel/elf.h	/^  uint64 align;$/;"	m	struct:proghdr	typeref:typename:uint64
alloc3_desc	kernel/virtio_disk.c	/^alloc3_desc(int *idx)$/;"	f	typeref:typename:int	file:
alloc_desc	kernel/virtio_disk.c	/^alloc_desc()$/;"	f	typeref:typename:int	file:
allocpid	kernel/proc.c	/^allocpid() {$/;"	f	typeref:typename:int
allocproc	kernel/proc.c	/^allocproc(void)$/;"	f	typeref:struct:proc *	file:
argaddr	kernel/syscall.c	/^argaddr(int n, uint64 *ip)$/;"	f	typeref:typename:int
argc	user/sh.asm	/^  argc = 0;$/;"	d
argfd	kernel/sysfile.c	/^argfd(int n, int *pfd, struct file **pf)$/;"	f	typeref:typename:int	file:
argint	kernel/syscall.c	/^argint(int n, int *ip)$/;"	f	typeref:typename:int
argptest	user/usertests.c	/^void argptest(char *s)$/;"	f	typeref:typename:void
argraw	kernel/syscall.c	/^argraw(int n)$/;"	f	typeref:typename:uint64	file:
argstr	kernel/syscall.c	/^argstr(int n, char *buf, int max)$/;"	f	typeref:typename:int
argv	user/init.c	/^char *argv[] = { "sh", 0 };$/;"	v	typeref:typename:char * []
argv	user/initcode.S	/^argv:$/;"	l
argv	user/sh.c	/^  char *argv[MAXARGS];$/;"	m	struct:execcmd	typeref:typename:char * []	file:
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	file:
atoi	user/ulib.c	/^atoi(const char *s)$/;"	f	typeref:typename:int
avail	kernel/virtio_disk.c	/^  struct virtq_avail *avail;$/;"	m	struct:disk	typeref:struct:virtq_avail *	file:
b	kernel/kernel.asm	/^  b = bget(dev, blockno);$/;"	d
b	kernel/virtio_disk.c	/^    struct buf *b;$/;"	m	struct:disk::__anon0ecc7a2d0108	typeref:struct:buf *	file:
b	user/usertests.asm	/^    b = sbrk(1);$/;"	d
b0	user/bigfile.asm	/^  b0:	00f48f63          	beq	s1,a5,ce <main+0xce>$/;"	l
b0	user/cat.asm	/^  b0:	05c1                	addi	a1,a1,16$/;"	l
b0	user/echo.asm	/^  b0:	00f71763          	bne	a4,a5,be <strcmp+0x1e>$/;"	l
b0	user/forktest.asm	/^  b0:	02f51d63          	bne	a0,a5,ea <forktest+0xbc>$/;"	l
b0	user/init.asm	/^  b0:	7fc50513          	addi	a0,a0,2044 # 8a8 <malloc+0x104>$/;"	l
b0	user/kill.asm	/^  b0:	0800                	addi	s0,sp,16$/;"	l
b0	user/ls.asm	/^  b0:	84ce                	mv	s1,s3$/;"	l
b0	user/mkdir.asm	/^  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>$/;"	l
b0	user/rm.asm	/^  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>$/;"	l
b0	user/sh.asm	/^      b0:	1800                	addi	s0,sp,48$/;"	l
b0	user/symlinktest.asm	/^  b0:	8e4080e7          	jalr	-1820(ra) # 990 <unlink>$/;"	l
b0	user/usertests.asm	/^      b0:	00005097          	auipc	ra,0x5$/;"	l
b0	user/wc.asm	/^  b0:	86e6                	mv	a3,s9$/;"	l
b00	user/symlinktest.asm	/^ b00:	a839                	j	b1e <vprintf+0x6a>$/;"	l
b00	user/usertests.asm	/^     b00:	e96080e7          	jalr	-362(ra) # 5992 <printf>$/;"	l
b02	user/grind.asm	/^     b02:	4501                	li	a0,0$/;"	l
b02	user/sh.asm	/^     b02:	09e080e7          	jalr	158(ra) # b9c <strlen>$/;"	l
b02	user/symlinktest.asm	/^ b02:	85ca                	mv	a1,s2$/;"	l
b04	user/grind.asm	/^     b04:	fffff097          	auipc	ra,0xfffff$/;"	l
b04	user/symlinktest.asm	/^ b04:	8556                	mv	a0,s5$/;"	l
b04	user/usertests.asm	/^     b04:	4505                	li	a0,1$/;"	l
b06	user/sh.asm	/^     b06:	fff5079b          	addiw	a5,a0,-1$/;"	l
b06	user/symlinktest.asm	/^ b06:	00000097          	auipc	ra,0x0$/;"	l
b06	user/usertests.asm	/^     b06:	00005097          	auipc	ra,0x5$/;"	l
b08	user/grind.asm	/^     b08:	574080e7          	jalr	1396(ra) # 78 <go>$/;"	l
b0a	user/sh.asm	/^     b0a:	1782                	slli	a5,a5,0x20$/;"	l
b0a	user/symlinktest.asm	/^ b0a:	ee2080e7          	jalr	-286(ra) # 9e8 <putc>$/;"	l
b0a	user/usertests.asm	/^     b0a:	b0c080e7          	jalr	-1268(ra) # 5612 <exit>$/;"	l
b0c	user/grind.asm	/^     b0c:	00001517          	auipc	a0,0x1$/;"	l
b0c	user/sh.asm	/^     b0c:	9381                	srli	a5,a5,0x20$/;"	l
b0e	user/sh.asm	/^     b0e:	97a6                	add	a5,a5,s1$/;"	l
b0e	user/symlinktest.asm	/^ b0e:	a019                	j	b14 <vprintf+0x60>$/;"	l
b0e	user/usertests.asm	/^     b0e:	862a                	mv	a2,a0$/;"	l
b10	user/grind.asm	/^     b10:	96c50513          	addi	a0,a0,-1684 # 1478 <malloc+0x1e4>$/;"	l
b10	user/sh.asm	/^     b10:	00078023          	sb	zero,0(a5)$/;"	l
b10	user/symlinktest.asm	/^ b10:	01498f63          	beq	s3,s4,b2e <vprintf+0x7a>$/;"	l
b10	user/usertests.asm	/^     b10:	85d6                	mv	a1,s5$/;"	l
b12	user/usertests.asm	/^     b12:	00005517          	auipc	a0,0x5$/;"	l
b14	user/grind.asm	/^     b14:	00000097          	auipc	ra,0x0$/;"	l
b14	user/sh.asm	/^     b14:	8552                	mv	a0,s4$/;"	l
b14	user/symlinktest.asm	/^ b14:	0485                	addi	s1,s1,1$/;"	l
b16	user/sh.asm	/^     b16:	00000097          	auipc	ra,0x0$/;"	l
b16	user/symlinktest.asm	/^ b16:	fff4c903          	lbu	s2,-1(s1)$/;"	l
b16	user/usertests.asm	/^     b16:	7de50513          	addi	a0,a0,2014 # 62f0 <malloc+0x8a0>$/;"	l
b18	user/grind.asm	/^     b18:	6c2080e7          	jalr	1730(ra) # 11d6 <printf>$/;"	l
b1a	user/sh.asm	/^     b1a:	31c080e7          	jalr	796(ra) # e32 <chdir>$/;"	l
b1a	user/symlinktest.asm	/^ b1a:	14090d63          	beqz	s2,c74 <vprintf+0x1c0>$/;"	l
b1a	user/usertests.asm	/^     b1a:	00005097          	auipc	ra,0x5$/;"	l
b1c	user/grind.asm	/^     b1c:	4505                	li	a0,1$/;"	l
b1e	user/grind.asm	/^     b1e:	00000097          	auipc	ra,0x0$/;"	l
b1e	user/sh.asm	/^     b1e:	fa0558e3          	bgez	a0,ace <main+0x6e>$/;"	l
b1e	user/symlinktest.asm	/^ b1e:	0009079b          	sext.w	a5,s2$/;"	l
b1e	user/usertests.asm	/^     b1e:	e78080e7          	jalr	-392(ra) # 5992 <printf>$/;"	l
b2	user/cat.asm	/^  b2:	99ae                	add	s3,s3,a1$/;"	l
b2	user/grep.asm	/^  b2:	00153513          	seqz	a0,a0$/;"	l
b2	user/grind.asm	/^      b2:	00001097          	auipc	ra,0x1$/;"	l
b2	user/kill.asm	/^  b2:	00054783          	lbu	a5,0(a0)$/;"	l
b2	user/ln.asm	/^  b2:	cf91                	beqz	a5,ce <strlen+0x26>$/;"	l
b2	user/ls.asm	/^  b2:	bf69                	j	4c <fmtname+0x4c>$/;"	l
b2	user/mkdir.asm	/^  b2:	0005c503          	lbu	a0,0(a1)$/;"	l
b2	user/rm.asm	/^  b2:	0005c503          	lbu	a0,0(a1)$/;"	l
b2	user/sh.asm	/^      b2:	c10d                	beqz	a0,d4 <runcmd+0x2c>$/;"	l
b2	user/stressfs.asm	/^  b2:	2f4080e7          	jalr	756(ra) # 3a2 <close>$/;"	l
b2	user/wc.asm	/^  b2:	8662                	mv	a2,s8$/;"	l
b2	user/zombie.asm	/^  b2:	0785                	addi	a5,a5,1$/;"	l
b22	user/grind.asm	/^     b22:	338080e7          	jalr	824(ra) # e56 <exit>$/;"	l
b22	user/sh.asm	/^     b22:	8652                	mv	a2,s4$/;"	l
b22	user/symlinktest.asm	/^ b22:	fe0997e3          	bnez	s3,b10 <vprintf+0x5c>$/;"	l
b22	user/usertests.asm	/^     b22:	4505                	li	a0,1$/;"	l
b24	user/sh.asm	/^     b24:	85d6                	mv	a1,s5$/;"	l
b24	user/usertests.asm	/^     b24:	00005097          	auipc	ra,0x5$/;"	l
b26	user/grind.asm	/^     b26:	00000097          	auipc	ra,0x0$/;"	l
b26	user/sh.asm	/^     b26:	4509                	li	a0,2$/;"	l
b26	user/symlinktest.asm	/^ b26:	fd479ee3          	bne	a5,s4,b02 <vprintf+0x4e>$/;"	l
b28	user/sh.asm	/^     b28:	00000097          	auipc	ra,0x0$/;"	l
b28	user/usertests.asm	/^     b28:	aee080e7          	jalr	-1298(ra) # 5612 <exit>$/;"	l
b2a	user/grind.asm	/^     b2a:	328080e7          	jalr	808(ra) # e4e <fork>$/;"	l
b2a	user/symlinktest.asm	/^ b2a:	89be                	mv	s3,a5$/;"	l
b2c	user/sh.asm	/^     b2c:	5ec080e7          	jalr	1516(ra) # 1114 <fprintf>$/;"	l
b2c	user/symlinktest.asm	/^ b2c:	b7e5                	j	b14 <vprintf+0x60>$/;"	l
b2c	user/usertests.asm	/^     b2c:	8626                	mv	a2,s1$/;"	l
b2e	user/grind.asm	/^     b2e:	892a                	mv	s2,a0$/;"	l
b2e	user/symlinktest.asm	/^ b2e:	05878063          	beq	a5,s8,b6e <vprintf+0xba>$/;"	l
b2e	user/usertests.asm	/^     b2e:	85d6                	mv	a1,s5$/;"	l
b30	user/grind.asm	/^     b30:	00054f63          	bltz	a0,b4e <iter+0x92>$/;"	l
b30	user/sh.asm	/^     b30:	bf79                	j	ace <main+0x6e>$/;"	l
b30	user/usertests.asm	/^     b30:	00005517          	auipc	a0,0x5$/;"	l
b32	user/sh.asm	/^     b32:	00001517          	auipc	a0,0x1$/;"	l
b32	user/symlinktest.asm	/^ b32:	05978c63          	beq	a5,s9,b8a <vprintf+0xd6>$/;"	l
b34	user/grind.asm	/^     b34:	e915                	bnez	a0,b68 <iter+0xac>$/;"	l
b34	user/usertests.asm	/^     b34:	7d850513          	addi	a0,a0,2008 # 6308 <malloc+0x8b8>$/;"	l
b36	user/grind.asm	/^     b36:	6789                	lui	a5,0x2$/;"	l
b36	user/sh.asm	/^     b36:	92e50513          	addi	a0,a0,-1746 # 1460 <buf.0>$/;"	l
b36	user/symlinktest.asm	/^ b36:	07a78863          	beq	a5,s10,ba6 <vprintf+0xf2>$/;"	l
b38	user/grind.asm	/^     b38:	c0978793          	addi	a5,a5,-1015 # 1c09 <__BSS_END__+0x189>$/;"	l
b38	user/usertests.asm	/^     b38:	00005097          	auipc	ra,0x5$/;"	l
b3a	user/sh.asm	/^     b3a:	00000097          	auipc	ra,0x0$/;"	l
b3a	user/symlinktest.asm	/^ b3a:	09b78463          	beq	a5,s11,bc2 <vprintf+0x10e>$/;"	l
b3c	user/grind.asm	/^     b3c:	00001717          	auipc	a4,0x1$/;"	l
b3c	user/usertests.asm	/^     b3c:	e5a080e7          	jalr	-422(ra) # 5992 <printf>$/;"	l
b3e	user/sh.asm	/^     b3e:	e9e080e7          	jalr	-354(ra) # 9d8 <parsecmd>$/;"	l
b3e	user/symlinktest.asm	/^ b3e:	07300713          	li	a4,115$/;"	l
b4	user/bigfile.asm	/^  b4:	00001517          	auipc	a0,0x1$/;"	l
b4	user/cat.asm	/^  b4:	4581                	li	a1,0$/;"	l
b4	user/echo.asm	/^  b4:	0505                	addi	a0,a0,1$/;"	l
b4	user/forktest.asm	/^  b4:	00000517          	auipc	a0,0x0$/;"	l
b4	user/init.asm	/^  b4:	00000097          	auipc	ra,0x0$/;"	l
b4	user/ln.asm	/^  b4:	0505                	addi	a0,a0,1$/;"	l
b4	user/ls.asm	/^  b4:	d9010113          	addi	sp,sp,-624$/;"	l
b4	user/sh.asm	/^      b4:	84aa                	mv	s1,a0$/;"	l
b4	user/symlinktest.asm	/^  b4:	00001517          	auipc	a0,0x1$/;"	l
b4	user/usertests.asm	/^      b4:	5a2080e7          	jalr	1442(ra) # 5652 <open>$/;"	l
b4	user/wc.asm	/^  b4:	85de                	mv	a1,s7$/;"	l
b4	user/zombie.asm	/^  b4:	fee79de3          	bne	a5,a4,ae <memset+0x12>$/;"	l
b40	user/grind.asm	/^     b40:	b2f73e23          	sd	a5,-1220(a4) # 1678 <rand_next>$/;"	l
b40	user/usertests.asm	/^     b40:	4505                	li	a0,1$/;"	l
b42	user/sh.asm	/^     b42:	fffff097          	auipc	ra,0xfffff$/;"	l
b42	user/symlinktest.asm	/^ b42:	0ce78663          	beq	a5,a4,c0e <vprintf+0x15a>$/;"	l
b42	user/usertests.asm	/^     b42:	00005097          	auipc	ra,0x5$/;"	l
b44	user/grind.asm	/^     b44:	4505                	li	a0,1$/;"	l
b46	user/grind.asm	/^     b46:	fffff097          	auipc	ra,0xfffff$/;"	l
b46	user/sh.asm	/^     b46:	566080e7          	jalr	1382(ra) # a8 <runcmd>$/;"	l
b46	user/symlinktest.asm	/^ b46:	06300713          	li	a4,99$/;"	l
b46	user/usertests.asm	/^     b46:	ad0080e7          	jalr	-1328(ra) # 5612 <exit>$/;"	l
b4a	user/grind.asm	/^     b4a:	532080e7          	jalr	1330(ra) # 78 <go>$/;"	l
b4a	user/sh.asm	/^     b4a:	4501                	li	a0,0$/;"	l
b4a	user/symlinktest.asm	/^ b4a:	0ee78e63          	beq	a5,a4,c46 <vprintf+0x192>$/;"	l
b4a	user/usertests.asm	/^     b4a:	85d6                	mv	a1,s5$/;"	l
b4c	user/sh.asm	/^     b4c:	00000097          	auipc	ra,0x0$/;"	l
b4c	user/usertests.asm	/^     b4c:	00005517          	auipc	a0,0x5$/;"	l
b4e	user/grind.asm	/^     b4e:	00001517          	auipc	a0,0x1$/;"	l
b4e	user/symlinktest.asm	/^ b4e:	11478863          	beq	a5,s4,c5e <vprintf+0x1aa>$/;"	l
b50	user/sh.asm	/^     b50:	276080e7          	jalr	630(ra) # dc2 <exit>$/;"	l
b50	user/usertests.asm	/^     b50:	7e450513          	addi	a0,a0,2020 # 6330 <malloc+0x8e0>$/;"	l
b52	user/grind.asm	/^     b52:	92a50513          	addi	a0,a0,-1750 # 1478 <malloc+0x1e4>$/;"	l
b52	user/symlinktest.asm	/^ b52:	85d2                	mv	a1,s4$/;"	l
b54	user/sh.asm	/^     b54:	1141                	addi	sp,sp,-16$/;"	l
b54	user/symlinktest.asm	/^ b54:	8556                	mv	a0,s5$/;"	l
b54	user/usertests.asm	/^     b54:	00005097          	auipc	ra,0x5$/;"	l
b56	user/grind.asm	/^     b56:	00000097          	auipc	ra,0x0$/;"	l
b56	user/sh.asm	/^     b56:	e422                	sd	s0,8(sp)$/;"	l
b56	user/symlinktest.asm	/^ b56:	00000097          	auipc	ra,0x0$/;"	l
b58	user/sh.asm	/^     b58:	0800                	addi	s0,sp,16$/;"	l
b58	user/usertests.asm	/^     b58:	e3e080e7          	jalr	-450(ra) # 5992 <printf>$/;"	l
b5a	user/grind.asm	/^     b5a:	680080e7          	jalr	1664(ra) # 11d6 <printf>$/;"	l
b5a	user/sh.asm	/^     b5a:	87aa                	mv	a5,a0$/;"	l
b5a	user/symlinktest.asm	/^ b5a:	e92080e7          	jalr	-366(ra) # 9e8 <putc>$/;"	l
b5c	user/sh.asm	/^     b5c:	0585                	addi	a1,a1,1$/;"	l
b5c	user/usertests.asm	/^     b5c:	4505                	li	a0,1$/;"	l
b5e	user/grind.asm	/^     b5e:	4505                	li	a0,1$/;"	l
b5e	user/sh.asm	/^     b5e:	0785                	addi	a5,a5,1$/;"	l
b5e	user/symlinktest.asm	/^ b5e:	85ca                	mv	a1,s2$/;"	l
b5e	user/usertests.asm	/^     b5e:	00005097          	auipc	ra,0x5$/;"	l
b6	user/cat.asm	/^  b6:	00093503          	ld	a0,0(s2)$/;"	l
b6	user/echo.asm	/^  b6:	0585                	addi	a1,a1,1$/;"	l
b6	user/grep.asm	/^  b6:	bfc9                	j	88 <matchhere+0x3a>$/;"	l
b6	user/grind.asm	/^      b6:	e14080e7          	jalr	-492(ra) # ec6 <chdir>$/;"	l
b6	user/kill.asm	/^  b6:	cf91                	beqz	a5,d2 <strlen+0x26>$/;"	l
b6	user/ln.asm	/^  b6:	87aa                	mv	a5,a0$/;"	l
b6	user/mkdir.asm	/^  b6:	40a7853b          	subw	a0,a5,a0$/;"	l
b6	user/rm.asm	/^  b6:	40a7853b          	subw	a0,a5,a0$/;"	l
b6	user/sh.asm	/^      b6:	4118                	lw	a4,0(a0)$/;"	l
b6	user/stressfs.asm	/^  b6:	00001517          	auipc	a0,0x1$/;"	l
b6	user/wc.asm	/^  b6:	00001517          	auipc	a0,0x1$/;"	l
b60	user/grind.asm	/^     b60:	00000097          	auipc	ra,0x0$/;"	l
b60	user/sh.asm	/^     b60:	fff5c703          	lbu	a4,-1(a1)$/;"	l
b60	user/symlinktest.asm	/^ b60:	8556                	mv	a0,s5$/;"	l
b62	user/symlinktest.asm	/^ b62:	00000097          	auipc	ra,0x0$/;"	l
b62	user/usertests.asm	/^     b62:	ab4080e7          	jalr	-1356(ra) # 5612 <exit>$/;"	l
b64	user/grind.asm	/^     b64:	2f6080e7          	jalr	758(ra) # e56 <exit>$/;"	l
b64	user/sh.asm	/^     b64:	fee78fa3          	sb	a4,-1(a5)$/;"	l
b66	user/symlinktest.asm	/^ b66:	e86080e7          	jalr	-378(ra) # 9e8 <putc>$/;"	l
b66	user/usertests.asm	/^     b66:	7179                	addi	sp,sp,-48$/;"	l
b68	user/grind.asm	/^     b68:	57fd                	li	a5,-1$/;"	l
b68	user/sh.asm	/^     b68:	fb75                	bnez	a4,b5c <strcpy+0x8>$/;"	l
b68	user/usertests.asm	/^     b68:	f406                	sd	ra,40(sp)$/;"	l
b6a	user/grind.asm	/^     b6a:	fcf42e23          	sw	a5,-36(s0)$/;"	l
b6a	user/sh.asm	/^     b6a:	6422                	ld	s0,8(sp)$/;"	l
b6a	user/symlinktest.asm	/^ b6a:	4981                	li	s3,0$/;"	l
b6a	user/usertests.asm	/^     b6a:	f022                	sd	s0,32(sp)$/;"	l
b6c	user/sh.asm	/^     b6c:	0141                	addi	sp,sp,16$/;"	l
b6c	user/symlinktest.asm	/^ b6c:	b765                	j	b14 <vprintf+0x60>$/;"	l
b6c	user/usertests.asm	/^     b6c:	ec26                	sd	s1,24(sp)$/;"	l
b6e	user/grind.asm	/^     b6e:	fdc40513          	addi	a0,s0,-36$/;"	l
b6e	user/sh.asm	/^     b6e:	8082                	ret$/;"	l
b6e	user/symlinktest.asm	/^ b6e:	008b0913          	addi	s2,s6,8$/;"	l
b6e	user/usertests.asm	/^     b6e:	e84a                	sd	s2,16(sp)$/;"	l
b70	user/sh.asm	/^     b70:	1141                	addi	sp,sp,-16$/;"	l
b70	user/usertests.asm	/^     b70:	e44e                	sd	s3,8(sp)$/;"	l
b72	user/grind.asm	/^     b72:	00000097          	auipc	ra,0x0$/;"	l
b72	user/sh.asm	/^     b72:	e422                	sd	s0,8(sp)$/;"	l
b72	user/symlinktest.asm	/^ b72:	4685                	li	a3,1$/;"	l
b72	user/usertests.asm	/^     b72:	1800                	addi	s0,sp,48$/;"	l
b74	user/sh.asm	/^     b74:	0800                	addi	s0,sp,16$/;"	l
b74	user/symlinktest.asm	/^ b74:	4629                	li	a2,10$/;"	l
b74	user/usertests.asm	/^     b74:	89aa                	mv	s3,a0$/;"	l
b76	user/grind.asm	/^     b76:	2ec080e7          	jalr	748(ra) # e5e <wait>$/;"	l
b76	user/sh.asm	/^     b76:	00054783          	lbu	a5,0(a0)$/;"	l
b76	user/symlinktest.asm	/^ b76:	000b2583          	lw	a1,0(s6)$/;"	l
b76	user/usertests.asm	/^     b76:	20200593          	li	a1,514$/;"	l
b7a	user/grind.asm	/^     b7a:	fdc42783          	lw	a5,-36(s0)$/;"	l
b7a	user/sh.asm	/^     b7a:	cb91                	beqz	a5,b8e <strcmp+0x1e>$/;"	l
b7a	user/symlinktest.asm	/^ b7a:	8556                	mv	a0,s5$/;"	l
b7a	user/usertests.asm	/^     b7a:	00005517          	auipc	a0,0x5$/;"	l
b7c	user/sh.asm	/^     b7c:	0005c703          	lbu	a4,0(a1)$/;"	l
b7c	user/symlinktest.asm	/^ b7c:	00000097          	auipc	ra,0x0$/;"	l
b7e	user/grind.asm	/^     b7e:	ef99                	bnez	a5,b9c <iter+0xe0>$/;"	l
b7e	user/usertests.asm	/^     b7e:	11e50513          	addi	a0,a0,286 # 5c98 <malloc+0x248>$/;"	l
b8	user/bigfile.asm	/^  b8:	8cc50513          	addi	a0,a0,-1844 # 980 <malloc+0x14a>$/;"	l
b8	user/echo.asm	/^  b8:	00054783          	lbu	a5,0(a0)$/;"	l
b8	user/forktest.asm	/^  b8:	3e450513          	addi	a0,a0,996 # 498 <symlink+0x6c>$/;"	l
b8	user/grep.asm	/^  b8:	0585                	addi	a1,a1,1$/;"	l
b8	user/init.asm	/^  b8:	632080e7          	jalr	1586(ra) # 6e6 <printf>$/;"	l
b8	user/kill.asm	/^  b8:	0505                	addi	a0,a0,1$/;"	l
b8	user/ln.asm	/^  b8:	4685                	li	a3,1$/;"	l
b8	user/ls.asm	/^  b8:	26113423          	sd	ra,616(sp)$/;"	l
b8	user/sh.asm	/^      b8:	4795                	li	a5,5$/;"	l
b8	user/symlinktest.asm	/^  b8:	e1450513          	addi	a0,a0,-492 # ec8 <malloc+0x14a>$/;"	l
b8	user/usertests.asm	/^      b8:	02054663          	bltz	a0,e4 <opentest+0x4a>$/;"	l
b8	user/zombie.asm	/^  b8:	6422                	ld	s0,8(sp)$/;"	l
b80	user/grind.asm	/^     b80:	57fd                	li	a5,-1$/;"	l
b80	user/sh.asm	/^     b80:	00f71763          	bne	a4,a5,b8e <strcmp+0x1e>$/;"	l
b80	user/symlinktest.asm	/^ b80:	e8e080e7          	jalr	-370(ra) # a0a <printint>$/;"	l
b82	user/grind.asm	/^     b82:	fcf42c23          	sw	a5,-40(s0)$/;"	l
b82	user/usertests.asm	/^     b82:	00005097          	auipc	ra,0x5$/;"	l
b84	user/sh.asm	/^     b84:	0505                	addi	a0,a0,1$/;"	l
b84	user/symlinktest.asm	/^ b84:	8b4a                	mv	s6,s2$/;"	l
b86	user/grind.asm	/^     b86:	fd840513          	addi	a0,s0,-40$/;"	l
b86	user/sh.asm	/^     b86:	0585                	addi	a1,a1,1$/;"	l
b86	user/symlinktest.asm	/^ b86:	4981                	li	s3,0$/;"	l
b86	user/usertests.asm	/^     b86:	ad0080e7          	jalr	-1328(ra) # 5652 <open>$/;"	l
b88	user/sh.asm	/^     b88:	00054783          	lbu	a5,0(a0)$/;"	l
b88	user/symlinktest.asm	/^ b88:	b771                	j	b14 <vprintf+0x60>$/;"	l
b8a	user/grind.asm	/^     b8a:	00000097          	auipc	ra,0x0$/;"	l
b8a	user/symlinktest.asm	/^ b8a:	008b0913          	addi	s2,s6,8$/;"	l
b8a	user/usertests.asm	/^     b8a:	0e054563          	bltz	a0,c74 <unlinkread+0x10e>$/;"	l
b8c	user/sh.asm	/^     b8c:	fbe5                	bnez	a5,b7c <strcmp+0xc>$/;"	l
b8e	user/grind.asm	/^     b8e:	2d4080e7          	jalr	724(ra) # e5e <wait>$/;"	l
b8e	user/sh.asm	/^     b8e:	0005c503          	lbu	a0,0(a1)$/;"	l
b8e	user/symlinktest.asm	/^ b8e:	4681                	li	a3,0$/;"	l
b8e	user/usertests.asm	/^     b8e:	84aa                	mv	s1,a0$/;"	l
b90	user/symlinktest.asm	/^ b90:	4629                	li	a2,10$/;"	l
b90	user/usertests.asm	/^     b90:	4615                	li	a2,5$/;"	l
b92	user/grind.asm	/^     b92:	4501                	li	a0,0$/;"	l
b92	user/sh.asm	/^     b92:	40a7853b          	subw	a0,a5,a0$/;"	l
b92	user/symlinktest.asm	/^ b92:	000b2583          	lw	a1,0(s6)$/;"	l
b92	user/usertests.asm	/^     b92:	00005597          	auipc	a1,0x5$/;"	l
b94	user/grind.asm	/^     b94:	00000097          	auipc	ra,0x0$/;"	l
b96	user/sh.asm	/^     b96:	6422                	ld	s0,8(sp)$/;"	l
b96	user/symlinktest.asm	/^ b96:	8556                	mv	a0,s5$/;"	l
b96	user/usertests.asm	/^     b96:	7d658593          	addi	a1,a1,2006 # 6368 <malloc+0x918>$/;"	l
b98	user/grind.asm	/^     b98:	2c2080e7          	jalr	706(ra) # e56 <exit>$/;"	l
b98	user/sh.asm	/^     b98:	0141                	addi	sp,sp,16$/;"	l
b98	user/symlinktest.asm	/^ b98:	00000097          	auipc	ra,0x0$/;"	l
b9a	user/sh.asm	/^     b9a:	8082                	ret$/;"	l
b9a	user/usertests.asm	/^     b9a:	00005097          	auipc	ra,0x5$/;"	l
b9c	user/grind.asm	/^     b9c:	8526                	mv	a0,s1$/;"	l
b9c	user/sh.asm	/^     b9c:	1141                	addi	sp,sp,-16$/;"	l
b9c	user/symlinktest.asm	/^ b9c:	e72080e7          	jalr	-398(ra) # a0a <printint>$/;"	l
b9e	user/grind.asm	/^     b9e:	00000097          	auipc	ra,0x0$/;"	l
b9e	user/sh.asm	/^     b9e:	e422                	sd	s0,8(sp)$/;"	l
b9e	user/usertests.asm	/^     b9e:	a98080e7          	jalr	-1384(ra) # 5632 <write>$/;"	l
ba	user/cat.asm	/^  ba:	00000097          	auipc	ra,0x0$/;"	l
ba	user/grep.asm	/^  ba:	00178513          	addi	a0,a5,1$/;"	l
ba	user/grind.asm	/^      ba:	cd11                	beqz	a0,d6 <go+0x5e>$/;"	l
ba	user/kill.asm	/^  ba:	87aa                	mv	a5,a0$/;"	l
ba	user/ln.asm	/^  ba:	9e89                	subw	a3,a3,a0$/;"	l
ba	user/mkdir.asm	/^  ba:	6422                	ld	s0,8(sp)$/;"	l
ba	user/rm.asm	/^  ba:	6422                	ld	s0,8(sp)$/;"	l
ba	user/sh.asm	/^      ba:	02e7e263          	bltu	a5,a4,de <runcmd+0x36>$/;"	l
ba	user/stressfs.asm	/^  ba:	81250513          	addi	a0,a0,-2030 # 8c8 <malloc+0x110>$/;"	l
ba	user/wc.asm	/^  ba:	88a50513          	addi	a0,a0,-1910 # 940 <malloc+0xfe>$/;"	l
ba	user/zombie.asm	/^  ba:	0141                	addi	sp,sp,16$/;"	l
ba0	user/sh.asm	/^     ba0:	0800                	addi	s0,sp,16$/;"	l
ba0	user/symlinktest.asm	/^ ba0:	8b4a                	mv	s6,s2$/;"	l
ba2	user/grind.asm	/^     ba2:	2e8080e7          	jalr	744(ra) # e86 <kill>$/;"	l
ba2	user/sh.asm	/^     ba2:	00054783          	lbu	a5,0(a0)$/;"	l
ba2	user/symlinktest.asm	/^ ba2:	4981                	li	s3,0$/;"	l
ba2	user/usertests.asm	/^     ba2:	8526                	mv	a0,s1$/;"	l
ba4	user/symlinktest.asm	/^ ba4:	bf85                	j	b14 <vprintf+0x60>$/;"	l
ba4	user/usertests.asm	/^     ba4:	00005097          	auipc	ra,0x5$/;"	l
ba6	user/grind.asm	/^     ba6:	854a                	mv	a0,s2$/;"	l
ba6	user/sh.asm	/^     ba6:	cf91                	beqz	a5,bc2 <strlen+0x26>$/;"	l
ba6	user/symlinktest.asm	/^ ba6:	008b0913          	addi	s2,s6,8$/;"	l
ba8	user/grind.asm	/^     ba8:	00000097          	auipc	ra,0x0$/;"	l
ba8	user/sh.asm	/^     ba8:	0505                	addi	a0,a0,1$/;"	l
ba8	user/usertests.asm	/^     ba8:	a96080e7          	jalr	-1386(ra) # 563a <close>$/;"	l
baa	user/sh.asm	/^     baa:	87aa                	mv	a5,a0$/;"	l
baa	user/symlinktest.asm	/^ baa:	4681                	li	a3,0$/;"	l
bac	user/grind.asm	/^     bac:	2de080e7          	jalr	734(ra) # e86 <kill>$/;"	l
bac	user/sh.asm	/^     bac:	4685                	li	a3,1$/;"	l
bac	user/symlinktest.asm	/^ bac:	4641                	li	a2,16$/;"	l
bac	user/usertests.asm	/^     bac:	4589                	li	a1,2$/;"	l
backcmd	user/sh.c	/^backcmd(struct cmd *subcmd)$/;"	f	typeref:struct:cmd *
backcmd	user/sh.c	/^struct backcmd {$/;"	s	file:
bad	kernel/kernel.asm	/^ bad:$/;"	l
bad	kernel/kernel.asm	/^bad:$/;"	l
badarg	user/usertests.c	/^badarg(char *s)$/;"	f	typeref:typename:void
badwrite	user/usertests.c	/^badwrite(char *s)$/;"	f	typeref:typename:void
bae	user/sh.asm	/^     bae:	9e89                	subw	a3,a3,a0$/;"	l
bae	user/symlinktest.asm	/^ bae:	000b2583          	lw	a1,0(s6)$/;"	l
bae	user/usertests.asm	/^     bae:	00005517          	auipc	a0,0x5$/;"	l
balloc	kernel/fs.c	/^balloc(uint dev)$/;"	f	typeref:typename:uint	file:
balloc	mkfs/mkfs.c	/^balloc(int used)$/;"	f	typeref:typename:void
barrier	Makefile	/^barrier: notxv6\/barrier.c$/;"	t
base	user/umalloc.c	/^static Header base;$/;"	v	typeref:typename:Header	file:
bb0	user/grind.asm	/^     bb0:	bfc1                	j	b80 <iter+0xc4>$/;"	l
bb0	user/sh.asm	/^     bb0:	00f6853b          	addw	a0,a3,a5$/;"	l
bb2	user/grind.asm	/^     bb2:	1141                	addi	sp,sp,-16$/;"	l
bb2	user/symlinktest.asm	/^ bb2:	8556                	mv	a0,s5$/;"	l
bb2	user/usertests.asm	/^     bb2:	0ea50513          	addi	a0,a0,234 # 5c98 <malloc+0x248>$/;"	l
bb4	user/grind.asm	/^     bb4:	e406                	sd	ra,8(sp)$/;"	l
bb4	user/sh.asm	/^     bb4:	0785                	addi	a5,a5,1$/;"	l
bb4	user/symlinktest.asm	/^ bb4:	00000097          	auipc	ra,0x0$/;"	l
bb6	user/grind.asm	/^     bb6:	e022                	sd	s0,0(sp)$/;"	l
bb6	user/sh.asm	/^     bb6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
bb6	user/usertests.asm	/^     bb6:	00005097          	auipc	ra,0x5$/;"	l
bb8	user/grind.asm	/^     bb8:	0800                	addi	s0,sp,16$/;"	l
bb8	user/symlinktest.asm	/^ bb8:	e56080e7          	jalr	-426(ra) # a0a <printint>$/;"	l
bba	user/grind.asm	/^     bba:	a811                	j	bce <main+0x1c>$/;"	l
bba	user/sh.asm	/^     bba:	fb7d                	bnez	a4,bb0 <strlen+0x14>$/;"	l
bba	user/usertests.asm	/^     bba:	a9c080e7          	jalr	-1380(ra) # 5652 <open>$/;"	l
bbc	user/grind.asm	/^     bbc:	00000097          	auipc	ra,0x0$/;"	l
bbc	user/sh.asm	/^     bbc:	6422                	ld	s0,8(sp)$/;"	l
bbc	user/symlinktest.asm	/^ bbc:	8b4a                	mv	s6,s2$/;"	l
bbe	user/sh.asm	/^     bbe:	0141                	addi	sp,sp,16$/;"	l
bbe	user/symlinktest.asm	/^ bbe:	4981                	li	s3,0$/;"	l
bbe	user/usertests.asm	/^     bbe:	84aa                	mv	s1,a0$/;"	l
bc	user/bigfile.asm	/^  bc:	00000097          	auipc	ra,0x0$/;"	l
bc	user/echo.asm	/^  bc:	fbe5                	bnez	a5,ac <strcmp+0xc>$/;"	l
bc	user/forktest.asm	/^  bc:	00000097          	auipc	ra,0x0$/;"	l
bc	user/grind.asm	/^      bc:	00001517          	auipc	a0,0x1$/;"	l
bc	user/init.asm	/^  bc:	4505                	li	a0,1$/;"	l
bc	user/kill.asm	/^  bc:	4685                	li	a3,1$/;"	l
bc	user/ln.asm	/^  bc:	00f6853b          	addw	a0,a3,a5$/;"	l
bc	user/ls.asm	/^  bc:	26813023          	sd	s0,608(sp)$/;"	l
bc	user/mkdir.asm	/^  bc:	0141                	addi	sp,sp,16$/;"	l
bc	user/rm.asm	/^  bc:	0141                	addi	sp,sp,16$/;"	l
bc	user/symlinktest.asm	/^  bc:	00001097          	auipc	ra,0x1$/;"	l
bc	user/usertests.asm	/^      bc:	00005097          	auipc	ra,0x5$/;"	l
bc	user/zombie.asm	/^  bc:	8082                	ret$/;"	l
bc0	user/grind.asm	/^     bc0:	f00080e7          	jalr	-256(ra) # abc <iter>$/;"	l
bc0	user/sh.asm	/^     bc0:	8082                	ret$/;"	l
bc0	user/symlinktest.asm	/^ bc0:	bf91                	j	b14 <vprintf+0x60>$/;"	l
bc0	user/usertests.asm	/^     bc0:	0c054863          	bltz	a0,c90 <unlinkread+0x12a>$/;"	l
bc2	user/sh.asm	/^     bc2:	4501                	li	a0,0$/;"	l
bc2	user/symlinktest.asm	/^ bc2:	008b0793          	addi	a5,s6,8$/;"	l
bc4	user/grind.asm	/^     bc4:	4551                	li	a0,20$/;"	l
bc4	user/sh.asm	/^     bc4:	bfe5                	j	bbc <strlen+0x20>$/;"	l
bc4	user/usertests.asm	/^     bc4:	00005517          	auipc	a0,0x5$/;"	l
bc6	user/grind.asm	/^     bc6:	00000097          	auipc	ra,0x0$/;"	l
bc6	user/sh.asm	/^     bc6:	1141                	addi	sp,sp,-16$/;"	l
bc6	user/symlinktest.asm	/^ bc6:	f8f43423          	sd	a5,-120(s0)$/;"	l
bc8	user/sh.asm	/^     bc8:	e422                	sd	s0,8(sp)$/;"	l
bc8	user/usertests.asm	/^     bc8:	0d450513          	addi	a0,a0,212 # 5c98 <malloc+0x248>$/;"	l
bca	user/grind.asm	/^     bca:	320080e7          	jalr	800(ra) # ee6 <sleep>$/;"	l
bca	user/sh.asm	/^     bca:	0800                	addi	s0,sp,16$/;"	l
bca	user/symlinktest.asm	/^ bca:	000b3983          	ld	s3,0(s6)$/;"	l
bcache	kernel/bio.c	/^} bcache;$/;"	v	typeref:struct:__anon6a7165400108
bcc	user/sh.asm	/^     bcc:	ca19                	beqz	a2,be2 <memset+0x1c>$/;"	l
bcc	user/usertests.asm	/^     bcc:	00005097          	auipc	ra,0x5$/;"	l
bce	user/grind.asm	/^     bce:	00000097          	auipc	ra,0x0$/;"	l
bce	user/sh.asm	/^     bce:	87aa                	mv	a5,a0$/;"	l
bce	user/symlinktest.asm	/^ bce:	03000593          	li	a1,48$/;"	l
bcmd	user/sh.asm	/^    bcmd = (struct backcmd*)cmd;$/;"	d
bd0	user/sh.asm	/^     bd0:	1602                	slli	a2,a2,0x20$/;"	l
bd0	user/usertests.asm	/^     bd0:	a96080e7          	jalr	-1386(ra) # 5662 <unlink>$/;"	l
bd2	user/grind.asm	/^     bd2:	280080e7          	jalr	640(ra) # e4e <fork>$/;"	l
bd2	user/sh.asm	/^     bd2:	9201                	srli	a2,a2,0x20$/;"	l
bd2	user/symlinktest.asm	/^ bd2:	8556                	mv	a0,s5$/;"	l
bd4	user/sh.asm	/^     bd4:	00a60733          	add	a4,a2,a0$/;"	l
bd4	user/symlinktest.asm	/^ bd4:	00000097          	auipc	ra,0x0$/;"	l
bd4	user/usertests.asm	/^     bd4:	ed61                	bnez	a0,cac <unlinkread+0x146>$/;"	l
bd6	user/grind.asm	/^     bd6:	d17d                	beqz	a0,bbc <main+0xa>$/;"	l
bd6	user/usertests.asm	/^     bd6:	20200593          	li	a1,514$/;"	l
bd8	user/grind.asm	/^     bd8:	fea056e3          	blez	a0,bc4 <main+0x12>$/;"	l
bd8	user/sh.asm	/^     bd8:	00b78023          	sb	a1,0(a5)$/;"	l
bd8	user/symlinktest.asm	/^ bd8:	e14080e7          	jalr	-492(ra) # 9e8 <putc>$/;"	l
bda	user/usertests.asm	/^     bda:	00005517          	auipc	a0,0x5$/;"	l
bdc	user/grind.asm	/^     bdc:	4501                	li	a0,0$/;"	l
bdc	user/sh.asm	/^     bdc:	0785                	addi	a5,a5,1$/;"	l
bdc	user/symlinktest.asm	/^ bdc:	85ea                	mv	a1,s10$/;"	l
bde	user/grind.asm	/^     bde:	00000097          	auipc	ra,0x0$/;"	l
bde	user/sh.asm	/^     bde:	fee79de3          	bne	a5,a4,bd8 <memset+0x12>$/;"	l
bde	user/symlinktest.asm	/^ bde:	8556                	mv	a0,s5$/;"	l
bde	user/usertests.asm	/^     bde:	0be50513          	addi	a0,a0,190 # 5c98 <malloc+0x248>$/;"	l
be	user/cat.asm	/^  be:	312080e7          	jalr	786(ra) # 3cc <open>$/;"	l
be	user/echo.asm	/^  be:	0005c503          	lbu	a0,0(a1)$/;"	l
be	user/grep.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	user/init.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	user/kill.asm	/^  be:	9e89                	subw	a3,a3,a0$/;"	l
be	user/mkdir.asm	/^  be:	8082                	ret$/;"	l
be	user/rm.asm	/^  be:	8082                	ret$/;"	l
be	user/sh.asm	/^      be:	00056783          	lwu	a5,0(a0)$/;"	l
be	user/stressfs.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	user/wc.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	user/zombie.asm	/^  be:	1141                	addi	sp,sp,-16$/;"	l
be0	user/symlinktest.asm	/^ be0:	00000097          	auipc	ra,0x0$/;"	l
be2	user/grind.asm	/^     be2:	280080e7          	jalr	640(ra) # e5e <wait>$/;"	l
be2	user/sh.asm	/^     be2:	6422                	ld	s0,8(sp)$/;"	l
be2	user/usertests.asm	/^     be2:	00005097          	auipc	ra,0x5$/;"	l
be4	user/sh.asm	/^     be4:	0141                	addi	sp,sp,16$/;"	l
be4	user/symlinktest.asm	/^ be4:	e08080e7          	jalr	-504(ra) # 9e8 <putc>$/;"	l
be6	user/grind.asm	/^     be6:	bff9                	j	bc4 <main+0x12>$/;"	l
be6	user/sh.asm	/^     be6:	8082                	ret$/;"	l
be6	user/usertests.asm	/^     be6:	a70080e7          	jalr	-1424(ra) # 5652 <open>$/;"	l
be8	user/grind.asm	/^     be8:	1141                	addi	sp,sp,-16$/;"	l
be8	user/sh.asm	/^     be8:	1141                	addi	sp,sp,-16$/;"	l
be8	user/symlinktest.asm	/^ be8:	4941                	li	s2,16$/;"	l
bea	user/grind.asm	/^     bea:	e422                	sd	s0,8(sp)$/;"	l
bea	user/sh.asm	/^     bea:	e422                	sd	s0,8(sp)$/;"	l
bea	user/symlinktest.asm	/^ bea:	03c9d793          	srli	a5,s3,0x3c$/;"	l
bea	user/usertests.asm	/^     bea:	892a                	mv	s2,a0$/;"	l
bec	user/grind.asm	/^     bec:	0800                	addi	s0,sp,16$/;"	l
bec	user/sh.asm	/^     bec:	0800                	addi	s0,sp,16$/;"	l
bec	user/usertests.asm	/^     bec:	460d                	li	a2,3$/;"	l
bee	user/grind.asm	/^     bee:	87aa                	mv	a5,a0$/;"	l
bee	user/sh.asm	/^     bee:	00054783          	lbu	a5,0(a0)$/;"	l
bee	user/symlinktest.asm	/^ bee:	97de                	add	a5,a5,s7$/;"	l
bee	user/usertests.asm	/^     bee:	00005597          	auipc	a1,0x5$/;"	l
begin_op	kernel/log.c	/^begin_op(void)$/;"	f	typeref:typename:void
bf0	user/grind.asm	/^     bf0:	0585                	addi	a1,a1,1$/;"	l
bf0	user/symlinktest.asm	/^ bf0:	0007c583          	lbu	a1,0(a5)$/;"	l
bf2	user/grind.asm	/^     bf2:	0785                	addi	a5,a5,1$/;"	l
bf2	user/sh.asm	/^     bf2:	cb99                	beqz	a5,c08 <strchr+0x20>$/;"	l
bf2	user/usertests.asm	/^     bf2:	7c258593          	addi	a1,a1,1986 # 63b0 <malloc+0x960>$/;"	l
bf4	user/grind.asm	/^     bf4:	fff5c703          	lbu	a4,-1(a1)$/;"	l
bf4	user/sh.asm	/^     bf4:	00f58763          	beq	a1,a5,c02 <strchr+0x1a>$/;"	l
bf4	user/symlinktest.asm	/^ bf4:	8556                	mv	a0,s5$/;"	l
bf6	user/symlinktest.asm	/^ bf6:	00000097          	auipc	ra,0x0$/;"	l
bf6	user/usertests.asm	/^     bf6:	00005097          	auipc	ra,0x5$/;"	l
bf8	user/grind.asm	/^     bf8:	fee78fa3          	sb	a4,-1(a5)$/;"	l
bf8	user/sh.asm	/^     bf8:	0505                	addi	a0,a0,1$/;"	l
bfa	user/sh.asm	/^     bfa:	00054783          	lbu	a5,0(a0)$/;"	l
bfa	user/symlinktest.asm	/^ bfa:	df2080e7          	jalr	-526(ra) # 9e8 <putc>$/;"	l
bfa	user/usertests.asm	/^     bfa:	a3c080e7          	jalr	-1476(ra) # 5632 <write>$/;"	l
bfc	user/grind.asm	/^     bfc:	fb75                	bnez	a4,bf0 <strcpy+0x8>$/;"	l
bfe	user/grind.asm	/^     bfe:	6422                	ld	s0,8(sp)$/;"	l
bfe	user/sh.asm	/^     bfe:	fbfd                	bnez	a5,bf4 <strchr+0xc>$/;"	l
bfe	user/symlinktest.asm	/^ bfe:	0992                	slli	s3,s3,0x4$/;"	l
bfe	user/usertests.asm	/^     bfe:	854a                	mv	a0,s2$/;"	l
bfree	kernel/fs.c	/^bfree(int dev, uint b)$/;"	f	typeref:typename:void	file:
bget	kernel/bio.c	/^bget(uint dev, uint blockno)$/;"	f	typeref:struct:buf *	file:
bi	kernel/kernel.asm	/^  bi = b % BPB;$/;"	d
bigargtest	user/usertests.c	/^bigargtest(char *s)$/;"	f	typeref:typename:void
bigdir	user/usertests.c	/^bigdir(char *s)$/;"	f	typeref:typename:void
bigfile	user/usertests.c	/^bigfile(char *s)$/;"	f	typeref:typename:void
bigwrite	user/usertests.c	/^bigwrite(char *s)$/;"	f	typeref:typename:void
binit	kernel/bio.c	/^binit(void)$/;"	f	typeref:typename:void
block	kernel/log.c	/^  int block[LOGSIZE];$/;"	m	struct:logheader	typeref:typename:int[]	file:
blockno	kernel/buf.h	/^  uint blockno;$/;"	m	struct:buf	typeref:typename:uint
bmap	kernel/fs.c	/^bmap(struct inode *ip, uint bn)$/;"	f	typeref:typename:uint	file:
bmapstart	kernel/fs.h	/^  uint bmapstart;    \/\/ Block number of first free map block$/;"	m	struct:superblock	typeref:typename:uint
bp	kernel/kernel.asm	/^    bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(dev, IBLOCK(inum, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, addr); $/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, addr); \/\/precitame dany blok$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, bmap(ip, off\/BSIZE));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, ip->addrs[NDIRECT + 1]);$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, ip->addrs[NDIRECT]);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, 1);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, bno);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	user/bigfile.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/cat.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/echo.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/grep.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/grind.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/init.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/kill.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/ln.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/ls.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/mkdir.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/rm.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/sh.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/stressfs.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/symlinktest.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/usertests.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/wc.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/zombie.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp2	kernel/kernel.asm	/^	bp2 = bread(ip->dev, a[j]);$/;"	d
bp3	kernel/kernel.asm	/^	    bp3 = bread(ip->dev, a2[i]);$/;"	d
bpin	kernel/bio.c	/^bpin(struct buf *b) {$/;"	f	typeref:typename:void
bread	kernel/bio.c	/^bread(uint dev, uint blockno)$/;"	f	typeref:struct:buf *
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
brelse	kernel/bio.c	/^brelse(struct buf *b)$/;"	f	typeref:typename:void
bsstest	user/usertests.c	/^bsstest(char *s)$/;"	f	typeref:typename:void
buf	gradelib.py	/^            buf = bytearray()$/;"	v	class:shell_script.setup_call_on_line.context
buf	kernel/bio.c	/^  struct buf buf[NBUF];$/;"	m	struct:__anon6a7165400108	typeref:struct:buf[]	file:
buf	kernel/buf.h	/^struct buf {$/;"	s
buf	kernel/console.c	/^  char buf[INPUT_BUF];$/;"	m	struct:__anonb6393d190108	typeref:typename:char[]	file:
buf	user/cat.c	/^char buf[512];$/;"	v	typeref:typename:char[512]
buf	user/grep.c	/^char buf[1024];$/;"	v	typeref:typename:char[1024]
buf	user/usertests.c	/^char buf[BUFSZ];$/;"	v	typeref:typename:char[]
buf	user/wc.c	/^char buf[512];$/;"	v	typeref:typename:char[512]
bunpin	kernel/bio.c	/^bunpin(struct buf *b) {$/;"	f	typeref:typename:void
bwrite	kernel/bio.c	/^bwrite(struct buf *b)$/;"	f	typeref:typename:void
bzero	kernel/fs.c	/^bzero(int dev, int bno)$/;"	f	typeref:typename:void	file:
c	kernel/kernel.asm	/^      c = (c == '\\r') ? '\\n' : c;$/;"	d
c	kernel/kernel.asm	/^    c = cons.buf[cons.r++ % INPUT_BUF];$/;"	d
c	kernel/kernel.asm	/^    c = fmt[++i] & 0xff;$/;"	d
c	user/bigfile.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/bigfile.asm	/^   c:	40913c23          	sd	s1,1048(sp)$/;"	l
c	user/cat.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/cat.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/echo.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/echo.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	user/forktest.asm	/^   c:	00000097          	auipc	ra,0x0$/;"	l
c	user/grep.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/grep.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	user/grind.asm	/^       c:	ffe74713          	xori	a4,a4,-2$/;"	l
c	user/grind.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/init.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/init.asm	/^   c:	4589                	li	a1,2$/;"	l
c	user/initcode.asm	/^   c:	00058593          	mv	a1,a1$/;"	l
c	user/kill.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/kill.asm	/^   c:	4785                	li	a5,1$/;"	l
c	user/ln.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/ln.asm	/^   c:	02f50063          	beq	a0,a5,2c <main+0x2c>$/;"	l
c	user/ls.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/ls.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/mkdir.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/mkdir.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/rm.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/rm.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	user/sh.asm	/^       c:	84aa                	mv	s1,a0$/;"	l
c	user/sh.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/stressfs.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/stressfs.asm	/^   c:	20913c23          	sd	s1,536(sp)$/;"	l
c	user/symlinktest.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/symlinktest.asm	/^   c:	10000593          	li	a1,256$/;"	l
c	user/symlinktest.asm	/^  c = '#';$/;"	d
c	user/usertests.asm	/^       c:	4505                	li	a0,1$/;"	l
c	user/usertests.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/usertests.asm	/^  c = sbrk(-(sbrk(0) - oldbrk));$/;"	d
c	user/usertests.asm	/^  c = sbrk(-PGSIZE);$/;"	d
c	user/usertests.asm	/^  c = sbrk(0);$/;"	d
c	user/usertests.asm	/^  c = sbrk(1);$/;"	d
c	user/usertests.asm	/^  c = sbrk(PGSIZE);$/;"	d
c	user/wc.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/wc.asm	/^   c:	e8d2                	sd	s4,80(sp)$/;"	l
c	user/zombie.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	user/zombie.asm	/^   c:	288080e7          	jalr	648(ra) # 290 <fork>$/;"	l
c0	user/bigfile.asm	/^  c0:	6bc080e7          	jalr	1724(ra) # 778 <printf>$/;"	l
c0	user/forktest.asm	/^  c0:	f44080e7          	jalr	-188(ra) # 0 <print>$/;"	l
c0	user/grind.asm	/^      c0:	2c450513          	addi	a0,a0,708 # 1380 <malloc+0xec>$/;"	l
c0	user/kill.asm	/^  c0:	00f6853b          	addw	a0,a3,a5$/;"	l
c0	user/ln.asm	/^  c0:	0785                	addi	a5,a5,1$/;"	l
c0	user/ls.asm	/^  c0:	24913c23          	sd	s1,600(sp)$/;"	l
c0	user/mkdir.asm	/^  c0:	1141                	addi	sp,sp,-16$/;"	l
c0	user/rm.asm	/^  c0:	1141                	addi	sp,sp,-16$/;"	l
c0	user/symlinktest.asm	/^  c0:	8d4080e7          	jalr	-1836(ra) # 990 <unlink>$/;"	l
c0	user/usertests.asm	/^      c0:	57e080e7          	jalr	1406(ra) # 563a <close>$/;"	l
c0	user/zombie.asm	/^  c0:	e422                	sd	s0,8(sp)$/;"	l
c00	user/grind.asm	/^     c00:	0141                	addi	sp,sp,16$/;"	l
c00	user/sh.asm	/^     c00:	4501                	li	a0,0$/;"	l
c00	user/symlinktest.asm	/^ c00:	397d                	addiw	s2,s2,-1$/;"	l
c00	user/usertests.asm	/^     c00:	00005097          	auipc	ra,0x5$/;"	l
c02	user/grind.asm	/^     c02:	8082                	ret$/;"	l
c02	user/sh.asm	/^     c02:	6422                	ld	s0,8(sp)$/;"	l
c02	user/symlinktest.asm	/^ c02:	fe0914e3          	bnez	s2,bea <vprintf+0x136>$/;"	l
c04	user/grind.asm	/^     c04:	1141                	addi	sp,sp,-16$/;"	l
c04	user/sh.asm	/^     c04:	0141                	addi	sp,sp,16$/;"	l
c04	user/usertests.asm	/^     c04:	a3a080e7          	jalr	-1478(ra) # 563a <close>$/;"	l
c06	user/grind.asm	/^     c06:	e422                	sd	s0,8(sp)$/;"	l
c06	user/sh.asm	/^     c06:	8082                	ret$/;"	l
c06	user/symlinktest.asm	/^ c06:	f8843b03          	ld	s6,-120(s0)$/;"	l
c08	user/grind.asm	/^     c08:	0800                	addi	s0,sp,16$/;"	l
c08	user/sh.asm	/^     c08:	4501                	li	a0,0$/;"	l
c08	user/usertests.asm	/^     c08:	660d                	lui	a2,0x3$/;"	l
c0a	user/grind.asm	/^     c0a:	00054783          	lbu	a5,0(a0)$/;"	l
c0a	user/sh.asm	/^     c0a:	bfe5                	j	c02 <strchr+0x1a>$/;"	l
c0a	user/symlinktest.asm	/^ c0a:	4981                	li	s3,0$/;"	l
c0a	user/usertests.asm	/^     c0a:	0000b597          	auipc	a1,0xb$/;"	l
c0c	user/sh.asm	/^     c0c:	711d                	addi	sp,sp,-96$/;"	l
c0c	user/symlinktest.asm	/^ c0c:	b721                	j	b14 <vprintf+0x60>$/;"	l
c0e	user/grind.asm	/^     c0e:	cb91                	beqz	a5,c22 <strcmp+0x1e>$/;"	l
c0e	user/sh.asm	/^     c0e:	ec86                	sd	ra,88(sp)$/;"	l
c0e	user/symlinktest.asm	/^ c0e:	008b0993          	addi	s3,s6,8$/;"	l
c0e	user/usertests.asm	/^     c0e:	e9e58593          	addi	a1,a1,-354 # baa8 <buf>$/;"	l
c10	user/grind.asm	/^     c10:	0005c703          	lbu	a4,0(a1)$/;"	l
c10	user/sh.asm	/^     c10:	e8a2                	sd	s0,80(sp)$/;"	l
c12	user/sh.asm	/^     c12:	e4a6                	sd	s1,72(sp)$/;"	l
c12	user/symlinktest.asm	/^ c12:	000b3903          	ld	s2,0(s6)$/;"	l
c12	user/usertests.asm	/^     c12:	8526                	mv	a0,s1$/;"	l
c14	user/grind.asm	/^     c14:	00f71763          	bne	a4,a5,c22 <strcmp+0x1e>$/;"	l
c14	user/sh.asm	/^     c14:	e0ca                	sd	s2,64(sp)$/;"	l
c14	user/usertests.asm	/^     c14:	00005097          	auipc	ra,0x5$/;"	l
c16	user/sh.asm	/^     c16:	fc4e                	sd	s3,56(sp)$/;"	l
c16	user/symlinktest.asm	/^ c16:	02090163          	beqz	s2,c38 <vprintf+0x184>$/;"	l
c18	user/grind.asm	/^     c18:	0505                	addi	a0,a0,1$/;"	l
c18	user/sh.asm	/^     c18:	f852                	sd	s4,48(sp)$/;"	l
c18	user/usertests.asm	/^     c18:	a16080e7          	jalr	-1514(ra) # 562a <read>$/;"	l
c1a	user/grind.asm	/^     c1a:	0585                	addi	a1,a1,1$/;"	l
c1a	user/sh.asm	/^     c1a:	f456                	sd	s5,40(sp)$/;"	l
c1a	user/symlinktest.asm	/^ c1a:	00094583          	lbu	a1,0(s2)$/;"	l
c1c	user/grind.asm	/^     c1c:	00054783          	lbu	a5,0(a0)$/;"	l
c1c	user/sh.asm	/^     c1c:	f05a                	sd	s6,32(sp)$/;"	l
c1c	user/usertests.asm	/^     c1c:	4795                	li	a5,5$/;"	l
c1e	user/sh.asm	/^     c1e:	ec5e                	sd	s7,24(sp)$/;"	l
c1e	user/symlinktest.asm	/^ c1e:	c9a1                	beqz	a1,c6e <vprintf+0x1ba>$/;"	l
c1e	user/usertests.asm	/^     c1e:	0af51563          	bne	a0,a5,cc8 <unlinkread+0x162>$/;"	l
c2	user/cat.asm	/^  c2:	84aa                	mv	s1,a0$/;"	l
c2	user/echo.asm	/^  c2:	40a7853b          	subw	a0,a5,a0$/;"	l
c2	user/grep.asm	/^  c2:	f90080e7          	jalr	-112(ra) # 4e <matchhere>$/;"	l
c2	user/init.asm	/^  c2:	2a8080e7          	jalr	680(ra) # 366 <exit>$/;"	l
c2	user/ln.asm	/^  c2:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c2	user/mkdir.asm	/^  c2:	e422                	sd	s0,8(sp)$/;"	l
c2	user/rm.asm	/^  c2:	e422                	sd	s0,8(sp)$/;"	l
c2	user/sh.asm	/^      c2:	078a                	slli	a5,a5,0x2$/;"	l
c2	user/stressfs.asm	/^  c2:	63c080e7          	jalr	1596(ra) # 6fa <printf>$/;"	l
c2	user/wc.asm	/^  c2:	6c6080e7          	jalr	1734(ra) # 784 <printf>$/;"	l
c2	user/zombie.asm	/^  c2:	0800                	addi	s0,sp,16$/;"	l
c20	user/grind.asm	/^     c20:	fbe5                	bnez	a5,c10 <strcmp+0xc>$/;"	l
c20	user/sh.asm	/^     c20:	1080                	addi	s0,sp,96$/;"	l
c20	user/symlinktest.asm	/^ c20:	8556                	mv	a0,s5$/;"	l
c22	user/grind.asm	/^     c22:	0005c503          	lbu	a0,0(a1)$/;"	l
c22	user/sh.asm	/^     c22:	8baa                	mv	s7,a0$/;"	l
c22	user/symlinktest.asm	/^ c22:	00000097          	auipc	ra,0x0$/;"	l
c22	user/usertests.asm	/^     c22:	0000b717          	auipc	a4,0xb$/;"	l
c24	user/sh.asm	/^     c24:	8a2e                	mv	s4,a1$/;"	l
c26	user/grind.asm	/^     c26:	40a7853b          	subw	a0,a5,a0$/;"	l
c26	user/sh.asm	/^     c26:	892a                	mv	s2,a0$/;"	l
c26	user/symlinktest.asm	/^ c26:	dc6080e7          	jalr	-570(ra) # 9e8 <putc>$/;"	l
c26	user/usertests.asm	/^     c26:	e8674703          	lbu	a4,-378(a4) # baa8 <buf>$/;"	l
c28	user/sh.asm	/^     c28:	4481                	li	s1,0$/;"	l
c2a	user/grind.asm	/^     c2a:	6422                	ld	s0,8(sp)$/;"	l
c2a	user/sh.asm	/^     c2a:	4aa9                	li	s5,10$/;"	l
c2a	user/symlinktest.asm	/^ c2a:	0905                	addi	s2,s2,1$/;"	l
c2a	user/usertests.asm	/^     c2a:	06800793          	li	a5,104$/;"	l
c2c	user/grind.asm	/^     c2c:	0141                	addi	sp,sp,16$/;"	l
c2c	user/sh.asm	/^     c2c:	4b35                	li	s6,13$/;"	l
c2c	user/symlinktest.asm	/^ c2c:	00094583          	lbu	a1,0(s2)$/;"	l
c2e	user/grind.asm	/^     c2e:	8082                	ret$/;"	l
c2e	user/sh.asm	/^     c2e:	89a6                	mv	s3,s1$/;"	l
c2e	user/usertests.asm	/^     c2e:	0af71b63          	bne	a4,a5,ce4 <unlinkread+0x17e>$/;"	l
c30	user/grind.asm	/^     c30:	1141                	addi	sp,sp,-16$/;"	l
c30	user/sh.asm	/^     c30:	2485                	addiw	s1,s1,1$/;"	l
c30	user/symlinktest.asm	/^ c30:	f9e5                	bnez	a1,c20 <vprintf+0x16c>$/;"	l
c32	user/grind.asm	/^     c32:	e422                	sd	s0,8(sp)$/;"	l
c32	user/sh.asm	/^     c32:	0344d863          	bge	s1,s4,c62 <gets+0x56>$/;"	l
c32	user/symlinktest.asm	/^ c32:	8b4e                	mv	s6,s3$/;"	l
c32	user/usertests.asm	/^     c32:	4629                	li	a2,10$/;"	l
c34	user/grind.asm	/^     c34:	0800                	addi	s0,sp,16$/;"	l
c34	user/symlinktest.asm	/^ c34:	4981                	li	s3,0$/;"	l
c34	user/usertests.asm	/^     c34:	0000b597          	auipc	a1,0xb$/;"	l
c36	user/grind.asm	/^     c36:	00054783          	lbu	a5,0(a0)$/;"	l
c36	user/sh.asm	/^     c36:	4605                	li	a2,1$/;"	l
c36	user/symlinktest.asm	/^ c36:	bdf9                	j	b14 <vprintf+0x60>$/;"	l
c38	user/sh.asm	/^     c38:	faf40593          	addi	a1,s0,-81$/;"	l
c38	user/symlinktest.asm	/^ c38:	00000917          	auipc	s2,0x0$/;"	l
c38	user/usertests.asm	/^     c38:	e7458593          	addi	a1,a1,-396 # baa8 <buf>$/;"	l
c3a	user/grind.asm	/^     c3a:	cf91                	beqz	a5,c56 <strlen+0x26>$/;"	l
c3c	user/grind.asm	/^     c3c:	0505                	addi	a0,a0,1$/;"	l
c3c	user/sh.asm	/^     c3c:	4501                	li	a0,0$/;"	l
c3c	user/symlinktest.asm	/^ c3c:	6c890913          	addi	s2,s2,1736 # 1300 <malloc+0x582>$/;"	l
c3c	user/usertests.asm	/^     c3c:	8526                	mv	a0,s1$/;"	l
c3e	user/grind.asm	/^     c3e:	87aa                	mv	a5,a0$/;"	l
c3e	user/sh.asm	/^     c3e:	00000097          	auipc	ra,0x0$/;"	l
c3e	user/usertests.asm	/^     c3e:	00005097          	auipc	ra,0x5$/;"	l
c4	user/bigfile.asm	/^  c4:	557d                	li	a0,-1$/;"	l
c4	user/cat.asm	/^  c4:	02054d63          	bltz	a0,fe <main+0x74>$/;"	l
c4	user/forktest.asm	/^  c4:	60e2                	ld	ra,24(sp)$/;"	l
c4	user/grind.asm	/^      c4:	00001097          	auipc	ra,0x1$/;"	l
c4	user/kill.asm	/^  c4:	0785                	addi	a5,a5,1$/;"	l
c4	user/ls.asm	/^  c4:	25213823          	sd	s2,592(sp)$/;"	l
c4	user/mkdir.asm	/^  c4:	0800                	addi	s0,sp,16$/;"	l
c4	user/rm.asm	/^  c4:	0800                	addi	s0,sp,16$/;"	l
c4	user/sh.asm	/^      c4:	00001717          	auipc	a4,0x1$/;"	l
c4	user/symlinktest.asm	/^  c4:	00001517          	auipc	a0,0x1$/;"	l
c4	user/usertests.asm	/^      c4:	4581                	li	a1,0$/;"	l
c4	user/zombie.asm	/^  c4:	00054783          	lbu	a5,0(a0)$/;"	l
c40	user/grind.asm	/^     c40:	4685                	li	a3,1$/;"	l
c40	user/symlinktest.asm	/^ c40:	02800593          	li	a1,40$/;"	l
c42	user/grind.asm	/^     c42:	9e89                	subw	a3,a3,a0$/;"	l
c42	user/sh.asm	/^     c42:	19c080e7          	jalr	412(ra) # dda <read>$/;"	l
c42	user/usertests.asm	/^     c42:	9f4080e7          	jalr	-1548(ra) # 5632 <write>$/;"	l
c44	user/grind.asm	/^     c44:	00f6853b          	addw	a0,a3,a5$/;"	l
c44	user/symlinktest.asm	/^ c44:	bff1                	j	c20 <vprintf+0x16c>$/;"	l
c46	user/sh.asm	/^     c46:	00a05e63          	blez	a0,c62 <gets+0x56>$/;"	l
c46	user/symlinktest.asm	/^ c46:	008b0913          	addi	s2,s6,8$/;"	l
c46	user/usertests.asm	/^     c46:	47a9                	li	a5,10$/;"	l
c48	user/grind.asm	/^     c48:	0785                	addi	a5,a5,1$/;"	l
c48	user/usertests.asm	/^     c48:	0af51c63          	bne	a0,a5,d00 <unlinkread+0x19a>$/;"	l
c4a	user/grind.asm	/^     c4a:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c4a	user/sh.asm	/^     c4a:	faf44783          	lbu	a5,-81(s0)$/;"	l
c4a	user/symlinktest.asm	/^ c4a:	000b4583          	lbu	a1,0(s6)$/;"	l
c4c	user/usertests.asm	/^     c4c:	8526                	mv	a0,s1$/;"	l
c4e	user/grind.asm	/^     c4e:	fb7d                	bnez	a4,c44 <strlen+0x14>$/;"	l
c4e	user/sh.asm	/^     c4e:	00f90023          	sb	a5,0(s2)$/;"	l
c4e	user/symlinktest.asm	/^ c4e:	8556                	mv	a0,s5$/;"	l
c4e	user/usertests.asm	/^     c4e:	00005097          	auipc	ra,0x5$/;"	l
c50	user/grind.asm	/^     c50:	6422                	ld	s0,8(sp)$/;"	l
c50	user/symlinktest.asm	/^ c50:	00000097          	auipc	ra,0x0$/;"	l
c52	user/grind.asm	/^     c52:	0141                	addi	sp,sp,16$/;"	l
c52	user/sh.asm	/^     c52:	01578763          	beq	a5,s5,c60 <gets+0x54>$/;"	l
c52	user/usertests.asm	/^     c52:	9ec080e7          	jalr	-1556(ra) # 563a <close>$/;"	l
c54	user/grind.asm	/^     c54:	8082                	ret$/;"	l
c54	user/symlinktest.asm	/^ c54:	d98080e7          	jalr	-616(ra) # 9e8 <putc>$/;"	l
c56	user/grind.asm	/^     c56:	4501                	li	a0,0$/;"	l
c56	user/sh.asm	/^     c56:	0905                	addi	s2,s2,1$/;"	l
c56	user/usertests.asm	/^     c56:	00005517          	auipc	a0,0x5$/;"	l
c58	user/grind.asm	/^     c58:	bfe5                	j	c50 <strlen+0x20>$/;"	l
c58	user/sh.asm	/^     c58:	fd679be3          	bne	a5,s6,c2e <gets+0x22>$/;"	l
c58	user/symlinktest.asm	/^ c58:	8b4a                	mv	s6,s2$/;"	l
c5a	user/grind.asm	/^     c5a:	1141                	addi	sp,sp,-16$/;"	l
c5a	user/symlinktest.asm	/^ c5a:	4981                	li	s3,0$/;"	l
c5a	user/usertests.asm	/^     c5a:	04250513          	addi	a0,a0,66 # 5c98 <malloc+0x248>$/;"	l
c5c	user/grind.asm	/^     c5c:	e422                	sd	s0,8(sp)$/;"	l
c5c	user/sh.asm	/^     c5c:	89a6                	mv	s3,s1$/;"	l
c5c	user/symlinktest.asm	/^ c5c:	bd65                	j	b14 <vprintf+0x60>$/;"	l
c5e	user/grind.asm	/^     c5e:	0800                	addi	s0,sp,16$/;"	l
c5e	user/sh.asm	/^     c5e:	a011                	j	c62 <gets+0x56>$/;"	l
c5e	user/symlinktest.asm	/^ c5e:	85d2                	mv	a1,s4$/;"	l
c5e	user/usertests.asm	/^     c5e:	00005097          	auipc	ra,0x5$/;"	l
c6	user/bigfile.asm	/^  c6:	00000097          	auipc	ra,0x0$/;"	l
c6	user/echo.asm	/^  c6:	6422                	ld	s0,8(sp)$/;"	l
c6	user/forktest.asm	/^  c6:	6442                	ld	s0,16(sp)$/;"	l
c6	user/grep.asm	/^  c6:	b7c9                	j	88 <matchhere+0x3a>$/;"	l
c6	user/init.asm	/^  c6:	00001597          	auipc	a1,0x1$/;"	l
c6	user/kill.asm	/^  c6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c6	user/ln.asm	/^  c6:	fb7d                	bnez	a4,bc <strlen+0x14>$/;"	l
c6	user/mkdir.asm	/^  c6:	00054783          	lbu	a5,0(a0)$/;"	l
c6	user/rm.asm	/^  c6:	00054783          	lbu	a5,0(a0)$/;"	l
c6	user/stressfs.asm	/^  c6:	4581                	li	a1,0$/;"	l
c6	user/usertests.asm	/^      c6:	00006517          	auipc	a0,0x6$/;"	l
c6	user/wc.asm	/^  c6:	70e6                	ld	ra,120(sp)$/;"	l
c60	user/grind.asm	/^     c60:	ca19                	beqz	a2,c76 <memset+0x1c>$/;"	l
c60	user/sh.asm	/^     c60:	89a6                	mv	s3,s1$/;"	l
c60	user/symlinktest.asm	/^ c60:	8556                	mv	a0,s5$/;"	l
c62	user/grind.asm	/^     c62:	87aa                	mv	a5,a0$/;"	l
c62	user/sh.asm	/^     c62:	99de                	add	s3,s3,s7$/;"	l
c62	user/symlinktest.asm	/^ c62:	00000097          	auipc	ra,0x0$/;"	l
c62	user/usertests.asm	/^     c62:	a04080e7          	jalr	-1532(ra) # 5662 <unlink>$/;"	l
c64	user/grind.asm	/^     c64:	1602                	slli	a2,a2,0x20$/;"	l
c64	user/sh.asm	/^     c64:	00098023          	sb	zero,0(s3)$/;"	l
c66	user/grind.asm	/^     c66:	9201                	srli	a2,a2,0x20$/;"	l
c66	user/symlinktest.asm	/^ c66:	d86080e7          	jalr	-634(ra) # 9e8 <putc>$/;"	l
c66	user/usertests.asm	/^     c66:	70a2                	ld	ra,40(sp)$/;"	l
c68	user/grind.asm	/^     c68:	00a60733          	add	a4,a2,a0$/;"	l
c68	user/sh.asm	/^     c68:	855e                	mv	a0,s7$/;"	l
c68	user/usertests.asm	/^     c68:	7402                	ld	s0,32(sp)$/;"	l
c6a	user/sh.asm	/^     c6a:	60e6                	ld	ra,88(sp)$/;"	l
c6a	user/symlinktest.asm	/^ c6a:	4981                	li	s3,0$/;"	l
c6a	user/usertests.asm	/^     c6a:	64e2                	ld	s1,24(sp)$/;"	l
c6c	user/grind.asm	/^     c6c:	00b78023          	sb	a1,0(a5)$/;"	l
c6c	user/sh.asm	/^     c6c:	6446                	ld	s0,80(sp)$/;"	l
c6c	user/symlinktest.asm	/^ c6c:	b565                	j	b14 <vprintf+0x60>$/;"	l
c6c	user/usertests.asm	/^     c6c:	6942                	ld	s2,16(sp)$/;"	l
c6e	user/sh.asm	/^     c6e:	64a6                	ld	s1,72(sp)$/;"	l
c6e	user/symlinktest.asm	/^ c6e:	8b4e                	mv	s6,s3$/;"	l
c6e	user/usertests.asm	/^     c6e:	69a2                	ld	s3,8(sp)$/;"	l
c70	user/grind.asm	/^     c70:	0785                	addi	a5,a5,1$/;"	l
c70	user/sh.asm	/^     c70:	6906                	ld	s2,64(sp)$/;"	l
c70	user/symlinktest.asm	/^ c70:	4981                	li	s3,0$/;"	l
c70	user/usertests.asm	/^     c70:	6145                	addi	sp,sp,48$/;"	l
c72	user/grind.asm	/^     c72:	fee79de3          	bne	a5,a4,c6c <memset+0x12>$/;"	l
c72	user/sh.asm	/^     c72:	79e2                	ld	s3,56(sp)$/;"	l
c72	user/symlinktest.asm	/^ c72:	b54d                	j	b14 <vprintf+0x60>$/;"	l
c72	user/usertests.asm	/^     c72:	8082                	ret$/;"	l
c74	user/sh.asm	/^     c74:	7a42                	ld	s4,48(sp)$/;"	l
c74	user/symlinktest.asm	/^ c74:	70e6                	ld	ra,120(sp)$/;"	l
c74	user/usertests.asm	/^     c74:	85ce                	mv	a1,s3$/;"	l
c76	user/grind.asm	/^     c76:	6422                	ld	s0,8(sp)$/;"	l
c76	user/sh.asm	/^     c76:	7aa2                	ld	s5,40(sp)$/;"	l
c76	user/symlinktest.asm	/^ c76:	7446                	ld	s0,112(sp)$/;"	l
c76	user/usertests.asm	/^     c76:	00005517          	auipc	a0,0x5$/;"	l
c78	user/grind.asm	/^     c78:	0141                	addi	sp,sp,16$/;"	l
c78	user/sh.asm	/^     c78:	7b02                	ld	s6,32(sp)$/;"	l
c78	user/symlinktest.asm	/^ c78:	74a6                	ld	s1,104(sp)$/;"	l
c7a	user/grind.asm	/^     c7a:	8082                	ret$/;"	l
c7a	user/sh.asm	/^     c7a:	6be2                	ld	s7,24(sp)$/;"	l
c7a	user/symlinktest.asm	/^ c7a:	7906                	ld	s2,96(sp)$/;"	l
c7a	user/usertests.asm	/^     c7a:	6d250513          	addi	a0,a0,1746 # 6348 <malloc+0x8f8>$/;"	l
c7c	user/grind.asm	/^     c7c:	1141                	addi	sp,sp,-16$/;"	l
c7c	user/sh.asm	/^     c7c:	6125                	addi	sp,sp,96$/;"	l
c7c	user/symlinktest.asm	/^ c7c:	69e6                	ld	s3,88(sp)$/;"	l
c7e	user/grind.asm	/^     c7e:	e422                	sd	s0,8(sp)$/;"	l
c7e	user/sh.asm	/^     c7e:	8082                	ret$/;"	l
c7e	user/symlinktest.asm	/^ c7e:	6a46                	ld	s4,80(sp)$/;"	l
c7e	user/usertests.asm	/^     c7e:	00005097          	auipc	ra,0x5$/;"	l
c8	user/cat.asm	/^  c8:	00000097          	auipc	ra,0x0$/;"	l
c8	user/echo.asm	/^  c8:	0141                	addi	sp,sp,16$/;"	l
c8	user/forktest.asm	/^  c8:	64a2                	ld	s1,8(sp)$/;"	l
c8	user/grep.asm	/^  c8:	4505                	li	a0,1$/;"	l
c8	user/grind.asm	/^      c8:	112080e7          	jalr	274(ra) # 11d6 <printf>$/;"	l
c8	user/ln.asm	/^  c8:	6422                	ld	s0,8(sp)$/;"	l
c8	user/ls.asm	/^  c8:	25313423          	sd	s3,584(sp)$/;"	l
c8	user/sh.asm	/^      c8:	33470713          	addi	a4,a4,820 # 13f8 <malloc+0x1f8>$/;"	l
c8	user/stressfs.asm	/^  c8:	fd040513          	addi	a0,s0,-48$/;"	l
c8	user/symlinktest.asm	/^  c8:	e1450513          	addi	a0,a0,-492 # ed8 <malloc+0x15a>$/;"	l
c8	user/wc.asm	/^  c8:	7446                	ld	s0,112(sp)$/;"	l
c8	user/zombie.asm	/^  c8:	cb99                	beqz	a5,de <strchr+0x20>$/;"	l
c80	user/grind.asm	/^     c80:	0800                	addi	s0,sp,16$/;"	l
c80	user/sh.asm	/^     c80:	1101                	addi	sp,sp,-32$/;"	l
c80	user/symlinktest.asm	/^ c80:	6aa6                	ld	s5,72(sp)$/;"	l
c82	user/grind.asm	/^     c82:	00054783          	lbu	a5,0(a0)$/;"	l
c82	user/sh.asm	/^     c82:	ec06                	sd	ra,24(sp)$/;"	l
c82	user/symlinktest.asm	/^ c82:	6b06                	ld	s6,64(sp)$/;"	l
c82	user/usertests.asm	/^     c82:	d14080e7          	jalr	-748(ra) # 5992 <printf>$/;"	l
c84	user/sh.asm	/^     c84:	e822                	sd	s0,16(sp)$/;"	l
c84	user/symlinktest.asm	/^ c84:	7be2                	ld	s7,56(sp)$/;"	l
c86	user/grind.asm	/^     c86:	cb99                	beqz	a5,c9c <strchr+0x20>$/;"	l
c86	user/sh.asm	/^     c86:	e426                	sd	s1,8(sp)$/;"	l
c86	user/symlinktest.asm	/^ c86:	7c42                	ld	s8,48(sp)$/;"	l
c86	user/usertests.asm	/^     c86:	4505                	li	a0,1$/;"	l
c88	user/grind.asm	/^     c88:	00f58763          	beq	a1,a5,c96 <strchr+0x1a>$/;"	l
c88	user/sh.asm	/^     c88:	e04a                	sd	s2,0(sp)$/;"	l
c88	user/symlinktest.asm	/^ c88:	7ca2                	ld	s9,40(sp)$/;"	l
c88	user/usertests.asm	/^     c88:	00005097          	auipc	ra,0x5$/;"	l
c8a	user/sh.asm	/^     c8a:	1000                	addi	s0,sp,32$/;"	l
c8a	user/symlinktest.asm	/^ c8a:	7d02                	ld	s10,32(sp)$/;"	l
c8c	user/grind.asm	/^     c8c:	0505                	addi	a0,a0,1$/;"	l
c8c	user/sh.asm	/^     c8c:	892e                	mv	s2,a1$/;"	l
c8c	user/symlinktest.asm	/^ c8c:	6de2                	ld	s11,24(sp)$/;"	l
c8c	user/usertests.asm	/^     c8c:	98a080e7          	jalr	-1654(ra) # 5612 <exit>$/;"	l
c8e	user/grind.asm	/^     c8e:	00054783          	lbu	a5,0(a0)$/;"	l
c8e	user/sh.asm	/^     c8e:	4581                	li	a1,0$/;"	l
c8e	user/symlinktest.asm	/^ c8e:	6109                	addi	sp,sp,128$/;"	l
c90	user/sh.asm	/^     c90:	00000097          	auipc	ra,0x0$/;"	l
c90	user/symlinktest.asm	/^ c90:	8082                	ret$/;"	l
c90	user/usertests.asm	/^     c90:	85ce                	mv	a1,s3$/;"	l
c92	user/grind.asm	/^     c92:	fbfd                	bnez	a5,c88 <strchr+0xc>$/;"	l
c92	user/symlinktest.asm	/^ c92:	715d                	addi	sp,sp,-80$/;"	l
c92	user/usertests.asm	/^     c92:	00005517          	auipc	a0,0x5$/;"	l
c94	user/grind.asm	/^     c94:	4501                	li	a0,0$/;"	l
c94	user/sh.asm	/^     c94:	172080e7          	jalr	370(ra) # e02 <open>$/;"	l
c94	user/symlinktest.asm	/^ c94:	ec06                	sd	ra,24(sp)$/;"	l
c96	user/grind.asm	/^     c96:	6422                	ld	s0,8(sp)$/;"	l
c96	user/symlinktest.asm	/^ c96:	e822                	sd	s0,16(sp)$/;"	l
c96	user/usertests.asm	/^     c96:	6de50513          	addi	a0,a0,1758 # 6370 <malloc+0x920>$/;"	l
c98	user/grind.asm	/^     c98:	0141                	addi	sp,sp,16$/;"	l
c98	user/sh.asm	/^     c98:	02054563          	bltz	a0,cc2 <stat+0x42>$/;"	l
c98	user/symlinktest.asm	/^ c98:	1000                	addi	s0,sp,32$/;"	l
c9a	user/grind.asm	/^     c9a:	8082                	ret$/;"	l
c9a	user/symlinktest.asm	/^ c9a:	e010                	sd	a2,0(s0)$/;"	l
c9a	user/usertests.asm	/^     c9a:	00005097          	auipc	ra,0x5$/;"	l
c9c	user/grind.asm	/^     c9c:	4501                	li	a0,0$/;"	l
c9c	user/sh.asm	/^     c9c:	84aa                	mv	s1,a0$/;"	l
c9c	user/symlinktest.asm	/^ c9c:	e414                	sd	a3,8(s0)$/;"	l
c9e	user/grind.asm	/^     c9e:	bfe5                	j	c96 <strchr+0x1a>$/;"	l
c9e	user/sh.asm	/^     c9e:	85ca                	mv	a1,s2$/;"	l
c9e	user/symlinktest.asm	/^ c9e:	e818                	sd	a4,16(s0)$/;"	l
c9e	user/usertests.asm	/^     c9e:	cf8080e7          	jalr	-776(ra) # 5992 <printf>$/;"	l
ca	user/bigfile.asm	/^  ca:	332080e7          	jalr	818(ra) # 3f8 <exit>$/;"	l
ca	user/echo.asm	/^  ca:	8082                	ret$/;"	l
ca	user/forktest.asm	/^  ca:	6902                	ld	s2,0(sp)$/;"	l
ca	user/grep.asm	/^  ca:	8082                	ret$/;"	l
ca	user/init.asm	/^  ca:	85a58593          	addi	a1,a1,-1958 # 920 <argv>$/;"	l
ca	user/kill.asm	/^  ca:	fb7d                	bnez	a4,c0 <strlen+0x14>$/;"	l
ca	user/ln.asm	/^  ca:	0141                	addi	sp,sp,16$/;"	l
ca	user/mkdir.asm	/^  ca:	cf91                	beqz	a5,e6 <strlen+0x26>$/;"	l
ca	user/rm.asm	/^  ca:	cf91                	beqz	a5,e6 <strlen+0x26>$/;"	l
ca	user/usertests.asm	/^      ca:	dea50513          	addi	a0,a0,-534 # 5eb0 <malloc+0x460>$/;"	l
ca	user/wc.asm	/^  ca:	74a6                	ld	s1,104(sp)$/;"	l
ca	user/zombie.asm	/^  ca:	00f58763          	beq	a1,a5,d8 <strchr+0x1a>$/;"	l
ca0	user/grind.asm	/^     ca0:	711d                	addi	sp,sp,-96$/;"	l
ca0	user/sh.asm	/^     ca0:	00000097          	auipc	ra,0x0$/;"	l
ca0	user/symlinktest.asm	/^ ca0:	ec1c                	sd	a5,24(s0)$/;"	l
ca2	user/grind.asm	/^     ca2:	ec86                	sd	ra,88(sp)$/;"	l
ca2	user/symlinktest.asm	/^ ca2:	03043023          	sd	a6,32(s0)$/;"	l
ca2	user/usertests.asm	/^     ca2:	4505                	li	a0,1$/;"	l
ca4	user/grind.asm	/^     ca4:	e8a2                	sd	s0,80(sp)$/;"	l
ca4	user/sh.asm	/^     ca4:	17a080e7          	jalr	378(ra) # e1a <fstat>$/;"	l
ca4	user/usertests.asm	/^     ca4:	00005097          	auipc	ra,0x5$/;"	l
ca6	user/grind.asm	/^     ca6:	e4a6                	sd	s1,72(sp)$/;"	l
ca6	user/symlinktest.asm	/^ ca6:	03143423          	sd	a7,40(s0)$/;"	l
ca8	user/grind.asm	/^     ca8:	e0ca                	sd	s2,64(sp)$/;"	l
ca8	user/sh.asm	/^     ca8:	892a                	mv	s2,a0$/;"	l
ca8	user/usertests.asm	/^     ca8:	96e080e7          	jalr	-1682(ra) # 5612 <exit>$/;"	l
caa	user/grind.asm	/^     caa:	fc4e                	sd	s3,56(sp)$/;"	l
caa	user/sh.asm	/^     caa:	8526                	mv	a0,s1$/;"	l
caa	user/symlinktest.asm	/^ caa:	fe843423          	sd	s0,-24(s0)$/;"	l
cac	user/grind.asm	/^     cac:	f852                	sd	s4,48(sp)$/;"	l
cac	user/sh.asm	/^     cac:	00000097          	auipc	ra,0x0$/;"	l
cac	user/usertests.asm	/^     cac:	85ce                	mv	a1,s3$/;"	l
cae	user/grind.asm	/^     cae:	f456                	sd	s5,40(sp)$/;"	l
cae	user/symlinktest.asm	/^ cae:	8622                	mv	a2,s0$/;"	l
cae	user/usertests.asm	/^     cae:	00005517          	auipc	a0,0x5$/;"	l
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cat	user/cat.c	/^cat(int fd)$/;"	f	typeref:typename:void
cb0	user/grind.asm	/^     cb0:	f05a                	sd	s6,32(sp)$/;"	l
cb0	user/sh.asm	/^     cb0:	13e080e7          	jalr	318(ra) # dea <close>$/;"	l
cb0	user/symlinktest.asm	/^ cb0:	00000097          	auipc	ra,0x0$/;"	l
cb2	user/grind.asm	/^     cb2:	ec5e                	sd	s7,24(sp)$/;"	l
cb2	user/usertests.asm	/^     cb2:	6e250513          	addi	a0,a0,1762 # 6390 <malloc+0x940>$/;"	l
cb4	user/grind.asm	/^     cb4:	1080                	addi	s0,sp,96$/;"	l
cb4	user/sh.asm	/^     cb4:	854a                	mv	a0,s2$/;"	l
cb4	user/symlinktest.asm	/^ cb4:	e04080e7          	jalr	-508(ra) # ab4 <vprintf>$/;"	l
cb6	user/grind.asm	/^     cb6:	8baa                	mv	s7,a0$/;"	l
cb6	user/sh.asm	/^     cb6:	60e2                	ld	ra,24(sp)$/;"	l
cb6	user/usertests.asm	/^     cb6:	00005097          	auipc	ra,0x5$/;"	l
cb8	user/grind.asm	/^     cb8:	8a2e                	mv	s4,a1$/;"	l
cb8	user/sh.asm	/^     cb8:	6442                	ld	s0,16(sp)$/;"	l
cb8	user/symlinktest.asm	/^ cb8:	60e2                	ld	ra,24(sp)$/;"	l
cba	user/grind.asm	/^     cba:	892a                	mv	s2,a0$/;"	l
cba	user/sh.asm	/^     cba:	64a2                	ld	s1,8(sp)$/;"	l
cba	user/symlinktest.asm	/^ cba:	6442                	ld	s0,16(sp)$/;"	l
cba	user/usertests.asm	/^     cba:	cdc080e7          	jalr	-804(ra) # 5992 <printf>$/;"	l
cbc	user/grind.asm	/^     cbc:	4481                	li	s1,0$/;"	l
cbc	user/sh.asm	/^     cbc:	6902                	ld	s2,0(sp)$/;"	l
cbc	user/symlinktest.asm	/^ cbc:	6161                	addi	sp,sp,80$/;"	l
cbe	user/grind.asm	/^     cbe:	4aa9                	li	s5,10$/;"	l
cbe	user/sh.asm	/^     cbe:	6105                	addi	sp,sp,32$/;"	l
cbe	user/symlinktest.asm	/^ cbe:	8082                	ret$/;"	l
cbe	user/usertests.asm	/^     cbe:	4505                	li	a0,1$/;"	l
cbuf	kernel/kernel.asm	/^    cbuf = c;$/;"	d
cc	user/bigfile.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/cat.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/cat.asm	/^  cc:	f38080e7          	jalr	-200(ra) # 0 <cat>$/;"	l
cc	user/echo.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/echo.asm	/^  cc:	1141                	addi	sp,sp,-16$/;"	l
cc	user/forktest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/forktest.asm	/^  cc:	6105                	addi	sp,sp,32$/;"	l
cc	user/grep.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/grep.asm	/^  cc:	1101                	addi	sp,sp,-32$/;"	l
cc	user/grind.asm	/^      cc:	4505                	li	a0,1$/;"	l
cc	user/grind.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/init.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/kill.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/kill.asm	/^  cc:	6422                	ld	s0,8(sp)$/;"	l
cc	user/ln.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/ln.asm	/^  cc:	8082                	ret$/;"	l
cc	user/ls.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/ls.asm	/^  cc:	25413023          	sd	s4,576(sp)$/;"	l
cc	user/mkdir.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/mkdir.asm	/^  cc:	0505                	addi	a0,a0,1$/;"	l
cc	user/rm.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/rm.asm	/^  cc:	0505                	addi	a0,a0,1$/;"	l
cc	user/sh.asm	/^      cc:	97ba                	add	a5,a5,a4$/;"	l
cc	user/sh.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/stressfs.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/stressfs.asm	/^  cc:	00000097          	auipc	ra,0x0$/;"	l
cc	user/symlinktest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/symlinktest.asm	/^  cc:	00001097          	auipc	ra,0x1$/;"	l
cc	user/usertests.asm	/^        cc = sizeof(buf);$/;"	d
cc	user/usertests.asm	/^      cc = cc * 2;$/;"	d
cc	user/usertests.asm	/^    cc = 1;$/;"	d
cc	user/usertests.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/usertests.asm	/^    cc = read(fd, buf, SZ\/2);$/;"	d
cc	user/usertests.asm	/^  cc = read(fd, buf, sizeof(buf));$/;"	d
cc	user/wc.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/wc.asm	/^  cc:	7906                	ld	s2,96(sp)$/;"	l
cc	user/zombie.asm	/^    cc = read(0, &c, 1);$/;"	d
cc0	user/grind.asm	/^     cc0:	4b35                	li	s6,13$/;"	l
cc0	user/sh.asm	/^     cc0:	8082                	ret$/;"	l
cc0	user/symlinktest.asm	/^ cc0:	711d                	addi	sp,sp,-96$/;"	l
cc0	user/usertests.asm	/^     cc0:	00005097          	auipc	ra,0x5$/;"	l
cc2	user/grind.asm	/^     cc2:	89a6                	mv	s3,s1$/;"	l
cc2	user/sh.asm	/^     cc2:	597d                	li	s2,-1$/;"	l
cc2	user/symlinktest.asm	/^ cc2:	ec06                	sd	ra,24(sp)$/;"	l
cc4	user/grind.asm	/^     cc4:	2485                	addiw	s1,s1,1$/;"	l
cc4	user/sh.asm	/^     cc4:	bfc5                	j	cb4 <stat+0x34>$/;"	l
cc4	user/symlinktest.asm	/^ cc4:	e822                	sd	s0,16(sp)$/;"	l
cc4	user/usertests.asm	/^     cc4:	952080e7          	jalr	-1710(ra) # 5612 <exit>$/;"	l
cc6	user/grind.asm	/^     cc6:	0344d863          	bge	s1,s4,cf6 <gets+0x56>$/;"	l
cc6	user/sh.asm	/^     cc6:	1141                	addi	sp,sp,-16$/;"	l
cc6	user/symlinktest.asm	/^ cc6:	1000                	addi	s0,sp,32$/;"	l
cc8	user/sh.asm	/^     cc8:	e422                	sd	s0,8(sp)$/;"	l
cc8	user/symlinktest.asm	/^ cc8:	e40c                	sd	a1,8(s0)$/;"	l
cc8	user/usertests.asm	/^     cc8:	85ce                	mv	a1,s3$/;"	l
cca	user/grind.asm	/^     cca:	4605                	li	a2,1$/;"	l
cca	user/sh.asm	/^     cca:	0800                	addi	s0,sp,16$/;"	l
cca	user/symlinktest.asm	/^ cca:	e810                	sd	a2,16(s0)$/;"	l
cca	user/usertests.asm	/^     cca:	00005517          	auipc	a0,0x5$/;"	l
ccc	user/grind.asm	/^     ccc:	faf40593          	addi	a1,s0,-81$/;"	l
ccc	user/sh.asm	/^     ccc:	00054603          	lbu	a2,0(a0)$/;"	l
ccc	user/symlinktest.asm	/^ ccc:	ec14                	sd	a3,24(s0)$/;"	l
cce	user/symlinktest.asm	/^ cce:	f018                	sd	a4,32(s0)$/;"	l
cce	user/usertests.asm	/^     cce:	6ee50513          	addi	a0,a0,1774 # 63b8 <malloc+0x968>$/;"	l
cd0	user/grind.asm	/^     cd0:	4501                	li	a0,0$/;"	l
cd0	user/sh.asm	/^     cd0:	fd06079b          	addiw	a5,a2,-48$/;"	l
cd0	user/symlinktest.asm	/^ cd0:	f41c                	sd	a5,40(s0)$/;"	l
cd2	user/grind.asm	/^     cd2:	00000097          	auipc	ra,0x0$/;"	l
cd2	user/symlinktest.asm	/^ cd2:	03043823          	sd	a6,48(s0)$/;"	l
cd2	user/usertests.asm	/^     cd2:	00005097          	auipc	ra,0x5$/;"	l
cd4	user/sh.asm	/^     cd4:	0ff7f793          	andi	a5,a5,255$/;"	l
cd6	user/grind.asm	/^     cd6:	19c080e7          	jalr	412(ra) # e6e <read>$/;"	l
cd6	user/symlinktest.asm	/^ cd6:	03143c23          	sd	a7,56(s0)$/;"	l
cd6	user/usertests.asm	/^     cd6:	cc0080e7          	jalr	-832(ra) # 5992 <printf>$/;"	l
cd8	user/sh.asm	/^     cd8:	4725                	li	a4,9$/;"	l
cda	user/grind.asm	/^     cda:	00a05e63          	blez	a0,cf6 <gets+0x56>$/;"	l
cda	user/sh.asm	/^     cda:	02f76963          	bltu	a4,a5,d0c <atoi+0x46>$/;"	l
cda	user/symlinktest.asm	/^ cda:	00840613          	addi	a2,s0,8$/;"	l
cda	user/usertests.asm	/^     cda:	4505                	li	a0,1$/;"	l
cdc	user/usertests.asm	/^     cdc:	00005097          	auipc	ra,0x5$/;"	l
cde	user/grind.asm	/^     cde:	faf44783          	lbu	a5,-81(s0)$/;"	l
cde	user/sh.asm	/^     cde:	86aa                	mv	a3,a0$/;"	l
cde	user/symlinktest.asm	/^ cde:	fec43423          	sd	a2,-24(s0)$/;"	l
ce	user/bigfile.asm	/^  ce:	854a                	mv	a0,s2$/;"	l
ce	user/echo.asm	/^  ce:	e422                	sd	s0,8(sp)$/;"	l
ce	user/forktest.asm	/^  ce:	8082                	ret$/;"	l
ce	user/grep.asm	/^  ce:	ec06                	sd	ra,24(sp)$/;"	l
ce	user/grind.asm	/^      ce:	00001097          	auipc	ra,0x1$/;"	l
ce	user/init.asm	/^  ce:	00000517          	auipc	a0,0x0$/;"	l
ce	user/kill.asm	/^  ce:	0141                	addi	sp,sp,16$/;"	l
ce	user/ln.asm	/^  ce:	4501                	li	a0,0$/;"	l
ce	user/mkdir.asm	/^  ce:	87aa                	mv	a5,a0$/;"	l
ce	user/rm.asm	/^  ce:	87aa                	mv	a5,a0$/;"	l
ce	user/sh.asm	/^      ce:	439c                	lw	a5,0(a5)$/;"	l
ce	user/usertests.asm	/^      ce:	00005097          	auipc	ra,0x5$/;"	l
ce	user/wc.asm	/^  ce:	69e6                	ld	s3,88(sp)$/;"	l
ce	user/zombie.asm	/^  ce:	0505                	addi	a0,a0,1$/;"	l
ce0	user/sh.asm	/^     ce0:	4501                	li	a0,0$/;"	l
ce0	user/usertests.asm	/^     ce0:	936080e7          	jalr	-1738(ra) # 5612 <exit>$/;"	l
ce2	user/grind.asm	/^     ce2:	00f90023          	sb	a5,0(s2)$/;"	l
ce2	user/sh.asm	/^     ce2:	45a5                	li	a1,9$/;"	l
ce2	user/symlinktest.asm	/^ ce2:	85aa                	mv	a1,a0$/;"	l
ce4	user/sh.asm	/^     ce4:	0685                	addi	a3,a3,1$/;"	l
ce4	user/symlinktest.asm	/^ ce4:	4505                	li	a0,1$/;"	l
ce4	user/usertests.asm	/^     ce4:	85ce                	mv	a1,s3$/;"	l
ce6	user/grind.asm	/^     ce6:	01578763          	beq	a5,s5,cf4 <gets+0x54>$/;"	l
ce6	user/sh.asm	/^     ce6:	0025179b          	slliw	a5,a0,0x2$/;"	l
ce6	user/symlinktest.asm	/^ ce6:	00000097          	auipc	ra,0x0$/;"	l
ce6	user/usertests.asm	/^     ce6:	00005517          	auipc	a0,0x5$/;"	l
cea	user/grind.asm	/^     cea:	0905                	addi	s2,s2,1$/;"	l
cea	user/sh.asm	/^     cea:	9fa9                	addw	a5,a5,a0$/;"	l
cea	user/symlinktest.asm	/^ cea:	dce080e7          	jalr	-562(ra) # ab4 <vprintf>$/;"	l
cea	user/usertests.asm	/^     cea:	6f250513          	addi	a0,a0,1778 # 63d8 <malloc+0x988>$/;"	l
cec	user/grind.asm	/^     cec:	fd679be3          	bne	a5,s6,cc2 <gets+0x22>$/;"	l
cec	user/sh.asm	/^     cec:	0017979b          	slliw	a5,a5,0x1$/;"	l
cee	user/symlinktest.asm	/^ cee:	60e2                	ld	ra,24(sp)$/;"	l
cee	user/usertests.asm	/^     cee:	00005097          	auipc	ra,0x5$/;"	l
cf0	user/grind.asm	/^     cf0:	89a6                	mv	s3,s1$/;"	l
cf0	user/sh.asm	/^     cf0:	9fb1                	addw	a5,a5,a2$/;"	l
cf0	user/symlinktest.asm	/^ cf0:	6442                	ld	s0,16(sp)$/;"	l
cf2	user/grind.asm	/^     cf2:	a011                	j	cf6 <gets+0x56>$/;"	l
cf2	user/sh.asm	/^     cf2:	fd07851b          	addiw	a0,a5,-48$/;"	l
cf2	user/symlinktest.asm	/^ cf2:	6125                	addi	sp,sp,96$/;"	l
cf2	user/usertests.asm	/^     cf2:	ca4080e7          	jalr	-860(ra) # 5992 <printf>$/;"	l
cf4	user/grind.asm	/^     cf4:	89a6                	mv	s3,s1$/;"	l
cf4	user/symlinktest.asm	/^ cf4:	8082                	ret$/;"	l
cf6	user/grind.asm	/^     cf6:	99de                	add	s3,s3,s7$/;"	l
cf6	user/sh.asm	/^     cf6:	0006c603          	lbu	a2,0(a3)$/;"	l
cf6	user/symlinktest.asm	/^ cf6:	1141                	addi	sp,sp,-16$/;"	l
cf6	user/usertests.asm	/^     cf6:	4505                	li	a0,1$/;"	l
cf8	user/grind.asm	/^     cf8:	00098023          	sb	zero,0(s3)$/;"	l
cf8	user/symlinktest.asm	/^ cf8:	e422                	sd	s0,8(sp)$/;"	l
cf8	user/usertests.asm	/^     cf8:	00005097          	auipc	ra,0x5$/;"	l
cfa	user/sh.asm	/^     cfa:	fd06071b          	addiw	a4,a2,-48$/;"	l
cfa	user/symlinktest.asm	/^ cfa:	0800                	addi	s0,sp,16$/;"	l
cfc	user/grind.asm	/^     cfc:	855e                	mv	a0,s7$/;"	l
cfc	user/symlinktest.asm	/^ cfc:	ff050693          	addi	a3,a0,-16$/;"	l
cfc	user/usertests.asm	/^     cfc:	91a080e7          	jalr	-1766(ra) # 5612 <exit>$/;"	l
cfe	user/grind.asm	/^     cfe:	60e6                	ld	ra,88(sp)$/;"	l
cfe	user/sh.asm	/^     cfe:	0ff77713          	andi	a4,a4,255$/;"	l
ch	kernel/kernel.asm	/^    ch = pi->data[pi->nread++ % PIPESIZE];$/;"	d
chan	kernel/proc.h	/^  void *chan;                  \/\/ If non-zero, sleeping on chan$/;"	m	struct:proc	typeref:typename:void *
char	user/cat.asm	/^char buf[512];$/;"	l
char	user/init.asm	/^char *argv[] = { "sh", 0 };$/;"	l
char	user/sh.asm	/^char symbols[] = "<|>&;()";$/;"	l
char	user/sh.asm	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	l
char	user/wc.asm	/^char buf[512];$/;"	l
chdir	user/bigfile.asm	/^chdir:$/;"	l
chdir	user/cat.asm	/^chdir:$/;"	l
chdir	user/echo.asm	/^chdir:$/;"	l
chdir	user/forktest.asm	/^chdir:$/;"	l
chdir	user/grep.asm	/^chdir:$/;"	l
chdir	user/grind.asm	/^chdir:$/;"	l
chdir	user/init.asm	/^chdir:$/;"	l
chdir	user/kill.asm	/^chdir:$/;"	l
chdir	user/ln.asm	/^chdir:$/;"	l
chdir	user/ls.asm	/^chdir:$/;"	l
chdir	user/mkdir.asm	/^chdir:$/;"	l
chdir	user/rm.asm	/^chdir:$/;"	l
chdir	user/sh.asm	/^chdir:$/;"	l
chdir	user/stressfs.asm	/^chdir:$/;"	l
chdir	user/symlinktest.asm	/^chdir:$/;"	l
chdir	user/usertests.asm	/^chdir:$/;"	l
chdir	user/usys.S	/^chdir:$/;"	l
chdir	user/wc.asm	/^chdir:$/;"	l
chdir	user/zombie.asm	/^chdir:$/;"	l
check_answers	gradelib.py	/^def check_answers(file, n=10):$/;"	f
check_time	gradelib.py	/^def check_time():$/;"	f
clean	Makefile	/^clean: $/;"	t
cleanup	user/symlinktest.c	/^cleanup(void)$/;"	f	typeref:typename:void	file:
clockintr	kernel/trap.c	/^clockintr()$/;"	f	typeref:typename:void
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	user/bigfile.asm	/^close:$/;"	l
close	user/cat.asm	/^close:$/;"	l
close	user/echo.asm	/^close:$/;"	l
close	user/forktest.asm	/^close:$/;"	l
close	user/grep.asm	/^close:$/;"	l
close	user/grind.asm	/^close:$/;"	l
close	user/init.asm	/^close:$/;"	l
close	user/kill.asm	/^close:$/;"	l
close	user/ln.asm	/^close:$/;"	l
close	user/ls.asm	/^close:$/;"	l
close	user/mkdir.asm	/^close:$/;"	l
close	user/rm.asm	/^close:$/;"	l
close	user/sh.asm	/^close:$/;"	l
close	user/stressfs.asm	/^close:$/;"	l
close	user/symlinktest.asm	/^close:$/;"	l
close	user/usertests.asm	/^close:$/;"	l
close	user/usys.S	/^close:$/;"	l
close	user/wc.asm	/^close:$/;"	l
close	user/zombie.asm	/^close:$/;"	l
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_RDONLY, 0);$/;"	d
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE, 1);$/;"	d
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE|O_TRUNC, 1);$/;"	d
cmd	user/sh.asm	/^    cmd = backcmd(cmd);$/;"	d
cmd	user/sh.asm	/^    cmd = listcmd(cmd, parseline(ps, es));$/;"	d
cmd	user/sh.asm	/^    cmd = pipecmd(cmd, parsepipe(ps, es));$/;"	d
cmd	user/sh.asm	/^  cmd = (struct execcmd*)ret;$/;"	d
cmd	user/sh.asm	/^  cmd = malloc(sizeof(*cmd));$/;"	d
cmd	user/sh.asm	/^  cmd = parseexec(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseline(&s, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseline(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parsepipe(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseredirs(cmd, ps, es);$/;"	d
cmd	user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:backcmd	typeref:struct:cmd *	file:
cmd	user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:redircmd	typeref:struct:cmd *	file:
cmd	user/sh.c	/^struct cmd {$/;"	s	file:
color	gradelib.py	/^def color(name, text):$/;"	f
commit	kernel/log.c	/^commit()$/;"	f	typeref:typename:void	file:
committing	kernel/log.c	/^  int committing;  \/\/ in commit(), please wait.$/;"	m	struct:log	typeref:typename:int	file:
concreate	user/usertests.c	/^concreate(char *s)$/;"	f	typeref:typename:void
concur	user/symlinktest.c	/^concur(void)$/;"	f	typeref:typename:void	file:
cons	kernel/console.c	/^} cons;$/;"	v	typeref:struct:__anonb6393d190108
consoleinit	kernel/console.c	/^consoleinit(void)$/;"	f	typeref:typename:void
consoleintr	kernel/console.c	/^consoleintr(int c)$/;"	f	typeref:typename:void
consoleread	kernel/console.c	/^consoleread(int user_dst, uint64 dst, int n)$/;"	f	typeref:typename:int
consolewrite	kernel/console.c	/^consolewrite(int user_src, uint64 src, int n)$/;"	f	typeref:typename:int
consputc	kernel/console.c	/^consputc(int c)$/;"	f	typeref:typename:void
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
context	gradelib.py	/^        class context:$/;"	c	function:shell_script.setup_call_on_line	file:
context	kernel/proc.h	/^  struct context context;      \/\/ swtch() here to run process$/;"	m	struct:proc	typeref:struct:context
context	kernel/proc.h	/^  struct context context;     \/\/ swtch() here to enter scheduler().$/;"	m	struct:cpu	typeref:struct:context
context	kernel/proc.h	/^struct context {$/;"	s
continuous	user/usertests.asm	/^    continuous = 1;$/;"	d
continuous	user/usertests.asm	/^    continuous = 2;$/;"	d
copyin	kernel/vm.c	/^copyin(pagetable_t pagetable, char *dst, uint64 srcva, uint64 len)$/;"	f	typeref:typename:int
copyin	user/usertests.c	/^copyin(char *s)$/;"	f	typeref:typename:void
copyinstr	kernel/vm.c	/^copyinstr(pagetable_t pagetable, char *dst, uint64 srcva, uint64 max)$/;"	f	typeref:typename:int
copyinstr1	user/usertests.c	/^copyinstr1(char *s)$/;"	f	typeref:typename:void
copyinstr2	user/usertests.c	/^copyinstr2(char *s)$/;"	f	typeref:typename:void
copyinstr3	user/usertests.c	/^copyinstr3(char *s)$/;"	f	typeref:typename:void
copyout	kernel/vm.c	/^copyout(pagetable_t pagetable, uint64 dstva, char *src, uint64 len)$/;"	f	typeref:typename:int
copyout	user/usertests.c	/^copyout(char *s)$/;"	f	typeref:typename:void
countfree	user/usertests.c	/^countfree()$/;"	f	typeref:typename:int
cpu	kernel/proc.h	/^struct cpu {$/;"	s
cpu	kernel/spinlock.h	/^  struct cpu *cpu;   \/\/ The cpu holding the lock.$/;"	m	struct:spinlock	typeref:struct:cpu *
cpuid	kernel/proc.c	/^cpuid()$/;"	f	typeref:typename:int
cpus	kernel/proc.c	/^struct cpu cpus[NCPU];$/;"	v	typeref:struct:cpu[]
create	kernel/sysfile.c	/^create(char *path, short type, short major, short minor,char *target)$/;"	f	typeref:struct:inode *	file:
createdelete	user/usertests.c	/^createdelete(char *s)$/;"	f	typeref:typename:void
createtest	user/usertests.c	/^createtest(char *s)$/;"	f	typeref:typename:void
cwd	kernel/proc.h	/^  struct inode *cwd;           \/\/ Current directory$/;"	m	struct:proc	typeref:struct:inode *
d	kernel/kernel.asm	/^  d = dst;$/;"	d
d0	user/bigfile.asm	/^  d0:	00000097          	auipc	ra,0x0$/;"	l
d0	user/cat.asm	/^  d0:	8526                	mv	a0,s1$/;"	l
d0	user/echo.asm	/^  d0:	0800                	addi	s0,sp,16$/;"	l
d0	user/forktest.asm	/^  d0:	00000517          	auipc	a0,0x0$/;"	l
d0	user/grep.asm	/^  d0:	e822                	sd	s0,16(sp)$/;"	l
d0	user/kill.asm	/^  d0:	8082                	ret$/;"	l
d0	user/ln.asm	/^  d0:	bfe5                	j	c8 <strlen+0x20>$/;"	l
d0	user/ls.asm	/^  d0:	23513c23          	sd	s5,568(sp)$/;"	l
d0	user/mkdir.asm	/^  d0:	4685                	li	a3,1$/;"	l
d0	user/rm.asm	/^  d0:	4685                	li	a3,1$/;"	l
d0	user/sh.asm	/^      d0:	97ba                	add	a5,a5,a4$/;"	l
d0	user/stressfs.asm	/^  d0:	2ee080e7          	jalr	750(ra) # 3ba <open>$/;"	l
d0	user/symlinktest.asm	/^  d0:	8c4080e7          	jalr	-1852(ra) # 990 <unlink>$/;"	l
d0	user/wc.asm	/^  d0:	6a46                	ld	s4,80(sp)$/;"	l
d0	user/zombie.asm	/^  d0:	00054783          	lbu	a5,0(a0)$/;"	l
d00	user/grind.asm	/^     d00:	6446                	ld	s0,80(sp)$/;"	l
d00	user/symlinktest.asm	/^ d00:	00000797          	auipc	a5,0x0$/;"	l
d00	user/usertests.asm	/^     d00:	85ce                	mv	a1,s3$/;"	l
d02	user/grind.asm	/^     d02:	64a6                	ld	s1,72(sp)$/;"	l
d02	user/sh.asm	/^     d02:	fee5f1e3          	bgeu	a1,a4,ce4 <atoi+0x1e>$/;"	l
d02	user/usertests.asm	/^     d02:	00005517          	auipc	a0,0x5$/;"	l
d04	user/grind.asm	/^     d04:	6906                	ld	s2,64(sp)$/;"	l
d04	user/symlinktest.asm	/^ d04:	6287b783          	ld	a5,1576(a5) # 1328 <freep>$/;"	l
d06	user/grind.asm	/^     d06:	79e2                	ld	s3,56(sp)$/;"	l
d06	user/sh.asm	/^     d06:	6422                	ld	s0,8(sp)$/;"	l
d06	user/usertests.asm	/^     d06:	6f650513          	addi	a0,a0,1782 # 63f8 <malloc+0x9a8>$/;"	l
d08	user/grind.asm	/^     d08:	7a42                	ld	s4,48(sp)$/;"	l
d08	user/sh.asm	/^     d08:	0141                	addi	sp,sp,16$/;"	l
d08	user/symlinktest.asm	/^ d08:	a805                	j	d38 <free+0x42>$/;"	l
d0a	user/grind.asm	/^     d0a:	7aa2                	ld	s5,40(sp)$/;"	l
d0a	user/sh.asm	/^     d0a:	8082                	ret$/;"	l
d0a	user/symlinktest.asm	/^ d0a:	4618                	lw	a4,8(a2)$/;"	l
d0a	user/usertests.asm	/^     d0a:	00005097          	auipc	ra,0x5$/;"	l
d0c	user/grind.asm	/^     d0c:	7b02                	ld	s6,32(sp)$/;"	l
d0c	user/sh.asm	/^     d0c:	4501                	li	a0,0$/;"	l
d0c	user/symlinktest.asm	/^ d0c:	9db9                	addw	a1,a1,a4$/;"	l
d0e	user/grind.asm	/^     d0e:	6be2                	ld	s7,24(sp)$/;"	l
d0e	user/sh.asm	/^     d0e:	bfe5                	j	d06 <atoi+0x40>$/;"	l
d0e	user/symlinktest.asm	/^ d0e:	feb52c23          	sw	a1,-8(a0)$/;"	l
d0e	user/usertests.asm	/^     d0e:	c88080e7          	jalr	-888(ra) # 5992 <printf>$/;"	l
d10	user/grind.asm	/^     d10:	6125                	addi	sp,sp,96$/;"	l
d10	user/sh.asm	/^     d10:	1141                	addi	sp,sp,-16$/;"	l
d12	user/grind.asm	/^     d12:	8082                	ret$/;"	l
d12	user/sh.asm	/^     d12:	e422                	sd	s0,8(sp)$/;"	l
d12	user/symlinktest.asm	/^ d12:	6398                	ld	a4,0(a5)$/;"	l
d12	user/usertests.asm	/^     d12:	4505                	li	a0,1$/;"	l
d14	user/grind.asm	/^     d14:	1101                	addi	sp,sp,-32$/;"	l
d14	user/sh.asm	/^     d14:	0800                	addi	s0,sp,16$/;"	l
d14	user/symlinktest.asm	/^ d14:	6318                	ld	a4,0(a4)$/;"	l
d14	user/usertests.asm	/^     d14:	00005097          	auipc	ra,0x5$/;"	l
d16	user/grind.asm	/^     d16:	ec06                	sd	ra,24(sp)$/;"	l
d16	user/sh.asm	/^     d16:	02b57463          	bgeu	a0,a1,d3e <memmove+0x2e>$/;"	l
d16	user/symlinktest.asm	/^ d16:	fee53823          	sd	a4,-16(a0)$/;"	l
d18	user/grind.asm	/^     d18:	e822                	sd	s0,16(sp)$/;"	l
d18	user/usertests.asm	/^     d18:	8fe080e7          	jalr	-1794(ra) # 5612 <exit>$/;"	l
d1a	user/grind.asm	/^     d1a:	e426                	sd	s1,8(sp)$/;"	l
d1a	user/sh.asm	/^     d1a:	00c05f63          	blez	a2,d38 <memmove+0x28>$/;"	l
d1a	user/symlinktest.asm	/^ d1a:	a091                	j	d5e <free+0x68>$/;"	l
d1c	user/grind.asm	/^     d1c:	e04a                	sd	s2,0(sp)$/;"	l
d1c	user/symlinktest.asm	/^ d1c:	ff852703          	lw	a4,-8(a0)$/;"	l
d1c	user/usertests.asm	/^     d1c:	1101                	addi	sp,sp,-32$/;"	l
d1e	user/grind.asm	/^     d1e:	1000                	addi	s0,sp,32$/;"	l
d1e	user/sh.asm	/^     d1e:	1602                	slli	a2,a2,0x20$/;"	l
d1e	user/usertests.asm	/^     d1e:	ec06                	sd	ra,24(sp)$/;"	l
d2	user/cat.asm	/^  d2:	00000097          	auipc	ra,0x0$/;"	l
d2	user/echo.asm	/^  d2:	00054783          	lbu	a5,0(a0)$/;"	l
d2	user/grep.asm	/^  d2:	e426                	sd	s1,8(sp)$/;"	l
d2	user/grind.asm	/^      d2:	d88080e7          	jalr	-632(ra) # e56 <exit>$/;"	l
d2	user/init.asm	/^  d2:	7f250513          	addi	a0,a0,2034 # 8c0 <malloc+0x11c>$/;"	l
d2	user/kill.asm	/^  d2:	4501                	li	a0,0$/;"	l
d2	user/ln.asm	/^  d2:	1141                	addi	sp,sp,-16$/;"	l
d2	user/mkdir.asm	/^  d2:	9e89                	subw	a3,a3,a0$/;"	l
d2	user/rm.asm	/^  d2:	9e89                	subw	a3,a3,a0$/;"	l
d2	user/sh.asm	/^      d2:	8782                	jr	a5$/;"	l
d2	user/usertests.asm	/^      d2:	584080e7          	jalr	1412(ra) # 5652 <open>$/;"	l
d2	user/wc.asm	/^  d2:	6aa6                	ld	s5,72(sp)$/;"	l
d20	user/grind.asm	/^     d20:	892e                	mv	s2,a1$/;"	l
d20	user/sh.asm	/^     d20:	9201                	srli	a2,a2,0x20$/;"	l
d20	user/symlinktest.asm	/^ d20:	9e39                	addw	a2,a2,a4$/;"	l
d20	user/usertests.asm	/^     d20:	e822                	sd	s0,16(sp)$/;"	l
d22	user/grind.asm	/^     d22:	4581                	li	a1,0$/;"	l
d22	user/sh.asm	/^     d22:	00c507b3          	add	a5,a0,a2$/;"	l
d22	user/symlinktest.asm	/^ d22:	c790                	sw	a2,8(a5)$/;"	l
d22	user/usertests.asm	/^     d22:	e426                	sd	s1,8(sp)$/;"	l
d24	user/grind.asm	/^     d24:	00000097          	auipc	ra,0x0$/;"	l
d24	user/symlinktest.asm	/^ d24:	ff053703          	ld	a4,-16(a0)$/;"	l
d24	user/usertests.asm	/^     d24:	e04a                	sd	s2,0(sp)$/;"	l
d26	user/sh.asm	/^     d26:	872a                	mv	a4,a0$/;"	l
d26	user/usertests.asm	/^     d26:	1000                	addi	s0,sp,32$/;"	l
d28	user/grind.asm	/^     d28:	172080e7          	jalr	370(ra) # e96 <open>$/;"	l
d28	user/sh.asm	/^     d28:	0585                	addi	a1,a1,1$/;"	l
d28	user/symlinktest.asm	/^ d28:	e398                	sd	a4,0(a5)$/;"	l
d28	user/usertests.asm	/^     d28:	892a                	mv	s2,a0$/;"	l
d2a	user/sh.asm	/^     d2a:	0705                	addi	a4,a4,1$/;"	l
d2a	user/symlinktest.asm	/^ d2a:	a099                	j	d70 <free+0x7a>$/;"	l
d2a	user/usertests.asm	/^     d2a:	00005517          	auipc	a0,0x5$/;"	l
d2c	user/grind.asm	/^     d2c:	02054563          	bltz	a0,d56 <stat+0x42>$/;"	l
d2c	user/sh.asm	/^     d2c:	fff5c683          	lbu	a3,-1(a1)$/;"	l
d2c	user/symlinktest.asm	/^ d2c:	6398                	ld	a4,0(a5)$/;"	l
d2e	user/symlinktest.asm	/^ d2e:	00e7e463          	bltu	a5,a4,d36 <free+0x40>$/;"	l
d2e	user/usertests.asm	/^     d2e:	6ee50513          	addi	a0,a0,1774 # 6418 <malloc+0x9c8>$/;"	l
d30	user/grind.asm	/^     d30:	84aa                	mv	s1,a0$/;"	l
d30	user/sh.asm	/^     d30:	fed70fa3          	sb	a3,-1(a4)$/;"	l
d32	user/grind.asm	/^     d32:	85ca                	mv	a1,s2$/;"	l
d32	user/symlinktest.asm	/^ d32:	00e6ea63          	bltu	a3,a4,d46 <free+0x50>$/;"	l
d32	user/usertests.asm	/^     d32:	00005097          	auipc	ra,0x5$/;"	l
d34	user/grind.asm	/^     d34:	00000097          	auipc	ra,0x0$/;"	l
d34	user/sh.asm	/^     d34:	fee79ae3          	bne	a5,a4,d28 <memmove+0x18>$/;"	l
d36	user/symlinktest.asm	/^ d36:	87ba                	mv	a5,a4$/;"	l
d36	user/usertests.asm	/^     d36:	930080e7          	jalr	-1744(ra) # 5662 <unlink>$/;"	l
d38	user/grind.asm	/^     d38:	17a080e7          	jalr	378(ra) # eae <fstat>$/;"	l
d38	user/sh.asm	/^     d38:	6422                	ld	s0,8(sp)$/;"	l
d38	user/symlinktest.asm	/^ d38:	fed7fae3          	bgeu	a5,a3,d2c <free+0x36>$/;"	l
d3a	user/sh.asm	/^     d3a:	0141                	addi	sp,sp,16$/;"	l
d3a	user/usertests.asm	/^     d3a:	00005517          	auipc	a0,0x5$/;"	l
d3c	user/grind.asm	/^     d3c:	892a                	mv	s2,a0$/;"	l
d3c	user/sh.asm	/^     d3c:	8082                	ret$/;"	l
d3c	user/symlinktest.asm	/^ d3c:	6398                	ld	a4,0(a5)$/;"	l
d3e	user/grind.asm	/^     d3e:	8526                	mv	a0,s1$/;"	l
d3e	user/sh.asm	/^     d3e:	00c50733          	add	a4,a0,a2$/;"	l
d3e	user/symlinktest.asm	/^ d3e:	00e6e463          	bltu	a3,a4,d46 <free+0x50>$/;"	l
d3e	user/usertests.asm	/^     d3e:	6e650513          	addi	a0,a0,1766 # 6420 <malloc+0x9d0>$/;"	l
d4	user/bigfile.asm	/^  d4:	350080e7          	jalr	848(ra) # 420 <close>$/;"	l
d4	user/forktest.asm	/^  d4:	39850513          	addi	a0,a0,920 # 468 <symlink+0x3c>$/;"	l
d4	user/grep.asm	/^  d4:	e04a                	sd	s2,0(sp)$/;"	l
d4	user/kill.asm	/^  d4:	bfe5                	j	cc <strlen+0x20>$/;"	l
d4	user/ln.asm	/^  d4:	e422                	sd	s0,8(sp)$/;"	l
d4	user/ls.asm	/^  d4:	1c80                	addi	s0,sp,624$/;"	l
d4	user/mkdir.asm	/^  d4:	00f6853b          	addw	a0,a3,a5$/;"	l
d4	user/rm.asm	/^  d4:	00f6853b          	addw	a0,a3,a5$/;"	l
d4	user/sh.asm	/^      d4:	4505                	li	a0,1$/;"	l
d4	user/stressfs.asm	/^  d4:	892a                	mv	s2,a0$/;"	l
d4	user/symlinktest.asm	/^  d4:	00001517          	auipc	a0,0x1$/;"	l
d4	user/wc.asm	/^  d4:	6b06                	ld	s6,64(sp)$/;"	l
d4	user/zombie.asm	/^  d4:	fbfd                	bnez	a5,ca <strchr+0xc>$/;"	l
d40	user/grind.asm	/^     d40:	00000097          	auipc	ra,0x0$/;"	l
d42	user/sh.asm	/^     d42:	95b2                	add	a1,a1,a2$/;"	l
d42	user/symlinktest.asm	/^ d42:	fee7eae3          	bltu	a5,a4,d36 <free+0x40>$/;"	l
d42	user/usertests.asm	/^     d42:	00005097          	auipc	ra,0x5$/;"	l
d44	user/grind.asm	/^     d44:	13e080e7          	jalr	318(ra) # e7e <close>$/;"	l
d44	user/sh.asm	/^     d44:	fec05ae3          	blez	a2,d38 <memmove+0x28>$/;"	l
d46	user/symlinktest.asm	/^ d46:	ff852583          	lw	a1,-8(a0)$/;"	l
d46	user/usertests.asm	/^     d46:	920080e7          	jalr	-1760(ra) # 5662 <unlink>$/;"	l
d48	user/grind.asm	/^     d48:	854a                	mv	a0,s2$/;"	l
d48	user/sh.asm	/^     d48:	fff6079b          	addiw	a5,a2,-1$/;"	l
d4a	user/grind.asm	/^     d4a:	60e2                	ld	ra,24(sp)$/;"	l
d4a	user/symlinktest.asm	/^ d4a:	6390                	ld	a2,0(a5)$/;"	l
d4a	user/usertests.asm	/^     d4a:	20200593          	li	a1,514$/;"	l
d4c	user/grind.asm	/^     d4c:	6442                	ld	s0,16(sp)$/;"	l
d4c	user/sh.asm	/^     d4c:	1782                	slli	a5,a5,0x20$/;"	l
d4c	user/symlinktest.asm	/^ d4c:	02059713          	slli	a4,a1,0x20$/;"	l
d4e	user/grind.asm	/^     d4e:	64a2                	ld	s1,8(sp)$/;"	l
d4e	user/sh.asm	/^     d4e:	9381                	srli	a5,a5,0x20$/;"	l
d4e	user/usertests.asm	/^     d4e:	00005517          	auipc	a0,0x5$/;"	l
d50	user/grind.asm	/^     d50:	6902                	ld	s2,0(sp)$/;"	l
d50	user/sh.asm	/^     d50:	fff7c793          	not	a5,a5$/;"	l
d50	user/symlinktest.asm	/^ d50:	9301                	srli	a4,a4,0x20$/;"	l
d52	user/grind.asm	/^     d52:	6105                	addi	sp,sp,32$/;"	l
d52	user/symlinktest.asm	/^ d52:	0712                	slli	a4,a4,0x4$/;"	l
d52	user/usertests.asm	/^     d52:	6ca50513          	addi	a0,a0,1738 # 6418 <malloc+0x9c8>$/;"	l
d54	user/grind.asm	/^     d54:	8082                	ret$/;"	l
d54	user/sh.asm	/^     d54:	97ba                	add	a5,a5,a4$/;"	l
d54	user/symlinktest.asm	/^ d54:	9736                	add	a4,a4,a3$/;"	l
d56	user/grind.asm	/^     d56:	597d                	li	s2,-1$/;"	l
d56	user/sh.asm	/^     d56:	15fd                	addi	a1,a1,-1$/;"	l
d56	user/symlinktest.asm	/^ d56:	fae60ae3          	beq	a2,a4,d0a <free+0x14>$/;"	l
d56	user/usertests.asm	/^     d56:	00005097          	auipc	ra,0x5$/;"	l
d58	user/grind.asm	/^     d58:	bfc5                	j	d48 <stat+0x34>$/;"	l
d58	user/sh.asm	/^     d58:	177d                	addi	a4,a4,-1$/;"	l
d5a	user/grind.asm	/^     d5a:	1141                	addi	sp,sp,-16$/;"	l
d5a	user/sh.asm	/^     d5a:	0005c683          	lbu	a3,0(a1)$/;"	l
d5a	user/symlinktest.asm	/^ d5a:	fec53823          	sd	a2,-16(a0)$/;"	l
d5a	user/usertests.asm	/^     d5a:	8fc080e7          	jalr	-1796(ra) # 5652 <open>$/;"	l
d5c	user/grind.asm	/^     d5c:	e422                	sd	s0,8(sp)$/;"	l
d5e	user/grind.asm	/^     d5e:	0800                	addi	s0,sp,16$/;"	l
d5e	user/sh.asm	/^     d5e:	00d70023          	sb	a3,0(a4)$/;"	l
d5e	user/symlinktest.asm	/^ d5e:	4790                	lw	a2,8(a5)$/;"	l
d5e	user/usertests.asm	/^     d5e:	10054763          	bltz	a0,e6c <linktest+0x150>$/;"	l
d6	user/cat.asm	/^  d6:	2e2080e7          	jalr	738(ra) # 3b4 <close>$/;"	l
d6	user/echo.asm	/^  d6:	cf91                	beqz	a5,f2 <strlen+0x26>$/;"	l
d6	user/grep.asm	/^  d6:	1000                	addi	s0,sp,32$/;"	l
d6	user/grind.asm	/^      d6:	00001517          	auipc	a0,0x1$/;"	l
d6	user/init.asm	/^  d6:	00000097          	auipc	ra,0x0$/;"	l
d6	user/kill.asm	/^  d6:	1141                	addi	sp,sp,-16$/;"	l
d6	user/ln.asm	/^  d6:	0800                	addi	s0,sp,16$/;"	l
d6	user/ls.asm	/^  d6:	892a                	mv	s2,a0$/;"	l
d6	user/sh.asm	/^      d6:	00001097          	auipc	ra,0x1$/;"	l
d6	user/stressfs.asm	/^  d6:	44d1                	li	s1,20$/;"	l
d6	user/usertests.asm	/^      d6:	02055563          	bgez	a0,100 <opentest+0x66>$/;"	l
d6	user/wc.asm	/^  d6:	7be2                	ld	s7,56(sp)$/;"	l
d6	user/zombie.asm	/^  d6:	4501                	li	a0,0$/;"	l
d60	user/grind.asm	/^     d60:	00054603          	lbu	a2,0(a0)$/;"	l
d60	user/symlinktest.asm	/^ d60:	02061713          	slli	a4,a2,0x20$/;"	l
d62	user/sh.asm	/^     d62:	fee79ae3          	bne	a5,a4,d56 <memmove+0x46>$/;"	l
d62	user/usertests.asm	/^     d62:	84aa                	mv	s1,a0$/;"	l
d64	user/grind.asm	/^     d64:	fd06079b          	addiw	a5,a2,-48$/;"	l
d64	user/symlinktest.asm	/^ d64:	9301                	srli	a4,a4,0x20$/;"	l
d64	user/usertests.asm	/^     d64:	4615                	li	a2,5$/;"	l
d66	user/sh.asm	/^     d66:	bfc9                	j	d38 <memmove+0x28>$/;"	l
d66	user/symlinktest.asm	/^ d66:	0712                	slli	a4,a4,0x4$/;"	l
d66	user/usertests.asm	/^     d66:	00005597          	auipc	a1,0x5$/;"	l
d68	user/grind.asm	/^     d68:	0ff7f793          	andi	a5,a5,255$/;"	l
d68	user/sh.asm	/^     d68:	1141                	addi	sp,sp,-16$/;"	l
d68	user/symlinktest.asm	/^ d68:	973e                	add	a4,a4,a5$/;"	l
d6a	user/sh.asm	/^     d6a:	e422                	sd	s0,8(sp)$/;"	l
d6a	user/symlinktest.asm	/^ d6a:	fae689e3          	beq	a3,a4,d1c <free+0x26>$/;"	l
d6a	user/usertests.asm	/^     d6a:	60258593          	addi	a1,a1,1538 # 6368 <malloc+0x918>$/;"	l
d6c	user/grind.asm	/^     d6c:	4725                	li	a4,9$/;"	l
d6c	user/sh.asm	/^     d6c:	0800                	addi	s0,sp,16$/;"	l
d6e	user/grind.asm	/^     d6e:	02f76963          	bltu	a4,a5,da0 <atoi+0x46>$/;"	l
d6e	user/sh.asm	/^     d6e:	ca05                	beqz	a2,d9e <memcmp+0x36>$/;"	l
d6e	user/symlinktest.asm	/^ d6e:	e394                	sd	a3,0(a5)$/;"	l
d6e	user/usertests.asm	/^     d6e:	00005097          	auipc	ra,0x5$/;"	l
d70	user/sh.asm	/^     d70:	fff6069b          	addiw	a3,a2,-1$/;"	l
d70	user/symlinktest.asm	/^ d70:	00000717          	auipc	a4,0x0$/;"	l
d72	user/grind.asm	/^     d72:	86aa                	mv	a3,a0$/;"	l
d72	user/usertests.asm	/^     d72:	8c4080e7          	jalr	-1852(ra) # 5632 <write>$/;"	l
d74	user/grind.asm	/^     d74:	4501                	li	a0,0$/;"	l
d74	user/sh.asm	/^     d74:	1682                	slli	a3,a3,0x20$/;"	l
d74	user/symlinktest.asm	/^ d74:	5af73c23          	sd	a5,1464(a4) # 1328 <freep>$/;"	l
d76	user/grind.asm	/^     d76:	45a5                	li	a1,9$/;"	l
d76	user/sh.asm	/^     d76:	9281                	srli	a3,a3,0x20$/;"	l
d76	user/usertests.asm	/^     d76:	4795                	li	a5,5$/;"	l
d78	user/grind.asm	/^     d78:	0685                	addi	a3,a3,1$/;"	l
d78	user/sh.asm	/^     d78:	0685                	addi	a3,a3,1$/;"	l
d78	user/symlinktest.asm	/^ d78:	6422                	ld	s0,8(sp)$/;"	l
d78	user/usertests.asm	/^     d78:	10f51863          	bne	a0,a5,e88 <linktest+0x16c>$/;"	l
d7a	user/grind.asm	/^     d7a:	0025179b          	slliw	a5,a0,0x2$/;"	l
d7a	user/sh.asm	/^     d7a:	96aa                	add	a3,a3,a0$/;"	l
d7a	user/symlinktest.asm	/^ d7a:	0141                	addi	sp,sp,16$/;"	l
d7c	user/sh.asm	/^     d7c:	00054783          	lbu	a5,0(a0)$/;"	l
d7c	user/symlinktest.asm	/^ d7c:	8082                	ret$/;"	l
d7c	user/usertests.asm	/^     d7c:	8526                	mv	a0,s1$/;"	l
d7e	user/grind.asm	/^     d7e:	9fa9                	addw	a5,a5,a0$/;"	l
d7e	user/symlinktest.asm	/^ d7e:	7139                	addi	sp,sp,-64$/;"	l
d7e	user/usertests.asm	/^     d7e:	00005097          	auipc	ra,0x5$/;"	l
d8	user/bigfile.asm	/^  d8:	4581                	li	a1,0$/;"	l
d8	user/echo.asm	/^  d8:	0505                	addi	a0,a0,1$/;"	l
d8	user/forktest.asm	/^  d8:	00000097          	auipc	ra,0x0$/;"	l
d8	user/grep.asm	/^  d8:	892a                	mv	s2,a0$/;"	l
d8	user/kill.asm	/^  d8:	e422                	sd	s0,8(sp)$/;"	l
d8	user/ln.asm	/^  d8:	ca19                	beqz	a2,ee <memset+0x1c>$/;"	l
d8	user/ls.asm	/^  d8:	4581                	li	a1,0$/;"	l
d8	user/mkdir.asm	/^  d8:	0785                	addi	a5,a5,1$/;"	l
d8	user/rm.asm	/^  d8:	0785                	addi	a5,a5,1$/;"	l
d8	user/stressfs.asm	/^  d8:	20000613          	li	a2,512$/;"	l
d8	user/symlinktest.asm	/^  d8:	e1450513          	addi	a0,a0,-492 # ee8 <malloc+0x16a>$/;"	l
d8	user/wc.asm	/^  d8:	7c42                	ld	s8,48(sp)$/;"	l
d8	user/zombie.asm	/^  d8:	6422                	ld	s0,8(sp)$/;"	l
d80	user/grind.asm	/^     d80:	0017979b          	slliw	a5,a5,0x1$/;"	l
d80	user/sh.asm	/^     d80:	0005c703          	lbu	a4,0(a1)$/;"	l
d80	user/symlinktest.asm	/^ d80:	fc06                	sd	ra,56(sp)$/;"	l
d82	user/symlinktest.asm	/^ d82:	f822                	sd	s0,48(sp)$/;"	l
d82	user/usertests.asm	/^     d82:	8bc080e7          	jalr	-1860(ra) # 563a <close>$/;"	l
d84	user/grind.asm	/^     d84:	9fb1                	addw	a5,a5,a2$/;"	l
d84	user/sh.asm	/^     d84:	00e79863          	bne	a5,a4,d94 <memcmp+0x2c>$/;"	l
d84	user/symlinktest.asm	/^ d84:	f426                	sd	s1,40(sp)$/;"	l
d86	user/grind.asm	/^     d86:	fd07851b          	addiw	a0,a5,-48$/;"	l
d86	user/symlinktest.asm	/^ d86:	f04a                	sd	s2,32(sp)$/;"	l
d86	user/usertests.asm	/^     d86:	00005597          	auipc	a1,0x5$/;"	l
d88	user/sh.asm	/^     d88:	0505                	addi	a0,a0,1$/;"	l
d88	user/symlinktest.asm	/^ d88:	ec4e                	sd	s3,24(sp)$/;"	l
d8a	user/grind.asm	/^     d8a:	0006c603          	lbu	a2,0(a3)$/;"	l
d8a	user/sh.asm	/^     d8a:	0585                	addi	a1,a1,1$/;"	l
d8a	user/symlinktest.asm	/^ d8a:	e852                	sd	s4,16(sp)$/;"	l
d8a	user/usertests.asm	/^     d8a:	69a58593          	addi	a1,a1,1690 # 6420 <malloc+0x9d0>$/;"	l
d8c	user/sh.asm	/^     d8c:	fed518e3          	bne	a0,a3,d7c <memcmp+0x14>$/;"	l
d8c	user/symlinktest.asm	/^ d8c:	e456                	sd	s5,8(sp)$/;"	l
d8e	user/grind.asm	/^     d8e:	fd06071b          	addiw	a4,a2,-48$/;"	l
d8e	user/symlinktest.asm	/^ d8e:	e05a                	sd	s6,0(sp)$/;"	l
d8e	user/usertests.asm	/^     d8e:	00005517          	auipc	a0,0x5$/;"	l
d90	user/sh.asm	/^     d90:	4501                	li	a0,0$/;"	l
d90	user/symlinktest.asm	/^ d90:	0080                	addi	s0,sp,64$/;"	l
d92	user/grind.asm	/^     d92:	0ff77713          	andi	a4,a4,255$/;"	l
d92	user/sh.asm	/^     d92:	a019                	j	d98 <memcmp+0x30>$/;"	l
d92	user/symlinktest.asm	/^ d92:	02051493          	slli	s1,a0,0x20$/;"	l
d92	user/usertests.asm	/^     d92:	68a50513          	addi	a0,a0,1674 # 6418 <malloc+0x9c8>$/;"	l
d94	user/sh.asm	/^     d94:	40e7853b          	subw	a0,a5,a4$/;"	l
d96	user/grind.asm	/^     d96:	fee5f1e3          	bgeu	a1,a4,d78 <atoi+0x1e>$/;"	l
d96	user/symlinktest.asm	/^ d96:	9081                	srli	s1,s1,0x20$/;"	l
d96	user/usertests.asm	/^     d96:	00005097          	auipc	ra,0x5$/;"	l
d98	user/sh.asm	/^     d98:	6422                	ld	s0,8(sp)$/;"	l
d98	user/symlinktest.asm	/^ d98:	04bd                	addi	s1,s1,15$/;"	l
d9a	user/grind.asm	/^     d9a:	6422                	ld	s0,8(sp)$/;"	l
d9a	user/sh.asm	/^     d9a:	0141                	addi	sp,sp,16$/;"	l
d9a	user/symlinktest.asm	/^ d9a:	8091                	srli	s1,s1,0x4$/;"	l
d9a	user/usertests.asm	/^     d9a:	8dc080e7          	jalr	-1828(ra) # 5672 <link>$/;"	l
d9c	user/grind.asm	/^     d9c:	0141                	addi	sp,sp,16$/;"	l
d9c	user/sh.asm	/^     d9c:	8082                	ret$/;"	l
d9c	user/symlinktest.asm	/^ d9c:	0014899b          	addiw	s3,s1,1$/;"	l
d9e	user/grind.asm	/^     d9e:	8082                	ret$/;"	l
d9e	user/sh.asm	/^     d9e:	4501                	li	a0,0$/;"	l
d9e	user/usertests.asm	/^     d9e:	10054363          	bltz	a0,ea4 <linktest+0x188>$/;"	l
da	user/bigfile.asm	/^  da:	00001517          	auipc	a0,0x1$/;"	l
da	user/cat.asm	/^  da:	0921                	addi	s2,s2,8$/;"	l
da	user/echo.asm	/^  da:	87aa                	mv	a5,a0$/;"	l
da	user/grep.asm	/^  da:	84ae                	mv	s1,a1$/;"	l
da	user/grind.asm	/^      da:	2ca50513          	addi	a0,a0,714 # 13a0 <malloc+0x10c>$/;"	l
da	user/init.asm	/^  da:	2c8080e7          	jalr	712(ra) # 39e <exec>$/;"	l
da	user/kill.asm	/^  da:	0800                	addi	s0,sp,16$/;"	l
da	user/ln.asm	/^  da:	87aa                	mv	a5,a0$/;"	l
da	user/ls.asm	/^  da:	00000097          	auipc	ra,0x0$/;"	l
da	user/mkdir.asm	/^  da:	fff7c703          	lbu	a4,-1(a5)$/;"	l
da	user/rm.asm	/^  da:	fff7c703          	lbu	a4,-1(a5)$/;"	l
da	user/sh.asm	/^      da:	cec080e7          	jalr	-788(ra) # dc2 <exit>$/;"	l
da	user/usertests.asm	/^      da:	60e2                	ld	ra,24(sp)$/;"	l
da	user/wc.asm	/^  da:	7ca2                	ld	s9,40(sp)$/;"	l
da	user/zombie.asm	/^  da:	0141                	addi	sp,sp,16$/;"	l
da0	user/grind.asm	/^     da0:	4501                	li	a0,0$/;"	l
da0	user/sh.asm	/^     da0:	bfe5                	j	d98 <memcmp+0x30>$/;"	l
da0	user/symlinktest.asm	/^ da0:	0485                	addi	s1,s1,1$/;"	l
da2	user/grind.asm	/^     da2:	bfe5                	j	d9a <atoi+0x40>$/;"	l
da2	user/sh.asm	/^     da2:	1141                	addi	sp,sp,-16$/;"	l
da2	user/symlinktest.asm	/^ da2:	00000517          	auipc	a0,0x0$/;"	l
da2	user/usertests.asm	/^     da2:	00005517          	auipc	a0,0x5$/;"	l
da4	user/grind.asm	/^     da4:	1141                	addi	sp,sp,-16$/;"	l
da4	user/sh.asm	/^     da4:	e406                	sd	ra,8(sp)$/;"	l
da6	user/grind.asm	/^     da6:	e422                	sd	s0,8(sp)$/;"	l
da6	user/sh.asm	/^     da6:	e022                	sd	s0,0(sp)$/;"	l
da6	user/symlinktest.asm	/^ da6:	58653503          	ld	a0,1414(a0) # 1328 <freep>$/;"	l
da6	user/usertests.asm	/^     da6:	67650513          	addi	a0,a0,1654 # 6418 <malloc+0x9c8>$/;"	l
da8	user/grind.asm	/^     da8:	0800                	addi	s0,sp,16$/;"	l
da8	user/sh.asm	/^     da8:	0800                	addi	s0,sp,16$/;"	l
daa	user/grind.asm	/^     daa:	02b57463          	bgeu	a0,a1,dd2 <memmove+0x2e>$/;"	l
daa	user/sh.asm	/^     daa:	00000097          	auipc	ra,0x0$/;"	l
daa	user/symlinktest.asm	/^ daa:	c515                	beqz	a0,dd6 <malloc+0x58>$/;"	l
daa	user/usertests.asm	/^     daa:	00005097          	auipc	ra,0x5$/;"	l
dac	user/symlinktest.asm	/^ dac:	611c                	ld	a5,0(a0)$/;"	l
dae	user/grind.asm	/^     dae:	00c05f63          	blez	a2,dcc <memmove+0x28>$/;"	l
dae	user/sh.asm	/^     dae:	f66080e7          	jalr	-154(ra) # d10 <memmove>$/;"	l
dae	user/symlinktest.asm	/^ dae:	4798                	lw	a4,8(a5)$/;"	l
dae	user/usertests.asm	/^     dae:	8b8080e7          	jalr	-1864(ra) # 5662 <unlink>$/;"	l
data	kernel/buf.h	/^  uchar data[BSIZE];$/;"	m	struct:buf	typeref:typename:uchar[]
data	kernel/pipe.c	/^  char data[PIPESIZE];$/;"	m	struct:pipe	typeref:typename:char[]	file:
day	kernel/date.h	/^  uint day;$/;"	m	struct:rtcdate	typeref:typename:uint
db0	user/symlinktest.asm	/^ db0:	02977f63          	bgeu	a4,s1,dee <malloc+0x70>$/;"	l
db2	user/grind.asm	/^     db2:	1602                	slli	a2,a2,0x20$/;"	l
db2	user/sh.asm	/^     db2:	60a2                	ld	ra,8(sp)$/;"	l
db2	user/usertests.asm	/^     db2:	4581                	li	a1,0$/;"	l
db4	user/grind.asm	/^     db4:	9201                	srli	a2,a2,0x20$/;"	l
db4	user/sh.asm	/^     db4:	6402                	ld	s0,0(sp)$/;"	l
db4	user/symlinktest.asm	/^ db4:	8a4e                	mv	s4,s3$/;"	l
db4	user/usertests.asm	/^     db4:	00005517          	auipc	a0,0x5$/;"	l
db6	user/grind.asm	/^     db6:	00c507b3          	add	a5,a0,a2$/;"	l
db6	user/sh.asm	/^     db6:	0141                	addi	sp,sp,16$/;"	l
db6	user/symlinktest.asm	/^ db6:	0009871b          	sext.w	a4,s3$/;"	l
db8	user/sh.asm	/^     db8:	8082                	ret$/;"	l
db8	user/usertests.asm	/^     db8:	66450513          	addi	a0,a0,1636 # 6418 <malloc+0x9c8>$/;"	l
dba	user/grind.asm	/^     dba:	872a                	mv	a4,a0$/;"	l
dba	user/sh.asm	/^     dba:	4885                	li	a7,1$/;"	l
dba	user/symlinktest.asm	/^ dba:	6685                	lui	a3,0x1$/;"	l
dbc	user/grind.asm	/^     dbc:	0585                	addi	a1,a1,1$/;"	l
dbc	user/sh.asm	/^     dbc:	00000073          	ecall$/;"	l
dbc	user/symlinktest.asm	/^ dbc:	00d77363          	bgeu	a4,a3,dc2 <malloc+0x44>$/;"	l
dbc	user/usertests.asm	/^     dbc:	00005097          	auipc	ra,0x5$/;"	l
dbe	user/grind.asm	/^     dbe:	0705                	addi	a4,a4,1$/;"	l
dc	user/cat.asm	/^  dc:	fd391ce3          	bne	s2,s3,b4 <main+0x2a>$/;"	l
dc	user/echo.asm	/^  dc:	4685                	li	a3,1$/;"	l
dc	user/forktest.asm	/^  dc:	f28080e7          	jalr	-216(ra) # 0 <print>$/;"	l
dc	user/grep.asm	/^  dc:	00054703          	lbu	a4,0(a0)$/;"	l
dc	user/kill.asm	/^  dc:	ca19                	beqz	a2,f2 <memset+0x1c>$/;"	l
dc	user/ln.asm	/^  dc:	1602                	slli	a2,a2,0x20$/;"	l
dc	user/stressfs.asm	/^  dc:	dd040593          	addi	a1,s0,-560$/;"	l
dc	user/symlinktest.asm	/^  dc:	00001097          	auipc	ra,0x1$/;"	l
dc	user/usertests.asm	/^      dc:	6442                	ld	s0,16(sp)$/;"	l
dc	user/wc.asm	/^  dc:	7d02                	ld	s10,32(sp)$/;"	l
dc	user/zombie.asm	/^  dc:	8082                	ret$/;"	l
dc0	user/grind.asm	/^     dc0:	fff5c683          	lbu	a3,-1(a1)$/;"	l
dc0	user/sh.asm	/^     dc0:	8082                	ret$/;"	l
dc0	user/symlinktest.asm	/^ dc0:	6a05                	lui	s4,0x1$/;"	l
dc0	user/usertests.asm	/^     dc0:	896080e7          	jalr	-1898(ra) # 5652 <open>$/;"	l
dc2	user/sh.asm	/^     dc2:	4889                	li	a7,2$/;"	l
dc2	user/symlinktest.asm	/^ dc2:	000a0b1b          	sext.w	s6,s4$/;"	l
dc4	user/grind.asm	/^     dc4:	fed70fa3          	sb	a3,-1(a4)$/;"	l
dc4	user/sh.asm	/^     dc4:	00000073          	ecall$/;"	l
dc4	user/usertests.asm	/^     dc4:	0e055e63          	bgez	a0,ec0 <linktest+0x1a4>$/;"	l
dc6	user/symlinktest.asm	/^ dc6:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
dc8	user/grind.asm	/^     dc8:	fee79ae3          	bne	a5,a4,dbc <memmove+0x18>$/;"	l
dc8	user/sh.asm	/^     dc8:	8082                	ret$/;"	l
dc8	user/usertests.asm	/^     dc8:	4581                	li	a1,0$/;"	l
dca	user/sh.asm	/^     dca:	488d                	li	a7,3$/;"	l
dca	user/symlinktest.asm	/^ dca:	00000917          	auipc	s2,0x0$/;"	l
dca	user/usertests.asm	/^     dca:	00005517          	auipc	a0,0x5$/;"	l
dcc	user/grind.asm	/^     dcc:	6422                	ld	s0,8(sp)$/;"	l
dcc	user/sh.asm	/^     dcc:	00000073          	ecall$/;"	l
dce	user/grind.asm	/^     dce:	0141                	addi	sp,sp,16$/;"	l
dce	user/symlinktest.asm	/^ dce:	55e90913          	addi	s2,s2,1374 # 1328 <freep>$/;"	l
dce	user/usertests.asm	/^     dce:	65650513          	addi	a0,a0,1622 # 6420 <malloc+0x9d0>$/;"	l
dd0	user/grind.asm	/^     dd0:	8082                	ret$/;"	l
dd0	user/sh.asm	/^     dd0:	8082                	ret$/;"	l
dd2	user/grind.asm	/^     dd2:	00c50733          	add	a4,a0,a2$/;"	l
dd2	user/sh.asm	/^     dd2:	4891                	li	a7,4$/;"	l
dd2	user/symlinktest.asm	/^ dd2:	5afd                	li	s5,-1$/;"	l
dd2	user/usertests.asm	/^     dd2:	00005097          	auipc	ra,0x5$/;"	l
dd4	user/sh.asm	/^     dd4:	00000073          	ecall$/;"	l
dd4	user/symlinktest.asm	/^ dd4:	a88d                	j	e46 <malloc+0xc8>$/;"	l
dd6	user/grind.asm	/^     dd6:	95b2                	add	a1,a1,a2$/;"	l
dd6	user/symlinktest.asm	/^ dd6:	00000797          	auipc	a5,0x0$/;"	l
dd6	user/usertests.asm	/^     dd6:	880080e7          	jalr	-1920(ra) # 5652 <open>$/;"	l
dd8	user/grind.asm	/^     dd8:	fec05ae3          	blez	a2,dcc <memmove+0x28>$/;"	l
dd8	user/sh.asm	/^     dd8:	8082                	ret$/;"	l
dda	user/sh.asm	/^     dda:	4895                	li	a7,5$/;"	l
dda	user/symlinktest.asm	/^ dda:	55a78793          	addi	a5,a5,1370 # 1330 <base>$/;"	l
dda	user/usertests.asm	/^     dda:	84aa                	mv	s1,a0$/;"	l
ddc	user/grind.asm	/^     ddc:	fff6079b          	addiw	a5,a2,-1$/;"	l
ddc	user/sh.asm	/^     ddc:	00000073          	ecall$/;"	l
ddc	user/usertests.asm	/^     ddc:	10054063          	bltz	a0,edc <linktest+0x1c0>$/;"	l
dde	user/symlinktest.asm	/^ dde:	00000717          	auipc	a4,0x0$/;"	l
de	user/bigfile.asm	/^  de:	84650513          	addi	a0,a0,-1978 # 920 <malloc+0xea>$/;"	l
de	user/echo.asm	/^  de:	9e89                	subw	a3,a3,a0$/;"	l
de	user/grind.asm	/^      de:	00001097          	auipc	ra,0x1$/;"	l
de	user/init.asm	/^  de:	00000517          	auipc	a0,0x0$/;"	l
de	user/kill.asm	/^  de:	87aa                	mv	a5,a0$/;"	l
de	user/ln.asm	/^  de:	9201                	srli	a2,a2,0x20$/;"	l
de	user/ls.asm	/^  de:	4a8080e7          	jalr	1192(ra) # 582 <open>$/;"	l
de	user/mkdir.asm	/^  de:	fb7d                	bnez	a4,d4 <strlen+0x14>$/;"	l
de	user/rm.asm	/^  de:	fb7d                	bnez	a4,d4 <strlen+0x14>$/;"	l
de	user/sh.asm	/^      de:	00001517          	auipc	a0,0x1$/;"	l
de	user/usertests.asm	/^      de:	64a2                	ld	s1,8(sp)$/;"	l
de	user/wc.asm	/^  de:	6de2                	ld	s11,24(sp)$/;"	l
de	user/zombie.asm	/^  de:	4501                	li	a0,0$/;"	l
de0	user/grind.asm	/^     de0:	1782                	slli	a5,a5,0x20$/;"	l
de0	user/sh.asm	/^     de0:	8082                	ret$/;"	l
de0	user/usertests.asm	/^     de0:	660d                	lui	a2,0x3$/;"	l
de2	user/grind.asm	/^     de2:	9381                	srli	a5,a5,0x20$/;"	l
de2	user/sh.asm	/^     de2:	48c1                	li	a7,16$/;"	l
de2	user/symlinktest.asm	/^ de2:	54f73523          	sd	a5,1354(a4) # 1328 <freep>$/;"	l
de2	user/usertests.asm	/^     de2:	0000b597          	auipc	a1,0xb$/;"	l
de4	user/grind.asm	/^     de4:	fff7c793          	not	a5,a5$/;"	l
de4	user/sh.asm	/^     de4:	00000073          	ecall$/;"	l
de6	user/symlinktest.asm	/^ de6:	e39c                	sd	a5,0(a5)$/;"	l
de6	user/usertests.asm	/^     de6:	cc658593          	addi	a1,a1,-826 # baa8 <buf>$/;"	l
de8	user/grind.asm	/^     de8:	97ba                	add	a5,a5,a4$/;"	l
de8	user/sh.asm	/^     de8:	8082                	ret$/;"	l
de8	user/symlinktest.asm	/^ de8:	0007a423          	sw	zero,8(a5)$/;"	l
dea	user/grind.asm	/^     dea:	15fd                	addi	a1,a1,-1$/;"	l
dea	user/sh.asm	/^     dea:	48d5                	li	a7,21$/;"	l
dea	user/usertests.asm	/^     dea:	00005097          	auipc	ra,0x5$/;"	l
dec	user/grind.asm	/^     dec:	177d                	addi	a4,a4,-1$/;"	l
dec	user/sh.asm	/^     dec:	00000073          	ecall$/;"	l
dec	user/symlinktest.asm	/^ dec:	b7e1                	j	db4 <malloc+0x36>$/;"	l
dee	user/grind.asm	/^     dee:	0005c683          	lbu	a3,0(a1)$/;"	l
dee	user/symlinktest.asm	/^ dee:	02e48b63          	beq	s1,a4,e24 <malloc+0xa6>$/;"	l
dee	user/usertests.asm	/^     dee:	840080e7          	jalr	-1984(ra) # 562a <read>$/;"	l
desc	kernel/virtio_disk.c	/^  struct virtq_desc *desc;$/;"	m	struct:disk	typeref:struct:virtq_desc *	file:
dev	kernel/buf.h	/^  uint dev;$/;"	m	struct:buf	typeref:typename:uint
dev	kernel/file.h	/^  uint dev;           \/\/ Device number$/;"	m	struct:inode	typeref:typename:uint
dev	kernel/log.c	/^  int dev;$/;"	m	struct:log	typeref:typename:int	file:
dev	kernel/stat.h	/^  int dev;     \/\/ File system's disk device$/;"	m	struct:stat	typeref:typename:int
devintr	kernel/trap.c	/^devintr()$/;"	f	typeref:typename:int
devsw	kernel/file.c	/^struct devsw devsw[NDEV];$/;"	v	typeref:struct:devsw[]
devsw	kernel/file.h	/^struct devsw {$/;"	s
df0	user/sh.asm	/^     df0:	8082                	ret$/;"	l
df2	user/grind.asm	/^     df2:	00d70023          	sb	a3,0(a4)$/;"	l
df2	user/sh.asm	/^     df2:	4899                	li	a7,6$/;"	l
df2	user/symlinktest.asm	/^ df2:	4137073b          	subw	a4,a4,s3$/;"	l
df2	user/usertests.asm	/^     df2:	4795                	li	a5,5$/;"	l
df4	user/sh.asm	/^     df4:	00000073          	ecall$/;"	l
df4	user/usertests.asm	/^     df4:	10f51263          	bne	a0,a5,ef8 <linktest+0x1dc>$/;"	l
df6	user/grind.asm	/^     df6:	fee79ae3          	bne	a5,a4,dea <memmove+0x46>$/;"	l
df6	user/symlinktest.asm	/^ df6:	c798                	sw	a4,8(a5)$/;"	l
df8	user/sh.asm	/^     df8:	8082                	ret$/;"	l
df8	user/symlinktest.asm	/^ df8:	1702                	slli	a4,a4,0x20$/;"	l
df8	user/usertests.asm	/^     df8:	8526                	mv	a0,s1$/;"	l
dfa	user/grind.asm	/^     dfa:	bfc9                	j	dcc <memmove+0x28>$/;"	l
dfa	user/sh.asm	/^     dfa:	489d                	li	a7,7$/;"	l
dfa	user/symlinktest.asm	/^ dfa:	9301                	srli	a4,a4,0x20$/;"	l
dfa	user/usertests.asm	/^     dfa:	00005097          	auipc	ra,0x5$/;"	l
dfc	user/grind.asm	/^     dfc:	1141                	addi	sp,sp,-16$/;"	l
dfc	user/sh.asm	/^     dfc:	00000073          	ecall$/;"	l
dfc	user/symlinktest.asm	/^ dfc:	0712                	slli	a4,a4,0x4$/;"	l
dfe	user/grind.asm	/^     dfe:	e422                	sd	s0,8(sp)$/;"	l
dfe	user/symlinktest.asm	/^ dfe:	97ba                	add	a5,a5,a4$/;"	l
dfe	user/usertests.asm	/^     dfe:	840080e7          	jalr	-1984(ra) # 563a <close>$/;"	l
digits	kernel/printf.c	/^static char digits[] = "0123456789abcdef";$/;"	v	typeref:typename:char[]	file:
digits	user/printf.c	/^static char digits[] = "0123456789ABCDEF";$/;"	v	typeref:typename:char[]	file:
dinode	kernel/fs.h	/^struct dinode {$/;"	s
dip	kernel/kernel.asm	/^    dip = (struct dinode*)bp->data + inum%IPB;$/;"	d
dip	kernel/kernel.asm	/^    dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dip	kernel/kernel.asm	/^  dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dirent	kernel/fs.h	/^struct dirent {$/;"	s
dirfile	user/usertests.c	/^dirfile(char *s)$/;"	f	typeref:typename:void
dirlink	kernel/fs.c	/^dirlink(struct inode *dp, char *name, uint inum)$/;"	f	typeref:typename:int
dirlookup	kernel/fs.c	/^dirlookup(struct inode *dp, char *name, uint *poff)$/;"	f	typeref:struct:inode *
dirtest	user/usertests.c	/^void dirtest(char *s)$/;"	f	typeref:typename:void
disk	kernel/buf.h	/^  int disk;    \/\/ does disk "own" buf?$/;"	m	struct:buf	typeref:typename:int
disk	kernel/virtio_disk.c	/^static struct disk {$/;"	s	file:
disk	kernel/virtio_disk.c	/^} __attribute__ ((aligned (PGSIZE))) disk;$/;"	v	typeref:struct:disk
do_commit	kernel/kernel.asm	/^    do_commit = 1;$/;"	d
do_rand	user/grind.c	/^do_rand(unsigned long *ctx)$/;"	f	typeref:typename:int
done	user/symlinktest.asm	/^done:$/;"	l
dst	user/bigfile.asm	/^  dst = vdst;$/;"	d
dst	user/cat.asm	/^  dst = vdst;$/;"	d
dst	user/echo.asm	/^  dst = vdst;$/;"	d
dst	user/forktest.asm	/^  dst = vdst;$/;"	d
dst	user/grep.asm	/^  dst = vdst;$/;"	d
dst	user/grind.asm	/^  dst = vdst;$/;"	d
dst	user/init.asm	/^  dst = vdst;$/;"	d
dst	user/kill.asm	/^  dst = vdst;$/;"	d
dst	user/ln.asm	/^  dst = vdst;$/;"	d
dst	user/ls.asm	/^  dst = vdst;$/;"	d
dst	user/mkdir.asm	/^  dst = vdst;$/;"	d
dst	user/rm.asm	/^  dst = vdst;$/;"	d
dst	user/sh.asm	/^  dst = vdst;$/;"	d
dst	user/stressfs.asm	/^  dst = vdst;$/;"	d
dst	user/symlinktest.asm	/^  dst = vdst;$/;"	d
dst	user/usertests.asm	/^  dst = vdst;$/;"	d
dst	user/wc.asm	/^  dst = vdst;$/;"	d
dst	user/zombie.asm	/^  dst = vdst;$/;"	d
dstva	kernel/kernel.asm	/^    dstva = va0 + PGSIZE;$/;"	d
dup	user/bigfile.asm	/^dup:$/;"	l
dup	user/cat.asm	/^dup:$/;"	l
dup	user/echo.asm	/^dup:$/;"	l
dup	user/forktest.asm	/^dup:$/;"	l
dup	user/grep.asm	/^dup:$/;"	l
dup	user/grind.asm	/^dup:$/;"	l
dup	user/init.asm	/^dup:$/;"	l
dup	user/kill.asm	/^dup:$/;"	l
dup	user/ln.asm	/^dup:$/;"	l
dup	user/ls.asm	/^dup:$/;"	l
dup	user/mkdir.asm	/^dup:$/;"	l
dup	user/rm.asm	/^dup:$/;"	l
dup	user/sh.asm	/^dup:$/;"	l
dup	user/stressfs.asm	/^dup:$/;"	l
dup	user/symlinktest.asm	/^dup:$/;"	l
dup	user/usertests.asm	/^dup:$/;"	l
dup	user/usys.S	/^dup:$/;"	l
dup	user/wc.asm	/^dup:$/;"	l
dup	user/zombie.asm	/^dup:$/;"	l
e	kernel/console.c	/^  uint e;  \/\/ Edit index$/;"	m	struct:__anonb6393d190108	typeref:typename:uint	file:
e	user/cat.asm	/^   e:	89aa                	mv	s3,a0$/;"	l
e	user/echo.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	user/grep.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	user/init.asm	/^   e:	00001517          	auipc	a0,0x1$/;"	l
e	user/kill.asm	/^   e:	02a7dd63          	bge	a5,a0,48 <main+0x48>$/;"	l
e	user/ls.asm	/^   e:	84aa                	mv	s1,a0$/;"	l
e	user/mkdir.asm	/^   e:	4785                	li	a5,1$/;"	l
e	user/rm.asm	/^   e:	4785                	li	a5,1$/;"	l
e	user/sh.asm	/^       e:	892e                	mv	s2,a1$/;"	l
e	user/usertests.asm	/^       e:	057e                	slli	a0,a0,0x1f$/;"	l
e	user/wc.asm	/^   e:	e4d6                	sd	s5,72(sp)$/;"	l
e0	user/cat.asm	/^  e0:	4501                	li	a0,0$/;"	l
e0	user/echo.asm	/^  e0:	00f6853b          	addw	a0,a3,a5$/;"	l
e0	user/forktest.asm	/^  e0:	4505                	li	a0,1$/;"	l
e0	user/grep.asm	/^  e0:	05e00793          	li	a5,94$/;"	l
e0	user/kill.asm	/^  e0:	1602                	slli	a2,a2,0x20$/;"	l
e0	user/ln.asm	/^  e0:	00a60733          	add	a4,a2,a0$/;"	l
e0	user/mkdir.asm	/^  e0:	6422                	ld	s0,8(sp)$/;"	l
e0	user/rm.asm	/^  e0:	6422                	ld	s0,8(sp)$/;"	l
e0	user/stressfs.asm	/^  e0:	854a                	mv	a0,s2$/;"	l
e0	user/symlinktest.asm	/^  e0:	8b4080e7          	jalr	-1868(ra) # 990 <unlink>$/;"	l
e0	user/usertests.asm	/^      e0:	6105                	addi	sp,sp,32$/;"	l
e0	user/wc.asm	/^  e0:	6109                	addi	sp,sp,128$/;"	l
e0	user/zombie.asm	/^  e0:	bfe5                	j	d8 <strchr+0x1a>$/;"	l
e00	user/grind.asm	/^     e00:	0800                	addi	s0,sp,16$/;"	l
e00	user/sh.asm	/^     e00:	8082                	ret$/;"	l
e00	user/symlinktest.asm	/^ e00:	0137a423          	sw	s3,8(a5)$/;"	l
e02	user/grind.asm	/^     e02:	ca05                	beqz	a2,e32 <memcmp+0x36>$/;"	l
e02	user/sh.asm	/^     e02:	48bd                	li	a7,15$/;"	l
e02	user/usertests.asm	/^     e02:	00005597          	auipc	a1,0x5$/;"	l
e04	user/grind.asm	/^     e04:	fff6069b          	addiw	a3,a2,-1$/;"	l
e04	user/sh.asm	/^     e04:	00000073          	ecall$/;"	l
e04	user/symlinktest.asm	/^ e04:	00000717          	auipc	a4,0x0$/;"	l
e06	user/usertests.asm	/^     e06:	61e58593          	addi	a1,a1,1566 # 6420 <malloc+0x9d0>$/;"	l
e08	user/grind.asm	/^     e08:	1682                	slli	a3,a3,0x20$/;"	l
e08	user/sh.asm	/^     e08:	8082                	ret$/;"	l
e08	user/symlinktest.asm	/^ e08:	52a73223          	sd	a0,1316(a4) # 1328 <freep>$/;"	l
e0a	user/grind.asm	/^     e0a:	9281                	srli	a3,a3,0x20$/;"	l
e0a	user/sh.asm	/^     e0a:	48c5                	li	a7,17$/;"	l
e0a	user/usertests.asm	/^     e0a:	852e                	mv	a0,a1$/;"	l
e0c	user/grind.asm	/^     e0c:	0685                	addi	a3,a3,1$/;"	l
e0c	user/sh.asm	/^     e0c:	00000073          	ecall$/;"	l
e0c	user/symlinktest.asm	/^ e0c:	01078513          	addi	a0,a5,16$/;"	l
e0c	user/usertests.asm	/^     e0c:	00005097          	auipc	ra,0x5$/;"	l
e0e	user/grind.asm	/^     e0e:	96aa                	add	a3,a3,a0$/;"	l
e10	user/grind.asm	/^     e10:	00054783          	lbu	a5,0(a0)$/;"	l
e10	user/sh.asm	/^     e10:	8082                	ret$/;"	l
e10	user/symlinktest.asm	/^ e10:	70e2                	ld	ra,56(sp)$/;"	l
e10	user/usertests.asm	/^     e10:	866080e7          	jalr	-1946(ra) # 5672 <link>$/;"	l
e12	user/sh.asm	/^     e12:	48c9                	li	a7,18$/;"	l
e12	user/symlinktest.asm	/^ e12:	7442                	ld	s0,48(sp)$/;"	l
e14	user/grind.asm	/^     e14:	0005c703          	lbu	a4,0(a1)$/;"	l
e14	user/sh.asm	/^     e14:	00000073          	ecall$/;"	l
e14	user/symlinktest.asm	/^ e14:	74a2                	ld	s1,40(sp)$/;"	l
e14	user/usertests.asm	/^     e14:	10055063          	bgez	a0,f14 <linktest+0x1f8>$/;"	l
e16	user/symlinktest.asm	/^ e16:	7902                	ld	s2,32(sp)$/;"	l
e18	user/grind.asm	/^     e18:	00e79863          	bne	a5,a4,e28 <memcmp+0x2c>$/;"	l
e18	user/sh.asm	/^     e18:	8082                	ret$/;"	l
e18	user/symlinktest.asm	/^ e18:	69e2                	ld	s3,24(sp)$/;"	l
e18	user/usertests.asm	/^     e18:	00005517          	auipc	a0,0x5$/;"	l
e1a	user/sh.asm	/^     e1a:	48a1                	li	a7,8$/;"	l
e1a	user/symlinktest.asm	/^ e1a:	6a42                	ld	s4,16(sp)$/;"	l
e1c	user/grind.asm	/^     e1c:	0505                	addi	a0,a0,1$/;"	l
e1c	user/sh.asm	/^     e1c:	00000073          	ecall$/;"	l
e1c	user/symlinktest.asm	/^ e1c:	6aa2                	ld	s5,8(sp)$/;"	l
e1c	user/usertests.asm	/^     e1c:	60850513          	addi	a0,a0,1544 # 6420 <malloc+0x9d0>$/;"	l
e1e	user/grind.asm	/^     e1e:	0585                	addi	a1,a1,1$/;"	l
e1e	user/symlinktest.asm	/^ e1e:	6b02                	ld	s6,0(sp)$/;"	l
e2	user/bigfile.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	user/cat.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	user/forktest.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	user/grind.asm	/^      e2:	de8080e7          	jalr	-536(ra) # ec6 <chdir>$/;"	l
e2	user/init.asm	/^  e2:	7ea50513          	addi	a0,a0,2026 # 8c8 <malloc+0x124>$/;"	l
e2	user/kill.asm	/^  e2:	9201                	srli	a2,a2,0x20$/;"	l
e2	user/ls.asm	/^  e2:	06054f63          	bltz	a0,160 <ls+0xac>$/;"	l
e2	user/mkdir.asm	/^  e2:	0141                	addi	sp,sp,16$/;"	l
e2	user/rm.asm	/^  e2:	0141                	addi	sp,sp,16$/;"	l
e2	user/sh.asm	/^      e2:	22250513          	addi	a0,a0,546 # 1300 <malloc+0x100>$/;"	l
e2	user/stressfs.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	user/usertests.asm	/^      e2:	8082                	ret$/;"	l
e2	user/wc.asm	/^  e2:	8082                	ret$/;"	l
e2	user/zombie.asm	/^  e2:	711d                	addi	sp,sp,-96$/;"	l
e20	user/grind.asm	/^     e20:	fed518e3          	bne	a0,a3,e10 <memcmp+0x14>$/;"	l
e20	user/sh.asm	/^     e20:	8082                	ret$/;"	l
e20	user/symlinktest.asm	/^ e20:	6121                	addi	sp,sp,64$/;"	l
e20	user/usertests.asm	/^     e20:	00005097          	auipc	ra,0x5$/;"	l
e22	user/sh.asm	/^     e22:	48cd                	li	a7,19$/;"	l
e22	user/symlinktest.asm	/^ e22:	8082                	ret$/;"	l
e24	user/grind.asm	/^     e24:	4501                	li	a0,0$/;"	l
e24	user/sh.asm	/^     e24:	00000073          	ecall$/;"	l
e24	user/symlinktest.asm	/^ e24:	6398                	ld	a4,0(a5)$/;"	l
e24	user/usertests.asm	/^     e24:	842080e7          	jalr	-1982(ra) # 5662 <unlink>$/;"	l
e26	user/grind.asm	/^     e26:	a019                	j	e2c <memcmp+0x30>$/;"	l
e26	user/symlinktest.asm	/^ e26:	e118                	sd	a4,0(a0)$/;"	l
e28	user/grind.asm	/^     e28:	40e7853b          	subw	a0,a5,a4$/;"	l
e28	user/sh.asm	/^     e28:	8082                	ret$/;"	l
e28	user/symlinktest.asm	/^ e28:	bff1                	j	e04 <malloc+0x86>$/;"	l
e28	user/usertests.asm	/^     e28:	00005597          	auipc	a1,0x5$/;"	l
e2a	user/sh.asm	/^     e2a:	48d1                	li	a7,20$/;"	l
e2a	user/symlinktest.asm	/^ e2a:	01652423          	sw	s6,8(a0)$/;"	l
e2c	user/grind.asm	/^     e2c:	6422                	ld	s0,8(sp)$/;"	l
e2c	user/sh.asm	/^     e2c:	00000073          	ecall$/;"	l
e2c	user/usertests.asm	/^     e2c:	5f058593          	addi	a1,a1,1520 # 6418 <malloc+0x9c8>$/;"	l
e2e	user/grind.asm	/^     e2e:	0141                	addi	sp,sp,16$/;"	l
e2e	user/symlinktest.asm	/^ e2e:	0541                	addi	a0,a0,16$/;"	l
e30	user/grind.asm	/^     e30:	8082                	ret$/;"	l
e30	user/sh.asm	/^     e30:	8082                	ret$/;"	l
e30	user/symlinktest.asm	/^ e30:	00000097          	auipc	ra,0x0$/;"	l
e30	user/usertests.asm	/^     e30:	00005517          	auipc	a0,0x5$/;"	l
e32	user/grind.asm	/^     e32:	4501                	li	a0,0$/;"	l
e32	user/sh.asm	/^     e32:	48a5                	li	a7,9$/;"	l
e34	user/grind.asm	/^     e34:	bfe5                	j	e2c <memcmp+0x30>$/;"	l
e34	user/sh.asm	/^     e34:	00000073          	ecall$/;"	l
e34	user/symlinktest.asm	/^ e34:	ec6080e7          	jalr	-314(ra) # cf6 <free>$/;"	l
e34	user/usertests.asm	/^     e34:	5f050513          	addi	a0,a0,1520 # 6420 <malloc+0x9d0>$/;"	l
e36	user/grind.asm	/^     e36:	1141                	addi	sp,sp,-16$/;"	l
e38	user/grind.asm	/^     e38:	e406                	sd	ra,8(sp)$/;"	l
e38	user/sh.asm	/^     e38:	8082                	ret$/;"	l
e38	user/symlinktest.asm	/^ e38:	00093503          	ld	a0,0(s2)$/;"	l
e38	user/usertests.asm	/^     e38:	00005097          	auipc	ra,0x5$/;"	l
e3a	user/grind.asm	/^     e3a:	e022                	sd	s0,0(sp)$/;"	l
e3a	user/sh.asm	/^     e3a:	48a9                	li	a7,10$/;"	l
e3c	user/grind.asm	/^     e3c:	0800                	addi	s0,sp,16$/;"	l
e3c	user/sh.asm	/^     e3c:	00000073          	ecall$/;"	l
e3c	user/symlinktest.asm	/^ e3c:	d971                	beqz	a0,e10 <malloc+0x92>$/;"	l
e3c	user/usertests.asm	/^     e3c:	83a080e7          	jalr	-1990(ra) # 5672 <link>$/;"	l
e3e	user/grind.asm	/^     e3e:	00000097          	auipc	ra,0x0$/;"	l
e3e	user/symlinktest.asm	/^ e3e:	611c                	ld	a5,0(a0)$/;"	l
e4	user/echo.asm	/^  e4:	0785                	addi	a5,a5,1$/;"	l
e4	user/grep.asm	/^  e4:	00f70e63          	beq	a4,a5,100 <match+0x34>$/;"	l
e4	user/kill.asm	/^  e4:	00a60733          	add	a4,a2,a0$/;"	l
e4	user/ln.asm	/^  e4:	00b78023          	sb	a1,0(a5)$/;"	l
e4	user/mkdir.asm	/^  e4:	8082                	ret$/;"	l
e4	user/rm.asm	/^  e4:	8082                	ret$/;"	l
e4	user/symlinktest.asm	/^  e4:	00001517          	auipc	a0,0x1$/;"	l
e4	user/usertests.asm	/^      e4:	85a6                	mv	a1,s1$/;"	l
e4	user/wc.asm	/^  e4:	00001517          	auipc	a0,0x1$/;"	l
e4	user/zombie.asm	/^  e4:	ec86                	sd	ra,88(sp)$/;"	l
e40	user/sh.asm	/^     e40:	8082                	ret$/;"	l
e40	user/symlinktest.asm	/^ e40:	4798                	lw	a4,8(a5)$/;"	l
e40	user/usertests.asm	/^     e40:	0e055863          	bgez	a0,f30 <linktest+0x214>$/;"	l
e42	user/grind.asm	/^     e42:	f66080e7          	jalr	-154(ra) # da4 <memmove>$/;"	l
e42	user/sh.asm	/^     e42:	48ad                	li	a7,11$/;"	l
e42	user/symlinktest.asm	/^ e42:	fa9776e3          	bgeu	a4,s1,dee <malloc+0x70>$/;"	l
e44	user/sh.asm	/^     e44:	00000073          	ecall$/;"	l
e44	user/usertests.asm	/^     e44:	00005597          	auipc	a1,0x5$/;"	l
e46	user/grind.asm	/^     e46:	60a2                	ld	ra,8(sp)$/;"	l
e46	user/symlinktest.asm	/^ e46:	00093703          	ld	a4,0(s2)$/;"	l
e48	user/grind.asm	/^     e48:	6402                	ld	s0,0(sp)$/;"	l
e48	user/sh.asm	/^     e48:	8082                	ret$/;"	l
e48	user/usertests.asm	/^     e48:	5d458593          	addi	a1,a1,1492 # 6418 <malloc+0x9c8>$/;"	l
e4a	user/grind.asm	/^     e4a:	0141                	addi	sp,sp,16$/;"	l
e4a	user/sh.asm	/^     e4a:	48b1                	li	a7,12$/;"	l
e4a	user/symlinktest.asm	/^ e4a:	853e                	mv	a0,a5$/;"	l
e4c	user/grind.asm	/^     e4c:	8082                	ret$/;"	l
e4c	user/sh.asm	/^     e4c:	00000073          	ecall$/;"	l
e4c	user/symlinktest.asm	/^ e4c:	fef719e3          	bne	a4,a5,e3e <malloc+0xc0>$/;"	l
e4c	user/usertests.asm	/^     e4c:	00005517          	auipc	a0,0x5$/;"	l
e4e	user/grind.asm	/^     e4e:	4885                	li	a7,1$/;"	l
e50	user/grind.asm	/^     e50:	00000073          	ecall$/;"	l
e50	user/sh.asm	/^     e50:	8082                	ret$/;"	l
e50	user/symlinktest.asm	/^ e50:	8552                	mv	a0,s4$/;"	l
e50	user/usertests.asm	/^     e50:	6dc50513          	addi	a0,a0,1756 # 6528 <malloc+0xad8>$/;"	l
e52	user/sh.asm	/^     e52:	48b5                	li	a7,13$/;"	l
e52	user/symlinktest.asm	/^ e52:	00000097          	auipc	ra,0x0$/;"	l
e54	user/grind.asm	/^     e54:	8082                	ret$/;"	l
e54	user/sh.asm	/^     e54:	00000073          	ecall$/;"	l
e54	user/usertests.asm	/^     e54:	00005097          	auipc	ra,0x5$/;"	l
e56	user/grind.asm	/^     e56:	4889                	li	a7,2$/;"	l
e56	user/symlinktest.asm	/^ e56:	b76080e7          	jalr	-1162(ra) # 9c8 <sbrk>$/;"	l
e58	user/grind.asm	/^     e58:	00000073          	ecall$/;"	l
e58	user/sh.asm	/^     e58:	8082                	ret$/;"	l
e58	user/usertests.asm	/^     e58:	81e080e7          	jalr	-2018(ra) # 5672 <link>$/;"	l
e5a	user/sh.asm	/^     e5a:	48b9                	li	a7,14$/;"	l
e5a	user/symlinktest.asm	/^ e5a:	fd5518e3          	bne	a0,s5,e2a <malloc+0xac>$/;"	l
e5c	user/grind.asm	/^     e5c:	8082                	ret$/;"	l
e5c	user/sh.asm	/^     e5c:	00000073          	ecall$/;"	l
e5c	user/usertests.asm	/^     e5c:	0e055863          	bgez	a0,f4c <linktest+0x230>$/;"	l
e5e	user/grind.asm	/^     e5e:	488d                	li	a7,3$/;"	l
e5e	user/symlinktest.asm	/^ e5e:	4501                	li	a0,0$/;"	l
e6	user/bigfile.asm	/^  e6:	356080e7          	jalr	854(ra) # 438 <open>$/;"	l
e6	user/cat.asm	/^  e6:	2aa080e7          	jalr	682(ra) # 38c <exit>$/;"	l
e6	user/echo.asm	/^  e6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
e6	user/forktest.asm	/^  e6:	2aa080e7          	jalr	682(ra) # 38c <exit>$/;"	l
e6	user/grind.asm	/^      e6:	00001997          	auipc	s3,0x1$/;"	l
e6	user/init.asm	/^  e6:	00000097          	auipc	ra,0x0$/;"	l
e6	user/ls.asm	/^  e6:	84aa                	mv	s1,a0$/;"	l
e6	user/mkdir.asm	/^  e6:	4501                	li	a0,0$/;"	l
e6	user/rm.asm	/^  e6:	4501                	li	a0,0$/;"	l
e6	user/sh.asm	/^      e6:	00000097          	auipc	ra,0x0$/;"	l
e6	user/stressfs.asm	/^  e6:	2b0080e7          	jalr	688(ra) # 392 <read>$/;"	l
e6	user/usertests.asm	/^      e6:	00006517          	auipc	a0,0x6$/;"	l
e6	user/zombie.asm	/^  e6:	e8a2                	sd	s0,80(sp)$/;"	l
e60	user/grind.asm	/^     e60:	00000073          	ecall$/;"	l
e60	user/sh.asm	/^     e60:	8082                	ret$/;"	l
e60	user/symlinktest.asm	/^ e60:	bf45                	j	e10 <malloc+0x92>$/;"	l
e60	user/usertests.asm	/^     e60:	60e2                	ld	ra,24(sp)$/;"	l
e62	user/sh.asm	/^     e62:	48dd                	li	a7,23$/;"	l
e62	user/usertests.asm	/^     e62:	6442                	ld	s0,16(sp)$/;"	l
e64	user/grind.asm	/^     e64:	8082                	ret$/;"	l
e64	user/sh.asm	/^     e64:	00000073          	ecall$/;"	l
e64	user/usertests.asm	/^     e64:	64a2                	ld	s1,8(sp)$/;"	l
e66	user/grind.asm	/^     e66:	4891                	li	a7,4$/;"	l
e66	user/usertests.asm	/^     e66:	6902                	ld	s2,0(sp)$/;"	l
e68	user/grind.asm	/^     e68:	00000073          	ecall$/;"	l
e68	user/sh.asm	/^     e68:	8082                	ret$/;"	l
e68	user/usertests.asm	/^     e68:	6105                	addi	sp,sp,32$/;"	l
e6a	user/sh.asm	/^     e6a:	1101                	addi	sp,sp,-32$/;"	l
e6a	user/usertests.asm	/^     e6a:	8082                	ret$/;"	l
e6c	user/grind.asm	/^     e6c:	8082                	ret$/;"	l
e6c	user/sh.asm	/^     e6c:	ec06                	sd	ra,24(sp)$/;"	l
e6c	user/usertests.asm	/^     e6c:	85ca                	mv	a1,s2$/;"	l
e6e	user/grind.asm	/^     e6e:	4895                	li	a7,5$/;"	l
e6e	user/sh.asm	/^     e6e:	e822                	sd	s0,16(sp)$/;"	l
e6e	user/usertests.asm	/^     e6e:	00005517          	auipc	a0,0x5$/;"	l
e70	user/grind.asm	/^     e70:	00000073          	ecall$/;"	l
e70	user/sh.asm	/^     e70:	1000                	addi	s0,sp,32$/;"	l
e72	user/sh.asm	/^     e72:	feb407a3          	sb	a1,-17(s0)$/;"	l
e72	user/usertests.asm	/^     e72:	5ba50513          	addi	a0,a0,1466 # 6428 <malloc+0x9d8>$/;"	l
e74	user/grind.asm	/^     e74:	8082                	ret$/;"	l
e76	user/grind.asm	/^     e76:	48c1                	li	a7,16$/;"	l
e76	user/sh.asm	/^     e76:	4605                	li	a2,1$/;"	l
e76	user/usertests.asm	/^     e76:	00005097          	auipc	ra,0x5$/;"	l
e78	user/grind.asm	/^     e78:	00000073          	ecall$/;"	l
e78	user/sh.asm	/^     e78:	fef40593          	addi	a1,s0,-17$/;"	l
e7a	user/usertests.asm	/^     e7a:	b1c080e7          	jalr	-1252(ra) # 5992 <printf>$/;"	l
e7c	user/grind.asm	/^     e7c:	8082                	ret$/;"	l
e7c	user/sh.asm	/^     e7c:	00000097          	auipc	ra,0x0$/;"	l
e7e	user/grind.asm	/^     e7e:	48d5                	li	a7,21$/;"	l
e7e	user/usertests.asm	/^     e7e:	4505                	li	a0,1$/;"	l
e8	user/grep.asm	/^  e8:	85a6                	mv	a1,s1$/;"	l
e8	user/kill.asm	/^  e8:	00b78023          	sb	a1,0(a5)$/;"	l
e8	user/ln.asm	/^  e8:	0785                	addi	a5,a5,1$/;"	l
e8	user/ls.asm	/^  e8:	d9840593          	addi	a1,s0,-616$/;"	l
e8	user/mkdir.asm	/^  e8:	bfe5                	j	e0 <strlen+0x20>$/;"	l
e8	user/rm.asm	/^  e8:	bfe5                	j	e0 <strlen+0x20>$/;"	l
e8	user/symlinktest.asm	/^  e8:	e1450513          	addi	a0,a0,-492 # ef8 <malloc+0x17a>$/;"	l
e8	user/wc.asm	/^  e8:	84c50513          	addi	a0,a0,-1972 # 930 <malloc+0xee>$/;"	l
e8	user/zombie.asm	/^  e8:	e4a6                	sd	s1,72(sp)$/;"	l
e80	user/grind.asm	/^     e80:	00000073          	ecall$/;"	l
e80	user/sh.asm	/^     e80:	f66080e7          	jalr	-154(ra) # de2 <write>$/;"	l
e80	user/usertests.asm	/^     e80:	00004097          	auipc	ra,0x4$/;"	l
e84	user/grind.asm	/^     e84:	8082                	ret$/;"	l
e84	user/sh.asm	/^     e84:	60e2                	ld	ra,24(sp)$/;"	l
e84	user/usertests.asm	/^     e84:	792080e7          	jalr	1938(ra) # 5612 <exit>$/;"	l
e86	user/grind.asm	/^     e86:	4899                	li	a7,6$/;"	l
e86	user/sh.asm	/^     e86:	6442                	ld	s0,16(sp)$/;"	l
e88	user/grind.asm	/^     e88:	00000073          	ecall$/;"	l
e88	user/sh.asm	/^     e88:	6105                	addi	sp,sp,32$/;"	l
e88	user/usertests.asm	/^     e88:	85ca                	mv	a1,s2$/;"	l
e8a	user/sh.asm	/^     e8a:	8082                	ret$/;"	l
e8a	user/usertests.asm	/^     e8a:	00005517          	auipc	a0,0x5$/;"	l
e8c	user/grind.asm	/^     e8c:	8082                	ret$/;"	l
e8c	user/sh.asm	/^     e8c:	7139                	addi	sp,sp,-64$/;"	l
e8e	user/grind.asm	/^     e8e:	489d                	li	a7,7$/;"	l
e8e	user/sh.asm	/^     e8e:	fc06                	sd	ra,56(sp)$/;"	l
e8e	user/usertests.asm	/^     e8e:	5b650513          	addi	a0,a0,1462 # 6440 <malloc+0x9f0>$/;"	l
e90	user/grind.asm	/^     e90:	00000073          	ecall$/;"	l
e90	user/sh.asm	/^     e90:	f822                	sd	s0,48(sp)$/;"	l
e92	user/sh.asm	/^     e92:	f426                	sd	s1,40(sp)$/;"	l
e92	user/usertests.asm	/^     e92:	00005097          	auipc	ra,0x5$/;"	l
e94	user/grind.asm	/^     e94:	8082                	ret$/;"	l
e94	user/sh.asm	/^     e94:	f04a                	sd	s2,32(sp)$/;"	l
e96	user/grind.asm	/^     e96:	48bd                	li	a7,15$/;"	l
e96	user/sh.asm	/^     e96:	ec4e                	sd	s3,24(sp)$/;"	l
e96	user/usertests.asm	/^     e96:	b00080e7          	jalr	-1280(ra) # 5992 <printf>$/;"	l
e98	user/grind.asm	/^     e98:	00000073          	ecall$/;"	l
e98	user/sh.asm	/^     e98:	0080                	addi	s0,sp,64$/;"	l
e9a	user/sh.asm	/^     e9a:	84aa                	mv	s1,a0$/;"	l
e9a	user/usertests.asm	/^     e9a:	4505                	li	a0,1$/;"	l
e9c	user/grind.asm	/^     e9c:	8082                	ret$/;"	l
e9c	user/sh.asm	/^     e9c:	c299                	beqz	a3,ea2 <printint+0x16>$/;"	l
e9c	user/usertests.asm	/^     e9c:	00004097          	auipc	ra,0x4$/;"	l
e9e	user/grind.asm	/^     e9e:	48c5                	li	a7,17$/;"	l
e9e	user/sh.asm	/^     e9e:	0805c863          	bltz	a1,f2e <printint+0xa2>$/;"	l
ea	user/bigfile.asm	/^  ea:	892a                	mv	s2,a0$/;"	l
ea	user/cat.asm	/^  ea:	4501                	li	a0,0$/;"	l
ea	user/echo.asm	/^  ea:	fb7d                	bnez	a4,e0 <strlen+0x14>$/;"	l
ea	user/forktest.asm	/^  ea:	00000517          	auipc	a0,0x0$/;"	l
ea	user/grep.asm	/^  ea:	854a                	mv	a0,s2$/;"	l
ea	user/grind.asm	/^      ea:	2ca98993          	addi	s3,s3,714 # 13b0 <malloc+0x11c>$/;"	l
ea	user/init.asm	/^  ea:	600080e7          	jalr	1536(ra) # 6e6 <printf>$/;"	l
ea	user/ln.asm	/^  ea:	fee79de3          	bne	a5,a4,e4 <memset+0x12>$/;"	l
ea	user/mkdir.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	user/rm.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	user/sh.asm	/^      ea:	f6e080e7          	jalr	-146(ra) # 54 <panic>$/;"	l
ea	user/stressfs.asm	/^  ea:	34fd                	addiw	s1,s1,-1$/;"	l
ea	user/usertests.asm	/^      ea:	db250513          	addi	a0,a0,-590 # 5e98 <malloc+0x448>$/;"	l
ea	user/zombie.asm	/^  ea:	e0ca                	sd	s2,64(sp)$/;"	l
ea0	user/grind.asm	/^     ea0:	00000073          	ecall$/;"	l
ea0	user/usertests.asm	/^     ea0:	776080e7          	jalr	1910(ra) # 5612 <exit>$/;"	l
ea2	user/sh.asm	/^     ea2:	2581                	sext.w	a1,a1$/;"	l
ea4	user/grind.asm	/^     ea4:	8082                	ret$/;"	l
ea4	user/sh.asm	/^     ea4:	4881                	li	a7,0$/;"	l
ea4	user/usertests.asm	/^     ea4:	85ca                	mv	a1,s2$/;"	l
ea6	user/grind.asm	/^     ea6:	48c9                	li	a7,18$/;"	l
ea6	user/sh.asm	/^     ea6:	fc040693          	addi	a3,s0,-64$/;"	l
ea6	user/usertests.asm	/^     ea6:	00005517          	auipc	a0,0x5$/;"	l
ea8	user/grind.asm	/^     ea8:	00000073          	ecall$/;"	l
eaa	user/sh.asm	/^     eaa:	4701                	li	a4,0$/;"	l
eaa	user/usertests.asm	/^     eaa:	5b250513          	addi	a0,a0,1458 # 6458 <malloc+0xa08>$/;"	l
eac	user/grind.asm	/^     eac:	8082                	ret$/;"	l
eac	user/sh.asm	/^     eac:	2601                	sext.w	a2,a2$/;"	l
eae	user/grind.asm	/^     eae:	48a1                	li	a7,8$/;"	l
eae	user/sh.asm	/^     eae:	00000517          	auipc	a0,0x0$/;"	l
eae	user/usertests.asm	/^     eae:	00005097          	auipc	ra,0x5$/;"	l
eargv	user/sh.c	/^  char *eargv[MAXARGS];$/;"	m	struct:execcmd	typeref:typename:char * []	file:
eb0	user/grind.asm	/^     eb0:	00000073          	ecall$/;"	l
eb2	user/sh.asm	/^     eb2:	58250513          	addi	a0,a0,1410 # 1430 <digits>$/;"	l
eb2	user/usertests.asm	/^     eb2:	ae4080e7          	jalr	-1308(ra) # 5992 <printf>$/;"	l
eb4	user/grind.asm	/^     eb4:	8082                	ret$/;"	l
eb6	user/grind.asm	/^     eb6:	48cd                	li	a7,19$/;"	l
eb6	user/sh.asm	/^     eb6:	883a                	mv	a6,a4$/;"	l
eb6	user/usertests.asm	/^     eb6:	4505                	li	a0,1$/;"	l
eb8	user/grind.asm	/^     eb8:	00000073          	ecall$/;"	l
eb8	user/sh.asm	/^     eb8:	2705                	addiw	a4,a4,1$/;"	l
eb8	user/usertests.asm	/^     eb8:	00004097          	auipc	ra,0x4$/;"	l
eba	user/sh.asm	/^     eba:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
ebc	user/grind.asm	/^     ebc:	8082                	ret$/;"	l
ebc	user/usertests.asm	/^     ebc:	75a080e7          	jalr	1882(ra) # 5612 <exit>$/;"	l
ebe	user/grind.asm	/^     ebe:	48d1                	li	a7,20$/;"	l
ebe	user/sh.asm	/^     ebe:	1782                	slli	a5,a5,0x20$/;"	l
ec	user/bigfile.asm	/^  ec:	4481                	li	s1,0$/;"	l
ec	user/cat.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	user/echo.asm	/^  ec:	6422                	ld	s0,8(sp)$/;"	l
ec	user/grep.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	user/kill.asm	/^  ec:	0785                	addi	a5,a5,1$/;"	l
ec	user/ls.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	user/mkdir.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	user/rm.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	user/stressfs.asm	/^  ec:	f4f5                	bnez	s1,d8 <main+0xd8>$/;"	l
ec	user/symlinktest.asm	/^  ec:	00001097          	auipc	ra,0x1$/;"	l
ec	user/wc.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	user/zombie.asm	/^  ec:	fc4e                	sd	s3,56(sp)$/;"	l
ec0	user/grind.asm	/^     ec0:	00000073          	ecall$/;"	l
ec0	user/sh.asm	/^     ec0:	9381                	srli	a5,a5,0x20$/;"	l
ec0	user/usertests.asm	/^     ec0:	85ca                	mv	a1,s2$/;"	l
ec2	user/sh.asm	/^     ec2:	97aa                	add	a5,a5,a0$/;"	l
ec2	user/usertests.asm	/^     ec2:	00005517          	auipc	a0,0x5$/;"	l
ec4	user/grind.asm	/^     ec4:	8082                	ret$/;"	l
ec4	user/sh.asm	/^     ec4:	0007c783          	lbu	a5,0(a5)$/;"	l
ec6	user/grind.asm	/^     ec6:	48a5                	li	a7,9$/;"	l
ec6	user/usertests.asm	/^     ec6:	5b650513          	addi	a0,a0,1462 # 6478 <malloc+0xa28>$/;"	l
ec8	user/grind.asm	/^     ec8:	00000073          	ecall$/;"	l
ec8	user/sh.asm	/^     ec8:	00f68023          	sb	a5,0(a3)$/;"	l
eca	user/usertests.asm	/^     eca:	00005097          	auipc	ra,0x5$/;"	l
ecc	user/grind.asm	/^     ecc:	8082                	ret$/;"	l
ecc	user/sh.asm	/^     ecc:	0005879b          	sext.w	a5,a1$/;"	l
ece	user/grind.asm	/^     ece:	48a9                	li	a7,10$/;"	l
ece	user/usertests.asm	/^     ece:	ac8080e7          	jalr	-1336(ra) # 5992 <printf>$/;"	l
ecmd	user/sh.asm	/^    ecmd = (struct execcmd*)cmd;$/;"	d
ed0	user/grind.asm	/^     ed0:	00000073          	ecall$/;"	l
ed0	user/sh.asm	/^     ed0:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
ed2	user/usertests.asm	/^     ed2:	4505                	li	a0,1$/;"	l
ed4	user/grind.asm	/^     ed4:	8082                	ret$/;"	l
ed4	user/sh.asm	/^     ed4:	0685                	addi	a3,a3,1$/;"	l
ed4	user/usertests.asm	/^     ed4:	00004097          	auipc	ra,0x4$/;"	l
ed6	user/grind.asm	/^     ed6:	48ad                	li	a7,11$/;"	l
ed6	user/sh.asm	/^     ed6:	fec7f0e3          	bgeu	a5,a2,eb6 <printint+0x2a>$/;"	l
ed8	user/grind.asm	/^     ed8:	00000073          	ecall$/;"	l
ed8	user/usertests.asm	/^     ed8:	73e080e7          	jalr	1854(ra) # 5612 <exit>$/;"	l
eda	user/sh.asm	/^     eda:	00088b63          	beqz	a7,ef0 <printint+0x64>$/;"	l
edc	user/grind.asm	/^     edc:	8082                	ret$/;"	l
edc	user/usertests.asm	/^     edc:	85ca                	mv	a1,s2$/;"	l
ede	user/grind.asm	/^     ede:	48b1                	li	a7,12$/;"	l
ede	user/sh.asm	/^     ede:	fd040793          	addi	a5,s0,-48$/;"	l
ede	user/usertests.asm	/^     ede:	00005517          	auipc	a0,0x5$/;"	l
ee	user/bigfile.asm	/^  ee:	04054563          	bltz	a0,138 <main+0x138>$/;"	l
ee	user/echo.asm	/^  ee:	0141                	addi	sp,sp,16$/;"	l
ee	user/forktest.asm	/^  ee:	39650513          	addi	a0,a0,918 # 480 <symlink+0x54>$/;"	l
ee	user/grind.asm	/^      ee:	c489                	beqz	s1,f8 <go+0x80>$/;"	l
ee	user/init.asm	/^  ee:	4505                	li	a0,1$/;"	l
ee	user/kill.asm	/^  ee:	fee79de3          	bne	a5,a4,e8 <memset+0x12>$/;"	l
ee	user/ln.asm	/^  ee:	6422                	ld	s0,8(sp)$/;"	l
ee	user/mkdir.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	user/rm.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	user/sh.asm	/^      ee:	6508                	ld	a0,8(a0)$/;"	l
ee	user/stressfs.asm	/^  ee:	854a                	mv	a0,s2$/;"	l
ee	user/usertests.asm	/^      ee:	00006097          	auipc	ra,0x6$/;"	l
ee	user/zombie.asm	/^  ee:	f852                	sd	s4,48(sp)$/;"	l
ee0	user/grind.asm	/^     ee0:	00000073          	ecall$/;"	l
ee2	user/sh.asm	/^     ee2:	973e                	add	a4,a4,a5$/;"	l
ee2	user/usertests.asm	/^     ee2:	5ca50513          	addi	a0,a0,1482 # 64a8 <malloc+0xa58>$/;"	l
ee4	user/grind.asm	/^     ee4:	8082                	ret$/;"	l
ee4	user/sh.asm	/^     ee4:	02d00793          	li	a5,45$/;"	l
ee6	user/grind.asm	/^     ee6:	48b5                	li	a7,13$/;"	l
ee6	user/usertests.asm	/^     ee6:	00005097          	auipc	ra,0x5$/;"	l
ee8	user/grind.asm	/^     ee8:	00000073          	ecall$/;"	l
ee8	user/sh.asm	/^     ee8:	fef70823          	sb	a5,-16(a4)$/;"	l
eea	user/usertests.asm	/^     eea:	aac080e7          	jalr	-1364(ra) # 5992 <printf>$/;"	l
eec	user/grind.asm	/^     eec:	8082                	ret$/;"	l
eec	user/sh.asm	/^     eec:	0028071b          	addiw	a4,a6,2$/;"	l
eee	user/grind.asm	/^     eee:	48b9                	li	a7,14$/;"	l
eee	user/usertests.asm	/^     eee:	4505                	li	a0,1$/;"	l
ef0	user/grind.asm	/^     ef0:	00000073          	ecall$/;"	l
ef0	user/sh.asm	/^     ef0:	02e05863          	blez	a4,f20 <printint+0x94>$/;"	l
ef0	user/usertests.asm	/^     ef0:	00004097          	auipc	ra,0x4$/;"	l
ef4	user/grind.asm	/^     ef4:	8082                	ret$/;"	l
ef4	user/sh.asm	/^     ef4:	fc040793          	addi	a5,s0,-64$/;"	l
ef4	user/usertests.asm	/^     ef4:	722080e7          	jalr	1826(ra) # 5612 <exit>$/;"	l
ef6	user/grind.asm	/^     ef6:	48dd                	li	a7,23$/;"	l
ef8	user/grind.asm	/^     ef8:	00000073          	ecall$/;"	l
ef8	user/sh.asm	/^     ef8:	00e78933          	add	s2,a5,a4$/;"	l
ef8	user/usertests.asm	/^     ef8:	85ca                	mv	a1,s2$/;"	l
efa	user/usertests.asm	/^     efa:	00005517          	auipc	a0,0x5$/;"	l
efc	user/grind.asm	/^     efc:	8082                	ret$/;"	l
efc	user/sh.asm	/^     efc:	fff78993          	addi	s3,a5,-1$/;"	l
efe	user/grind.asm	/^     efe:	1101                	addi	sp,sp,-32$/;"	l
efe	user/usertests.asm	/^     efe:	5c650513          	addi	a0,a0,1478 # 64c0 <malloc+0xa70>$/;"	l
efile	user/sh.c	/^  char *efile;$/;"	m	struct:redircmd	typeref:typename:char *	file:
ehsize	kernel/elf.h	/^  ushort ehsize;$/;"	m	struct:elfhdr	typeref:typename:ushort
either_copyin	kernel/proc.c	/^either_copyin(void *dst, int user_src, uint64 src, uint64 len)$/;"	f	typeref:typename:int
either_copyout	kernel/proc.c	/^either_copyout(int user_dst, uint64 dst, void *src, uint64 len)$/;"	f	typeref:typename:int
elf	kernel/elf.h	/^  uchar elf[12];$/;"	m	struct:elfhdr	typeref:typename:uchar[12]
elfhdr	kernel/elf.h	/^struct elfhdr {$/;"	s
empty	kernel/kernel.asm	/^  empty = 0;$/;"	d
end	kernel/kernel.ld	/^  PROVIDE(end = .);$/;"	s	assignment:provide
end_op	kernel/log.c	/^end_op(void)$/;"	f	typeref:typename:void
end_part	gradelib.py	/^def end_part(name):$/;"	f
entry	kernel/elf.h	/^  uint64 entry;$/;"	m	struct:elfhdr	typeref:typename:uint64
entry	user/usys.pl	/^sub entry {$/;"	s
epc	kernel/proc.h	/^  \/*  24 *\/ uint64 epc;           \/\/ saved user program counter$/;"	m	struct:trapframe	typeref:typename:uint64
err	kernel/kernel.asm	/^ err:$/;"	l
es	user/sh.asm	/^  es = s + strlen(s);$/;"	d
etext	kernel/kernel.ld	/^    PROVIDE(etext = .);$/;"	s	section:.text	assignment:provide
exec	kernel/exec.c	/^exec(char *path, char **argv)$/;"	f	typeref:typename:int
exec	user/bigfile.asm	/^exec:$/;"	l
exec	user/cat.asm	/^exec:$/;"	l
exec	user/echo.asm	/^exec:$/;"	l
exec	user/forktest.asm	/^exec:$/;"	l
exec	user/grep.asm	/^exec:$/;"	l
exec	user/grind.asm	/^exec:$/;"	l
exec	user/init.asm	/^exec:$/;"	l
exec	user/kill.asm	/^exec:$/;"	l
exec	user/ln.asm	/^exec:$/;"	l
exec	user/ls.asm	/^exec:$/;"	l
exec	user/mkdir.asm	/^exec:$/;"	l
exec	user/rm.asm	/^exec:$/;"	l
exec	user/sh.asm	/^exec:$/;"	l
exec	user/stressfs.asm	/^exec:$/;"	l
exec	user/symlinktest.asm	/^exec:$/;"	l
exec	user/usertests.asm	/^exec:$/;"	l
exec	user/usys.S	/^exec:$/;"	l
exec	user/wc.asm	/^exec:$/;"	l
exec	user/zombie.asm	/^exec:$/;"	l
execcmd	user/sh.c	/^execcmd(void)$/;"	f	typeref:struct:cmd *
execcmd	user/sh.c	/^struct execcmd {$/;"	s	file:
execout	user/usertests.c	/^execout(char *s)$/;"	f	typeref:typename:void
exectest	user/usertests.c	/^exectest(char *s)$/;"	f	typeref:typename:void
exit	kernel/proc.c	/^exit(int status)$/;"	f	typeref:typename:void
exit	user/bigfile.asm	/^exit:$/;"	l
exit	user/cat.asm	/^exit:$/;"	l
exit	user/echo.asm	/^exit:$/;"	l
exit	user/forktest.asm	/^exit:$/;"	l
exit	user/grep.asm	/^exit:$/;"	l
exit	user/grind.asm	/^exit:$/;"	l
exit	user/init.asm	/^exit:$/;"	l
exit	user/initcode.S	/^exit:$/;"	l
exit	user/initcode.asm	/^exit:$/;"	l
exit	user/kill.asm	/^exit:$/;"	l
exit	user/ln.asm	/^exit:$/;"	l
exit	user/ls.asm	/^exit:$/;"	l
exit	user/mkdir.asm	/^exit:$/;"	l
exit	user/rm.asm	/^exit:$/;"	l
exit	user/sh.asm	/^exit:$/;"	l
exit	user/stressfs.asm	/^exit:$/;"	l
exit	user/symlinktest.asm	/^exit:$/;"	l
exit	user/usertests.asm	/^exit:$/;"	l
exit	user/usys.S	/^exit:$/;"	l
exit	user/wc.asm	/^exit:$/;"	l
exit	user/zombie.asm	/^exit:$/;"	l
exitiputtest	user/usertests.c	/^exitiputtest(char *s)$/;"	f	typeref:typename:void
exitwait	user/usertests.c	/^exitwait(char *s)$/;"	f	typeref:typename:void
extern	kernel/kernel.asm	/^extern int devintr();$/;"	l
f	user/usertests.c	/^    void (*f)(char *);$/;"	m	struct:main::test	typeref:typename:void (*)(char *)	file:
f0	user/cat.asm	/^  f0:	f14080e7          	jalr	-236(ra) # 0 <cat>$/;"	l
f0	user/echo.asm	/^  f0:	8082                	ret$/;"	l
f0	user/grep.asm	/^  f0:	f62080e7          	jalr	-158(ra) # 4e <matchhere>$/;"	l
f0	user/grind.asm	/^      f0:	00001997          	auipc	s3,0x1$/;"	l
f0	user/init.asm	/^  f0:	00000097          	auipc	ra,0x0$/;"	l
f0	user/ln.asm	/^  f0:	0141                	addi	sp,sp,16$/;"	l
f0	user/ls.asm	/^  f0:	4ae080e7          	jalr	1198(ra) # 59a <fstat>$/;"	l
f0	user/mkdir.asm	/^  f0:	ca19                	beqz	a2,106 <memset+0x1c>$/;"	l
f0	user/rm.asm	/^  f0:	ca19                	beqz	a2,106 <memset+0x1c>$/;"	l
f0	user/sh.asm	/^      f0:	c515                	beqz	a0,11c <runcmd+0x74>$/;"	l
f0	user/stressfs.asm	/^  f0:	00000097          	auipc	ra,0x0$/;"	l
f0	user/symlinktest.asm	/^  f0:	8a4080e7          	jalr	-1884(ra) # 990 <unlink>$/;"	l
f0	user/wc.asm	/^  f0:	698080e7          	jalr	1688(ra) # 784 <printf>$/;"	l
f0	user/zombie.asm	/^  f0:	f456                	sd	s5,40(sp)$/;"	l
f00	user/grind.asm	/^     f00:	ec06                	sd	ra,24(sp)$/;"	l
f00	user/sh.asm	/^     f00:	99ba                	add	s3,s3,a4$/;"	l
f02	user/grind.asm	/^     f02:	e822                	sd	s0,16(sp)$/;"	l
f02	user/sh.asm	/^     f02:	377d                	addiw	a4,a4,-1$/;"	l
f02	user/usertests.asm	/^     f02:	00005097          	auipc	ra,0x5$/;"	l
f04	user/grind.asm	/^     f04:	1000                	addi	s0,sp,32$/;"	l
f04	user/sh.asm	/^     f04:	1702                	slli	a4,a4,0x20$/;"	l
f06	user/grind.asm	/^     f06:	feb407a3          	sb	a1,-17(s0)$/;"	l
f06	user/sh.asm	/^     f06:	9301                	srli	a4,a4,0x20$/;"	l
f06	user/usertests.asm	/^     f06:	a90080e7          	jalr	-1392(ra) # 5992 <printf>$/;"	l
f08	user/sh.asm	/^     f08:	40e989b3          	sub	s3,s3,a4$/;"	l
f0a	user/grind.asm	/^     f0a:	4605                	li	a2,1$/;"	l
f0a	user/usertests.asm	/^     f0a:	4505                	li	a0,1$/;"	l
f0c	user/grind.asm	/^     f0c:	fef40593          	addi	a1,s0,-17$/;"	l
f0c	user/sh.asm	/^     f0c:	fff94583          	lbu	a1,-1(s2)$/;"	l
f0c	user/usertests.asm	/^     f0c:	00004097          	auipc	ra,0x4$/;"	l
f10	user/grind.asm	/^     f10:	00000097          	auipc	ra,0x0$/;"	l
f10	user/sh.asm	/^     f10:	8526                	mv	a0,s1$/;"	l
f10	user/usertests.asm	/^     f10:	706080e7          	jalr	1798(ra) # 5612 <exit>$/;"	l
f12	user/sh.asm	/^     f12:	00000097          	auipc	ra,0x0$/;"	l
f14	user/grind.asm	/^     f14:	f66080e7          	jalr	-154(ra) # e76 <write>$/;"	l
f14	user/usertests.asm	/^     f14:	85ca                	mv	a1,s2$/;"	l
f16	user/sh.asm	/^     f16:	f58080e7          	jalr	-168(ra) # e6a <putc>$/;"	l
f16	user/usertests.asm	/^     f16:	00005517          	auipc	a0,0x5$/;"	l
f18	user/grind.asm	/^     f18:	60e2                	ld	ra,24(sp)$/;"	l
f1a	user/grind.asm	/^     f1a:	6442                	ld	s0,16(sp)$/;"	l
f1a	user/sh.asm	/^     f1a:	197d                	addi	s2,s2,-1$/;"	l
f1a	user/usertests.asm	/^     f1a:	5c250513          	addi	a0,a0,1474 # 64d8 <malloc+0xa88>$/;"	l
f1c	user/grind.asm	/^     f1c:	6105                	addi	sp,sp,32$/;"	l
f1c	user/sh.asm	/^     f1c:	ff3918e3          	bne	s2,s3,f0c <printint+0x80>$/;"	l
f1e	user/grind.asm	/^     f1e:	8082                	ret$/;"	l
f1e	user/usertests.asm	/^     f1e:	00005097          	auipc	ra,0x5$/;"	l
f2	user/bigfile.asm	/^  f2:	010009b7          	lui	s3,0x1000$/;"	l
f2	user/echo.asm	/^  f2:	4501                	li	a0,0$/;"	l
f2	user/forktest.asm	/^  f2:	00000097          	auipc	ra,0x0$/;"	l
f2	user/kill.asm	/^  f2:	6422                	ld	s0,8(sp)$/;"	l
f2	user/ln.asm	/^  f2:	8082                	ret$/;"	l
f2	user/mkdir.asm	/^  f2:	87aa                	mv	a5,a0$/;"	l
f2	user/rm.asm	/^  f2:	87aa                	mv	a5,a0$/;"	l
f2	user/sh.asm	/^      f2:	00848593          	addi	a1,s1,8$/;"	l
f2	user/usertests.asm	/^      f2:	8a4080e7          	jalr	-1884(ra) # 5992 <printf>$/;"	l
f2	user/zombie.asm	/^  f2:	f05a                	sd	s6,32(sp)$/;"	l
f20	user/grind.asm	/^     f20:	7139                	addi	sp,sp,-64$/;"	l
f20	user/sh.asm	/^     f20:	70e2                	ld	ra,56(sp)$/;"	l
f22	user/grind.asm	/^     f22:	fc06                	sd	ra,56(sp)$/;"	l
f22	user/sh.asm	/^     f22:	7442                	ld	s0,48(sp)$/;"	l
f22	user/usertests.asm	/^     f22:	a74080e7          	jalr	-1420(ra) # 5992 <printf>$/;"	l
f24	user/grind.asm	/^     f24:	f822                	sd	s0,48(sp)$/;"	l
f24	user/sh.asm	/^     f24:	74a2                	ld	s1,40(sp)$/;"	l
f26	user/grind.asm	/^     f26:	f426                	sd	s1,40(sp)$/;"	l
f26	user/sh.asm	/^     f26:	7902                	ld	s2,32(sp)$/;"	l
f26	user/usertests.asm	/^     f26:	4505                	li	a0,1$/;"	l
f28	user/grind.asm	/^     f28:	f04a                	sd	s2,32(sp)$/;"	l
f28	user/sh.asm	/^     f28:	69e2                	ld	s3,24(sp)$/;"	l
f28	user/usertests.asm	/^     f28:	00004097          	auipc	ra,0x4$/;"	l
f2a	user/grind.asm	/^     f2a:	ec4e                	sd	s3,24(sp)$/;"	l
f2a	user/sh.asm	/^     f2a:	6121                	addi	sp,sp,64$/;"	l
f2c	user/grind.asm	/^     f2c:	0080                	addi	s0,sp,64$/;"	l
f2c	user/sh.asm	/^     f2c:	8082                	ret$/;"	l
f2c	user/usertests.asm	/^     f2c:	6ea080e7          	jalr	1770(ra) # 5612 <exit>$/;"	l
f2e	user/grind.asm	/^     f2e:	84aa                	mv	s1,a0$/;"	l
f2e	user/sh.asm	/^     f2e:	40b005bb          	negw	a1,a1$/;"	l
f30	user/grind.asm	/^     f30:	c299                	beqz	a3,f36 <printint+0x16>$/;"	l
f30	user/usertests.asm	/^     f30:	85ca                	mv	a1,s2$/;"	l
f32	user/grind.asm	/^     f32:	0805c863          	bltz	a1,fc2 <printint+0xa2>$/;"	l
f32	user/sh.asm	/^     f32:	4885                	li	a7,1$/;"	l
f32	user/usertests.asm	/^     f32:	00005517          	auipc	a0,0x5$/;"	l
f34	user/sh.asm	/^     f34:	bf8d                	j	ea6 <printint+0x1a>$/;"	l
f36	user/grind.asm	/^     f36:	2581                	sext.w	a1,a1$/;"	l
f36	user/sh.asm	/^     f36:	7119                	addi	sp,sp,-128$/;"	l
f36	user/usertests.asm	/^     f36:	5ce50513          	addi	a0,a0,1486 # 6500 <malloc+0xab0>$/;"	l
f38	user/grind.asm	/^     f38:	4881                	li	a7,0$/;"	l
f38	user/sh.asm	/^     f38:	fc86                	sd	ra,120(sp)$/;"	l
f3a	user/grind.asm	/^     f3a:	fc040693          	addi	a3,s0,-64$/;"	l
f3a	user/sh.asm	/^     f3a:	f8a2                	sd	s0,112(sp)$/;"	l
f3a	user/usertests.asm	/^     f3a:	00005097          	auipc	ra,0x5$/;"	l
f3c	user/sh.asm	/^     f3c:	f4a6                	sd	s1,104(sp)$/;"	l
f3e	user/grind.asm	/^     f3e:	4701                	li	a4,0$/;"	l
f3e	user/sh.asm	/^     f3e:	f0ca                	sd	s2,96(sp)$/;"	l
f3e	user/usertests.asm	/^     f3e:	a58080e7          	jalr	-1448(ra) # 5992 <printf>$/;"	l
f4	user/cat.asm	/^  f4:	4501                	li	a0,0$/;"	l
f4	user/echo.asm	/^  f4:	bfe5                	j	ec <strlen+0x20>$/;"	l
f4	user/grep.asm	/^  f4:	ed01                	bnez	a0,10c <match+0x40>$/;"	l
f4	user/grind.asm	/^      f4:	2b898993          	addi	s3,s3,696 # 13a8 <malloc+0x114>$/;"	l
f4	user/init.asm	/^  f4:	276080e7          	jalr	630(ra) # 366 <exit>$/;"	l
f4	user/kill.asm	/^  f4:	0141                	addi	sp,sp,16$/;"	l
f4	user/ln.asm	/^  f4:	1141                	addi	sp,sp,-16$/;"	l
f4	user/ls.asm	/^  f4:	08054163          	bltz	a0,176 <ls+0xc2>$/;"	l
f4	user/mkdir.asm	/^  f4:	1602                	slli	a2,a2,0x20$/;"	l
f4	user/rm.asm	/^  f4:	1602                	slli	a2,a2,0x20$/;"	l
f4	user/stressfs.asm	/^  f4:	2b2080e7          	jalr	690(ra) # 3a2 <close>$/;"	l
f4	user/symlinktest.asm	/^  f4:	646367b7          	lui	a5,0x64636$/;"	l
f4	user/wc.asm	/^  f4:	4505                	li	a0,1$/;"	l
f4	user/zombie.asm	/^  f4:	ec5e                	sd	s7,24(sp)$/;"	l
f40	user/grind.asm	/^     f40:	2601                	sext.w	a2,a2$/;"	l
f40	user/sh.asm	/^     f40:	ecce                	sd	s3,88(sp)$/;"	l
f42	user/grind.asm	/^     f42:	00000517          	auipc	a0,0x0$/;"	l
f42	user/sh.asm	/^     f42:	e8d2                	sd	s4,80(sp)$/;"	l
f42	user/usertests.asm	/^     f42:	4505                	li	a0,1$/;"	l
f44	user/sh.asm	/^     f44:	e4d6                	sd	s5,72(sp)$/;"	l
f44	user/usertests.asm	/^     f44:	00004097          	auipc	ra,0x4$/;"	l
f46	user/grind.asm	/^     f46:	71e50513          	addi	a0,a0,1822 # 1660 <digits>$/;"	l
f46	user/sh.asm	/^     f46:	e0da                	sd	s6,64(sp)$/;"	l
f48	user/sh.asm	/^     f48:	fc5e                	sd	s7,56(sp)$/;"	l
f48	user/usertests.asm	/^     f48:	6ce080e7          	jalr	1742(ra) # 5612 <exit>$/;"	l
f4a	user/grind.asm	/^     f4a:	883a                	mv	a6,a4$/;"	l
f4a	user/sh.asm	/^     f4a:	f862                	sd	s8,48(sp)$/;"	l
f4c	user/grind.asm	/^     f4c:	2705                	addiw	a4,a4,1$/;"	l
f4c	user/sh.asm	/^     f4c:	f466                	sd	s9,40(sp)$/;"	l
f4c	user/usertests.asm	/^     f4c:	85ca                	mv	a1,s2$/;"	l
f4e	user/grind.asm	/^     f4e:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
f4e	user/sh.asm	/^     f4e:	f06a                	sd	s10,32(sp)$/;"	l
f4e	user/usertests.asm	/^     f4e:	00005517          	auipc	a0,0x5$/;"	l
f50	user/sh.asm	/^     f50:	ec6e                	sd	s11,24(sp)$/;"	l
f52	user/grind.asm	/^     f52:	1782                	slli	a5,a5,0x20$/;"	l
f52	user/sh.asm	/^     f52:	0100                	addi	s0,sp,128$/;"	l
f52	user/usertests.asm	/^     f52:	5e250513          	addi	a0,a0,1506 # 6530 <malloc+0xae0>$/;"	l
f54	user/grind.asm	/^     f54:	9381                	srli	a5,a5,0x20$/;"	l
f54	user/sh.asm	/^     f54:	0005c903          	lbu	s2,0(a1)$/;"	l
f56	user/grind.asm	/^     f56:	97aa                	add	a5,a5,a0$/;"	l
f56	user/usertests.asm	/^     f56:	00005097          	auipc	ra,0x5$/;"	l
f58	user/grind.asm	/^     f58:	0007c783          	lbu	a5,0(a5)$/;"	l
f58	user/sh.asm	/^     f58:	18090f63          	beqz	s2,10f6 <vprintf+0x1c0>$/;"	l
f5a	user/usertests.asm	/^     f5a:	a3c080e7          	jalr	-1476(ra) # 5992 <printf>$/;"	l
f5c	user/grind.asm	/^     f5c:	00f68023          	sb	a5,0(a3)$/;"	l
f5c	user/sh.asm	/^     f5c:	8aaa                	mv	s5,a0$/;"	l
f5e	user/sh.asm	/^     f5e:	8b32                	mv	s6,a2$/;"	l
f5e	user/usertests.asm	/^     f5e:	4505                	li	a0,1$/;"	l
f6	user/bigfile.asm	/^  f6:	10b98993          	addi	s3,s3,267 # 100010b <__global_pointer$+0xffeeb2>$/;"	l
f6	user/cat.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	user/echo.asm	/^  f6:	1141                	addi	sp,sp,-16$/;"	l
f6	user/forktest.asm	/^  f6:	f0e080e7          	jalr	-242(ra) # 0 <print>$/;"	l
f6	user/grep.asm	/^  f6:	0485                	addi	s1,s1,1$/;"	l
f6	user/kill.asm	/^  f6:	8082                	ret$/;"	l
f6	user/ln.asm	/^  f6:	e422                	sd	s0,8(sp)$/;"	l
f6	user/mkdir.asm	/^  f6:	9201                	srli	a2,a2,0x20$/;"	l
f6	user/rm.asm	/^  f6:	9201                	srli	a2,a2,0x20$/;"	l
f6	user/sh.asm	/^      f6:	00001097          	auipc	ra,0x1$/;"	l
f6	user/usertests.asm	/^      f6:	4505                	li	a0,1$/;"	l
f6	user/wc.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	user/zombie.asm	/^  f6:	1080                	addi	s0,sp,96$/;"	l
f60	user/grind.asm	/^     f60:	0005879b          	sext.w	a5,a1$/;"	l
f60	user/sh.asm	/^     f60:	00158493          	addi	s1,a1,1$/;"	l
f60	user/usertests.asm	/^     f60:	00004097          	auipc	ra,0x4$/;"	l
f64	user/grind.asm	/^     f64:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
f64	user/sh.asm	/^     f64:	4981                	li	s3,0$/;"	l
f64	user/usertests.asm	/^     f64:	6b2080e7          	jalr	1714(ra) # 5612 <exit>$/;"	l
f66	user/sh.asm	/^     f66:	02500a13          	li	s4,37$/;"	l
f68	user/grind.asm	/^     f68:	0685                	addi	a3,a3,1$/;"	l
f68	user/usertests.asm	/^     f68:	715d                	addi	sp,sp,-80$/;"	l
f6a	user/grind.asm	/^     f6a:	fec7f0e3          	bgeu	a5,a2,f4a <printint+0x2a>$/;"	l
f6a	user/sh.asm	/^     f6a:	06400c13          	li	s8,100$/;"	l
f6a	user/usertests.asm	/^     f6a:	e486                	sd	ra,72(sp)$/;"	l
f6c	user/usertests.asm	/^     f6c:	e0a2                	sd	s0,64(sp)$/;"	l
f6e	user/grind.asm	/^     f6e:	00088b63          	beqz	a7,f84 <printint+0x64>$/;"	l
f6e	user/sh.asm	/^     f6e:	06c00c93          	li	s9,108$/;"	l
f6e	user/usertests.asm	/^     f6e:	fc26                	sd	s1,56(sp)$/;"	l
f70	user/usertests.asm	/^     f70:	f84a                	sd	s2,48(sp)$/;"	l
f72	user/grind.asm	/^     f72:	fd040793          	addi	a5,s0,-48$/;"	l
f72	user/sh.asm	/^     f72:	07800d13          	li	s10,120$/;"	l
f72	user/usertests.asm	/^     f72:	f44e                	sd	s3,40(sp)$/;"	l
f74	user/usertests.asm	/^     f74:	f052                	sd	s4,32(sp)$/;"	l
f76	user/grind.asm	/^     f76:	973e                	add	a4,a4,a5$/;"	l
f76	user/sh.asm	/^     f76:	07000d93          	li	s11,112$/;"	l
f76	user/usertests.asm	/^     f76:	ec56                	sd	s5,24(sp)$/;"	l
f78	user/grind.asm	/^     f78:	02d00793          	li	a5,45$/;"	l
f78	user/usertests.asm	/^     f78:	e85a                	sd	s6,16(sp)$/;"	l
f7a	user/sh.asm	/^     f7a:	00000b97          	auipc	s7,0x0$/;"	l
f7a	user/usertests.asm	/^     f7a:	0880                	addi	s0,sp,80$/;"	l
f7c	user/grind.asm	/^     f7c:	fef70823          	sb	a5,-16(a4)$/;"	l
f7c	user/usertests.asm	/^     f7c:	89aa                	mv	s3,a0$/;"	l
f7e	user/sh.asm	/^     f7e:	4b6b8b93          	addi	s7,s7,1206 # 1430 <digits>$/;"	l
f7e	user/usertests.asm	/^     f7e:	00005517          	auipc	a0,0x5$/;"	l
f8	user/echo.asm	/^  f8:	e422                	sd	s0,8(sp)$/;"	l
f8	user/grep.asm	/^  f8:	fff4c783          	lbu	a5,-1(s1)$/;"	l
f8	user/grind.asm	/^      f8:	4485                	li	s1,1$/;"	l
f8	user/init.asm	/^  f8:	1141                	addi	sp,sp,-16$/;"	l
f8	user/kill.asm	/^  f8:	1141                	addi	sp,sp,-16$/;"	l
f8	user/ln.asm	/^  f8:	0800                	addi	s0,sp,16$/;"	l
f8	user/ls.asm	/^  f8:	da041783          	lh	a5,-608(s0)$/;"	l
f8	user/mkdir.asm	/^  f8:	00a60733          	add	a4,a2,a0$/;"	l
f8	user/rm.asm	/^  f8:	00a60733          	add	a4,a2,a0$/;"	l
f8	user/stressfs.asm	/^  f8:	4501                	li	a0,0$/;"	l
f8	user/symlinktest.asm	/^  f8:	26178793          	addi	a5,a5,609 # 64636261 <__global_pointer$+0x64634748>$/;"	l
f8	user/usertests.asm	/^      f8:	00005097          	auipc	ra,0x5$/;"	l
f8	user/zombie.asm	/^  f8:	8baa                	mv	s7,a0$/;"	l
f80	user/grind.asm	/^     f80:	0028071b          	addiw	a4,a6,2$/;"	l
f82	user/sh.asm	/^     f82:	a839                	j	fa0 <vprintf+0x6a>$/;"	l
f82	user/usertests.asm	/^     f82:	5d250513          	addi	a0,a0,1490 # 6550 <malloc+0xb00>$/;"	l
f84	user/grind.asm	/^     f84:	02e05863          	blez	a4,fb4 <printint+0x94>$/;"	l
f84	user/sh.asm	/^     f84:	85ca                	mv	a1,s2$/;"	l
f86	user/sh.asm	/^     f86:	8556                	mv	a0,s5$/;"	l
f86	user/usertests.asm	/^     f86:	00004097          	auipc	ra,0x4$/;"	l
f88	user/grind.asm	/^     f88:	fc040793          	addi	a5,s0,-64$/;"	l
f88	user/sh.asm	/^     f88:	00000097          	auipc	ra,0x0$/;"	l
f8a	user/usertests.asm	/^     f8a:	6dc080e7          	jalr	1756(ra) # 5662 <unlink>$/;"	l
f8c	user/grind.asm	/^     f8c:	00e78933          	add	s2,a5,a4$/;"	l
f8c	user/sh.asm	/^     f8c:	ee2080e7          	jalr	-286(ra) # e6a <putc>$/;"	l
f8e	user/usertests.asm	/^     f8e:	20000593          	li	a1,512$/;"	l
f90	user/grind.asm	/^     f90:	fff78993          	addi	s3,a5,-1$/;"	l
f90	user/sh.asm	/^     f90:	a019                	j	f96 <vprintf+0x60>$/;"	l
f92	user/sh.asm	/^     f92:	01498f63          	beq	s3,s4,fb0 <vprintf+0x7a>$/;"	l
f92	user/usertests.asm	/^     f92:	00005517          	auipc	a0,0x5$/;"	l
f94	user/grind.asm	/^     f94:	99ba                	add	s3,s3,a4$/;"	l
f96	user/grind.asm	/^     f96:	377d                	addiw	a4,a4,-1$/;"	l
f96	user/sh.asm	/^     f96:	0485                	addi	s1,s1,1$/;"	l
f96	user/usertests.asm	/^     f96:	5be50513          	addi	a0,a0,1470 # 6550 <malloc+0xb00>$/;"	l
f98	user/grind.asm	/^     f98:	1702                	slli	a4,a4,0x20$/;"	l
f98	user/sh.asm	/^     f98:	fff4c903          	lbu	s2,-1(s1)$/;"	l
f9a	user/grind.asm	/^     f9a:	9301                	srli	a4,a4,0x20$/;"	l
f9a	user/usertests.asm	/^     f9a:	00004097          	auipc	ra,0x4$/;"	l
f9c	user/grind.asm	/^     f9c:	40e989b3          	sub	s3,s3,a4$/;"	l
f9c	user/sh.asm	/^     f9c:	14090d63          	beqz	s2,10f6 <vprintf+0x1c0>$/;"	l
f9e	user/usertests.asm	/^     f9e:	6b8080e7          	jalr	1720(ra) # 5652 <open>$/;"	l
fa	user/bigfile.asm	/^  fa:	40000613          	li	a2,1024$/;"	l
fa	user/cat.asm	/^  fa:	296080e7          	jalr	662(ra) # 38c <exit>$/;"	l
fa	user/echo.asm	/^  fa:	0800                	addi	s0,sp,16$/;"	l
fa	user/forktest.asm	/^  fa:	4505                	li	a0,1$/;"	l
fa	user/grind.asm	/^      fa:	597d                	li	s2,-1$/;"	l
fa	user/init.asm	/^  fa:	e422                	sd	s0,8(sp)$/;"	l
fa	user/kill.asm	/^  fa:	e422                	sd	s0,8(sp)$/;"	l
fa	user/ln.asm	/^  fa:	00054783          	lbu	a5,0(a0)$/;"	l
fa	user/sh.asm	/^      fa:	d04080e7          	jalr	-764(ra) # dfa <exec>$/;"	l
fa	user/stressfs.asm	/^  fa:	00000097          	auipc	ra,0x0$/;"	l
fa	user/wc.asm	/^  fa:	30e080e7          	jalr	782(ra) # 404 <exit>$/;"	l
fa	user/zombie.asm	/^  fa:	8a2e                	mv	s4,a1$/;"	l
fa0	user/grind.asm	/^     fa0:	fff94583          	lbu	a1,-1(s2)$/;"	l
fa0	user/sh.asm	/^     fa0:	0009079b          	sext.w	a5,s2$/;"	l
fa2	user/usertests.asm	/^     fa2:	0c054963          	bltz	a0,1074 <bigdir+0x10c>$/;"	l
fa4	user/grind.asm	/^     fa4:	8526                	mv	a0,s1$/;"	l
fa4	user/sh.asm	/^     fa4:	fe0997e3          	bnez	s3,f92 <vprintf+0x5c>$/;"	l
fa6	user/grind.asm	/^     fa6:	00000097          	auipc	ra,0x0$/;"	l
fa6	user/usertests.asm	/^     fa6:	00004097          	auipc	ra,0x4$/;"	l
fa8	user/sh.asm	/^     fa8:	fd479ee3          	bne	a5,s4,f84 <vprintf+0x4e>$/;"	l
faa	user/grind.asm	/^     faa:	f58080e7          	jalr	-168(ra) # efe <putc>$/;"	l
faa	user/usertests.asm	/^     faa:	694080e7          	jalr	1684(ra) # 563a <close>$/;"	l
fac	user/sh.asm	/^     fac:	89be                	mv	s3,a5$/;"	l
fae	user/grind.asm	/^     fae:	197d                	addi	s2,s2,-1$/;"	l
fae	user/sh.asm	/^     fae:	b7e5                	j	f96 <vprintf+0x60>$/;"	l
fae	user/usertests.asm	/^     fae:	4901                	li	s2,0$/;"	l
fail	user/symlinktest.c	/^#define fail(/;"	d	file:
fail	user/usertests.asm	/^        fail = 1;$/;"	d
failed	user/symlinktest.c	/^static int failed = 0;$/;"	v	typeref:typename:int	file:
fb0	user/grind.asm	/^     fb0:	ff3918e3          	bne	s2,s3,fa0 <printint+0x80>$/;"	l
fb0	user/sh.asm	/^     fb0:	05878063          	beq	a5,s8,ff0 <vprintf+0xba>$/;"	l
fb0	user/usertests.asm	/^     fb0:	07800a93          	li	s5,120$/;"	l
fb4	user/grind.asm	/^     fb4:	70e2                	ld	ra,56(sp)$/;"	l
fb4	user/sh.asm	/^     fb4:	05978c63          	beq	a5,s9,100c <vprintf+0xd6>$/;"	l
fb4	user/usertests.asm	/^     fb4:	00005a17          	auipc	s4,0x5$/;"	l
fb6	user/grind.asm	/^     fb6:	7442                	ld	s0,48(sp)$/;"	l
fb8	user/grind.asm	/^     fb8:	74a2                	ld	s1,40(sp)$/;"	l
fb8	user/sh.asm	/^     fb8:	07a78863          	beq	a5,s10,1028 <vprintf+0xf2>$/;"	l
fb8	user/usertests.asm	/^     fb8:	59ca0a13          	addi	s4,s4,1436 # 6550 <malloc+0xb00>$/;"	l
fba	user/grind.asm	/^     fba:	7902                	ld	s2,32(sp)$/;"	l
fbc	user/grind.asm	/^     fbc:	69e2                	ld	s3,24(sp)$/;"	l
fbc	user/sh.asm	/^     fbc:	09b78463          	beq	a5,s11,1044 <vprintf+0x10e>$/;"	l
fbc	user/usertests.asm	/^     fbc:	1f400b13          	li	s6,500$/;"	l
fbe	user/grind.asm	/^     fbe:	6121                	addi	sp,sp,64$/;"	l
fc	user/echo.asm	/^  fc:	ca19                	beqz	a2,112 <memset+0x1c>$/;"	l
fc	user/forktest.asm	/^  fc:	00000097          	auipc	ra,0x0$/;"	l
fc	user/grep.asm	/^  fc:	f7f5                	bnez	a5,e8 <match+0x1c>$/;"	l
fc	user/grind.asm	/^      fc:	6a85                	lui	s5,0x1$/;"	l
fc	user/init.asm	/^  fc:	0800                	addi	s0,sp,16$/;"	l
fc	user/kill.asm	/^  fc:	0800                	addi	s0,sp,16$/;"	l
fc	user/ls.asm	/^  fc:	0007869b          	sext.w	a3,a5$/;"	l
fc	user/mkdir.asm	/^  fc:	00b78023          	sb	a1,0(a5)$/;"	l
fc	user/rm.asm	/^  fc:	00b78023          	sb	a1,0(a5)$/;"	l
fc	user/symlinktest.asm	/^  fc:	f8f42823          	sw	a5,-112(s0)$/;"	l
fc	user/usertests.asm	/^      fc:	51a080e7          	jalr	1306(ra) # 5612 <exit>$/;"	l
fc	user/zombie.asm	/^  fc:	892a                	mv	s2,a0$/;"	l
fc0	user/grind.asm	/^     fc0:	8082                	ret$/;"	l
fc0	user/sh.asm	/^     fc0:	07300713          	li	a4,115$/;"	l
fc0	user/usertests.asm	/^     fc0:	fb540823          	sb	s5,-80(s0)$/;"	l
fc2	user/grind.asm	/^     fc2:	40b005bb          	negw	a1,a1$/;"	l
fc4	user/sh.asm	/^     fc4:	0ce78663          	beq	a5,a4,1090 <vprintf+0x15a>$/;"	l
fc4	user/usertests.asm	/^     fc4:	41f9579b          	sraiw	a5,s2,0x1f$/;"	l
fc6	user/grind.asm	/^     fc6:	4885                	li	a7,1$/;"	l
fc8	user/grind.asm	/^     fc8:	bf8d                	j	f3a <printint+0x1a>$/;"	l
fc8	user/sh.asm	/^     fc8:	06300713          	li	a4,99$/;"	l
fc8	user/usertests.asm	/^     fc8:	01a7d71b          	srliw	a4,a5,0x1a$/;"	l
fca	user/grind.asm	/^     fca:	7119                	addi	sp,sp,-128$/;"	l
fcc	user/grind.asm	/^     fcc:	fc86                	sd	ra,120(sp)$/;"	l
fcc	user/sh.asm	/^     fcc:	0ee78e63          	beq	a5,a4,10c8 <vprintf+0x192>$/;"	l
fcc	user/usertests.asm	/^     fcc:	012707bb          	addw	a5,a4,s2$/;"	l
fce	user/grind.asm	/^     fce:	f8a2                	sd	s0,112(sp)$/;"	l
fd	user/bigfile.asm	/^  fd = open("big.file", O_CREATE | O_WRONLY);$/;"	d
fd	user/bigfile.asm	/^  fd = open("big.file", O_RDONLY);$/;"	d
fd	user/bigfile.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/cat.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/echo.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/forktest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/grep.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/grind.asm	/^        fd = open("x", O_CREATE|O_RDWR);$/;"	d
fd	user/grind.asm	/^      fd = open("\/.\/grindir\/.\/..\/b", O_CREATE|O_RDWR);$/;"	d
fd	user/grind.asm	/^      fd = open("\/grindir\/..\/a", O_CREATE|O_RDWR);$/;"	d
fd	user/grind.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/init.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/kill.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/ln.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/ls.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/mkdir.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/rm.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/sh.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/sh.c	/^  int fd;$/;"	m	struct:redircmd	typeref:typename:int	file:
fd	user/stressfs.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/stressfs.asm	/^  fd = open(path, O_CREATE | O_RDWR);$/;"	d
fd	user/stressfs.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	user/symlinktest.asm	/^  fd = open("\/testsymlink\/z", O_CREATE | O_RDWR);$/;"	d
fd	user/symlinktest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/usertests.asm	/^        fd = open(name, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open("truncfile", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^      fd = open(file, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open(fname, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open(name, 0);$/;"	d
fd	user/usertests.asm	/^    fd = open("", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open("bigarg-ok", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open("bigwrite", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^    fd = open("echo-ok", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^    fd = open("xx", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open(fname, 0);$/;"	d
fd	user/usertests.asm	/^    fd = open(name, O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open(".", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open(".", O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("123456789012345\/123456789012345\/123456789012345", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("12345678901234\/12345678901234\/12345678901234", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("README", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("bd", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("big", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("big", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigarg-ok", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigfile.dat", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigfile.dat", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/..\/ff", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/ffff", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile\/xx", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile\/xx", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("doesnotexist", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("echo", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("echo-ok", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("init", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("lf1", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("lf2", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("rwsbrk", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("sbrk", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("sharedfd", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("sharedfd", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("small", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("small", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("unlinkread", O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/wc.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/zombie.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd0	kernel/kernel.asm	/^  fd0 = -1;$/;"	d
fd0	user/grind.asm	/^     fd0:	f4a6                	sd	s1,104(sp)$/;"	l
fd0	user/sh.asm	/^     fd0:	11478863          	beq	a5,s4,10e0 <vprintf+0x1aa>$/;"	l
fd0	user/usertests.asm	/^     fd0:	4067d69b          	sraiw	a3,a5,0x6$/;"	l
fd1	user/symlinktest.asm	/^  fd1 = open("\/testsymlink\/4", O_CREATE | O_RDWR);$/;"	d
fd1	user/symlinktest.asm	/^  fd1 = open("\/testsymlink\/a", O_CREATE | O_RDWR);$/;"	d
fd1	user/usertests.asm	/^  fd1 = open("truncfile", O_WRONLY|O_TRUNC);$/;"	d
fd1	user/usertests.asm	/^  fd1 = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd2	user/grind.asm	/^     fd2:	f0ca                	sd	s2,96(sp)$/;"	l
fd2	user/symlinktest.asm	/^  fd2 = open("\/testsymlink\/1", O_RDWR);$/;"	d
fd2	user/symlinktest.asm	/^  fd2 = open("\/testsymlink\/b", O_RDWR);$/;"	d
fd4	user/grind.asm	/^     fd4:	ecce                	sd	s3,88(sp)$/;"	l
fd4	user/sh.asm	/^     fd4:	85d2                	mv	a1,s4$/;"	l
fd4	user/usertests.asm	/^     fd4:	0306869b          	addiw	a3,a3,48$/;"	l
fd6	user/grind.asm	/^     fd6:	e8d2                	sd	s4,80(sp)$/;"	l
fd6	user/sh.asm	/^     fd6:	8556                	mv	a0,s5$/;"	l
fd8	user/grind.asm	/^     fd8:	e4d6                	sd	s5,72(sp)$/;"	l
fd8	user/sh.asm	/^     fd8:	00000097          	auipc	ra,0x0$/;"	l
fd8	user/usertests.asm	/^     fd8:	fad408a3          	sb	a3,-79(s0)$/;"	l
fda	user/grind.asm	/^     fda:	e0da                	sd	s6,64(sp)$/;"	l
fdalloc	kernel/sysfile.c	/^fdalloc(struct file *f)$/;"	f	typeref:typename:int	file:
fdc	user/grind.asm	/^     fdc:	fc5e                	sd	s7,56(sp)$/;"	l
fdc	user/sh.asm	/^     fdc:	e92080e7          	jalr	-366(ra) # e6a <putc>$/;"	l
fdc	user/usertests.asm	/^     fdc:	03f7f793          	andi	a5,a5,63$/;"	l
fde	user/grind.asm	/^     fde:	f862                	sd	s8,48(sp)$/;"	l
fe	user/bigfile.asm	/^  fe:	bd040593          	addi	a1,s0,-1072$/;"	l
fe	user/cat.asm	/^  fe:	00093603          	ld	a2,0(s2)$/;"	l
fe	user/echo.asm	/^  fe:	87aa                	mv	a5,a0$/;"	l
fe	user/grep.asm	/^  fe:	a801                	j	10e <match+0x42>$/;"	l
fe	user/grind.asm	/^      fe:	77ba8a93          	addi	s5,s5,1915 # 177b <buf.0+0xf3>$/;"	l
fe	user/init.asm	/^  fe:	87aa                	mv	a5,a0$/;"	l
fe	user/kill.asm	/^  fe:	00054783          	lbu	a5,0(a0)$/;"	l
fe	user/ln.asm	/^  fe:	cb99                	beqz	a5,114 <strchr+0x20>$/;"	l
fe	user/sh.asm	/^      fe:	6490                	ld	a2,8(s1)$/;"	l
fe	user/stressfs.asm	/^  fe:	288080e7          	jalr	648(ra) # 382 <wait>$/;"	l
fe	user/wc.asm	/^  fe:	7179                	addi	sp,sp,-48$/;"	l
fe	user/zombie.asm	/^  fe:	4481                	li	s1,0$/;"	l
fe0	user/grind.asm	/^     fe0:	f466                	sd	s9,40(sp)$/;"	l
fe0	user/sh.asm	/^     fe0:	85ca                	mv	a1,s2$/;"	l
fe0	user/usertests.asm	/^     fe0:	9f99                	subw	a5,a5,a4$/;"	l
fe2	user/grind.asm	/^     fe2:	f06a                	sd	s10,32(sp)$/;"	l
fe2	user/sh.asm	/^     fe2:	8556                	mv	a0,s5$/;"	l
fe2	user/usertests.asm	/^     fe2:	0307879b          	addiw	a5,a5,48$/;"	l
fe4	user/grind.asm	/^     fe4:	ec6e                	sd	s11,24(sp)$/;"	l
fe4	user/sh.asm	/^     fe4:	00000097          	auipc	ra,0x0$/;"	l
fe6	user/grind.asm	/^     fe6:	0100                	addi	s0,sp,128$/;"	l
fe6	user/usertests.asm	/^     fe6:	faf40923          	sb	a5,-78(s0)$/;"	l
fe8	user/grind.asm	/^     fe8:	0005c903          	lbu	s2,0(a1)$/;"	l
fe8	user/sh.asm	/^     fe8:	e86080e7          	jalr	-378(ra) # e6a <putc>$/;"	l
fea	user/usertests.asm	/^     fea:	fa0409a3          	sb	zero,-77(s0)$/;"	l
fec	user/grind.asm	/^     fec:	18090f63          	beqz	s2,118a <vprintf+0x1c0>$/;"	l
fec	user/sh.asm	/^     fec:	4981                	li	s3,0$/;"	l
fee	user/sh.asm	/^     fee:	b765                	j	f96 <vprintf+0x60>$/;"	l
fee	user/usertests.asm	/^     fee:	fb040593          	addi	a1,s0,-80$/;"	l
fetchaddr	kernel/syscall.c	/^fetchaddr(uint64 addr, uint64 *ip)$/;"	f	typeref:typename:int
fetchstr	kernel/syscall.c	/^fetchstr(uint64 addr, char *buf, int max)$/;"	f	typeref:typename:int
ff	kernel/kernel.asm	/^  ff = *f;$/;"	d
ff0	user/grind.asm	/^     ff0:	8aaa                	mv	s5,a0$/;"	l
ff0	user/sh.asm	/^     ff0:	008b0913          	addi	s2,s6,8$/;"	l
ff2	user/grind.asm	/^     ff2:	8b32                	mv	s6,a2$/;"	l
ff2	user/usertests.asm	/^     ff2:	8552                	mv	a0,s4$/;"	l
ff4	user/grind.asm	/^     ff4:	00158493          	addi	s1,a1,1$/;"	l
ff4	user/sh.asm	/^     ff4:	4685                	li	a3,1$/;"	l
ff4	user/usertests.asm	/^     ff4:	00004097          	auipc	ra,0x4$/;"	l
ff6	user/sh.asm	/^     ff6:	4629                	li	a2,10$/;"	l
ff8	user/grind.asm	/^     ff8:	4981                	li	s3,0$/;"	l
ff8	user/sh.asm	/^     ff8:	000b2583          	lw	a1,0(s6)$/;"	l
ff8	user/usertests.asm	/^     ff8:	67e080e7          	jalr	1662(ra) # 5672 <link>$/;"	l
ffa	user/grind.asm	/^     ffa:	02500a13          	li	s4,37$/;"	l
ffc	user/sh.asm	/^     ffc:	8556                	mv	a0,s5$/;"	l
ffc	user/usertests.asm	/^     ffc:	84aa                	mv	s1,a0$/;"	l
ffe	user/grind.asm	/^     ffe:	06400c13          	li	s8,100$/;"	l
ffe	user/sh.asm	/^     ffe:	00000097          	auipc	ra,0x0$/;"	l
ffe	user/usertests.asm	/^     ffe:	e949                	bnez	a0,1090 <bigdir+0x128>$/;"	l
file	kernel/file.c	/^  struct file file[NFILE];$/;"	m	struct:__anonc1f1ee260108	typeref:struct:file[]	file:
file	kernel/file.h	/^struct file {$/;"	s
file	user/sh.c	/^  char *file;$/;"	m	struct:redircmd	typeref:typename:char *	file:
filealloc	kernel/file.c	/^filealloc(void)$/;"	f	typeref:struct:file *
fileclose	kernel/file.c	/^fileclose(struct file *f)$/;"	f	typeref:typename:void
filedup	kernel/file.c	/^filedup(struct file *f)$/;"	f	typeref:struct:file *
fileinit	kernel/file.c	/^fileinit(void)$/;"	f	typeref:typename:void
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:QEMU
fileread	kernel/file.c	/^fileread(struct file *f, uint64 addr, int n)$/;"	f	typeref:typename:int
filestat	kernel/file.c	/^filestat(struct file *f, uint64 addr)$/;"	f	typeref:typename:int
filesz	kernel/elf.h	/^  uint64 filesz;$/;"	m	struct:proghdr	typeref:typename:uint64
filewrite	kernel/file.c	/^filewrite(struct file *f, uint64 addr, int n)$/;"	f	typeref:typename:int
first	kernel/kernel.asm	/^    first = 0;$/;"	d
flags	kernel/elf.h	/^  uint flags;$/;"	m	struct:elfhdr	typeref:typename:uint
flags	kernel/elf.h	/^  uint32 flags;$/;"	m	struct:proghdr	typeref:typename:uint32
flags	kernel/kernel.asm	/^    flags = PTE_FLAGS(*pte);$/;"	d
flags	kernel/virtio.h	/^  uint16 flags; \/\/ always zero$/;"	m	struct:virtq_avail	typeref:typename:uint16
flags	kernel/virtio.h	/^  uint16 flags; \/\/ always zero$/;"	m	struct:virtq_used	typeref:typename:uint16
flags	kernel/virtio.h	/^  uint16 flags;$/;"	m	struct:virtq_desc	typeref:typename:uint16
fmtname	user/ls.c	/^fmtname(char *path)$/;"	f	typeref:typename:char *
fname	user/usertests.asm	/^    fname = names[i];$/;"	d
fname	user/usertests.asm	/^    fname = names[pi];$/;"	d
fork	kernel/proc.c	/^fork(void)$/;"	f	typeref:typename:int
fork	user/bigfile.asm	/^fork:$/;"	l
fork	user/cat.asm	/^fork:$/;"	l
fork	user/echo.asm	/^fork:$/;"	l
fork	user/forktest.asm	/^fork:$/;"	l
fork	user/grep.asm	/^fork:$/;"	l
fork	user/grind.asm	/^fork:$/;"	l
fork	user/init.asm	/^fork:$/;"	l
fork	user/kill.asm	/^fork:$/;"	l
fork	user/ln.asm	/^fork:$/;"	l
fork	user/ls.asm	/^fork:$/;"	l
fork	user/mkdir.asm	/^fork:$/;"	l
fork	user/rm.asm	/^fork:$/;"	l
fork	user/sh.asm	/^fork:$/;"	l
fork	user/stressfs.asm	/^fork:$/;"	l
fork	user/symlinktest.asm	/^fork:$/;"	l
fork	user/usertests.asm	/^fork:$/;"	l
fork	user/usys.S	/^fork:$/;"	l
fork	user/wc.asm	/^fork:$/;"	l
fork	user/zombie.asm	/^fork:$/;"	l
fork1	user/sh.c	/^fork1(void)$/;"	f	typeref:typename:int
forkfork	user/usertests.c	/^forkfork(char *s)$/;"	f	typeref:typename:void
forkforkfork	user/usertests.c	/^forkforkfork(char *s)$/;"	f	typeref:typename:void
forkret	kernel/proc.c	/^forkret(void)$/;"	f	typeref:typename:void
forktest	user/forktest.c	/^forktest(void)$/;"	f	typeref:typename:void
forktest	user/usertests.c	/^forktest(char *s)$/;"	f	typeref:typename:void
fourfiles	user/usertests.c	/^fourfiles(char *s)$/;"	f	typeref:typename:void
fourteen	user/usertests.c	/^fourteen(char *s)$/;"	f	typeref:typename:void
fprintf	user/printf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f	typeref:typename:void
free	kernel/virtio_disk.c	/^  char free[NUM];  \/\/ is a descriptor free?$/;"	m	struct:disk	typeref:typename:char[]	file:
free	user/umalloc.c	/^free(void *ap)$/;"	f	typeref:typename:void
free_chain	kernel/virtio_disk.c	/^free_chain(int i)$/;"	f	typeref:typename:void	file:
free_desc	kernel/virtio_disk.c	/^free_desc(int i)$/;"	f	typeref:typename:void	file:
freeblock	mkfs/mkfs.c	/^uint freeblock;$/;"	v	typeref:typename:uint
freeinode	mkfs/mkfs.c	/^uint freeinode = 1;$/;"	v	typeref:typename:uint
freelist	kernel/kalloc.c	/^  struct run *freelist;$/;"	m	struct:__anon3c3fa87c0108	typeref:struct:run *	file:
freep	user/bigfile.asm	/^      freep = prevp;$/;"	d
freep	user/bigfile.asm	/^  freep = p;$/;"	d
freep	user/cat.asm	/^      freep = prevp;$/;"	d
freep	user/cat.asm	/^  freep = p;$/;"	d
freep	user/echo.asm	/^      freep = prevp;$/;"	d
freep	user/echo.asm	/^  freep = p;$/;"	d
freep	user/grep.asm	/^      freep = prevp;$/;"	d
freep	user/grep.asm	/^  freep = p;$/;"	d
freep	user/grind.asm	/^      freep = prevp;$/;"	d
freep	user/grind.asm	/^  freep = p;$/;"	d
freep	user/init.asm	/^      freep = prevp;$/;"	d
freep	user/init.asm	/^  freep = p;$/;"	d
freep	user/kill.asm	/^      freep = prevp;$/;"	d
freep	user/kill.asm	/^  freep = p;$/;"	d
freep	user/ln.asm	/^      freep = prevp;$/;"	d
freep	user/ln.asm	/^  freep = p;$/;"	d
freep	user/ls.asm	/^      freep = prevp;$/;"	d
freep	user/ls.asm	/^  freep = p;$/;"	d
freep	user/mkdir.asm	/^      freep = prevp;$/;"	d
freep	user/mkdir.asm	/^  freep = p;$/;"	d
freep	user/rm.asm	/^      freep = prevp;$/;"	d
freep	user/rm.asm	/^  freep = p;$/;"	d
freep	user/sh.asm	/^      freep = prevp;$/;"	d
freep	user/sh.asm	/^  freep = p;$/;"	d
freep	user/stressfs.asm	/^      freep = prevp;$/;"	d
freep	user/stressfs.asm	/^  freep = p;$/;"	d
freep	user/symlinktest.asm	/^      freep = prevp;$/;"	d
freep	user/symlinktest.asm	/^  freep = p;$/;"	d
freep	user/umalloc.c	/^static Header *freep;$/;"	v	typeref:typename:Header *	file:
freep	user/usertests.asm	/^      freep = prevp;$/;"	d
freep	user/usertests.asm	/^  freep = p;$/;"	d
freep	user/wc.asm	/^      freep = prevp;$/;"	d
freep	user/wc.asm	/^  freep = p;$/;"	d
freep	user/zombie.asm	/^      freep = prevp;$/;"	d
freep	user/zombie.asm	/^  freep = p;$/;"	d
freeproc	kernel/proc.c	/^freeproc(struct proc *p)$/;"	f	typeref:typename:void	file:
freerange	kernel/kalloc.c	/^freerange(void *pa_start, void *pa_end)$/;"	f	typeref:typename:void
freewalk	kernel/vm.c	/^freewalk(pagetable_t pagetable)$/;"	f	typeref:typename:void
fs.img	Makefile	/^fs.img: mkfs\/mkfs README $(UEXTRA) $(UPROGS)$/;"	t
fsfd	mkfs/mkfs.c	/^int fsfd;$/;"	v	typeref:typename:int
fsfull	user/usertests.c	/^fsfull()$/;"	f	typeref:typename:void
fsinit	kernel/fs.c	/^fsinit(int dev) {$/;"	f	typeref:typename:void
fstat	user/bigfile.asm	/^fstat:$/;"	l
fstat	user/cat.asm	/^fstat:$/;"	l
fstat	user/echo.asm	/^fstat:$/;"	l
fstat	user/forktest.asm	/^fstat:$/;"	l
fstat	user/grep.asm	/^fstat:$/;"	l
fstat	user/grind.asm	/^fstat:$/;"	l
fstat	user/init.asm	/^fstat:$/;"	l
fstat	user/kill.asm	/^fstat:$/;"	l
fstat	user/ln.asm	/^fstat:$/;"	l
fstat	user/ls.asm	/^fstat:$/;"	l
fstat	user/mkdir.asm	/^fstat:$/;"	l
fstat	user/rm.asm	/^fstat:$/;"	l
fstat	user/sh.asm	/^fstat:$/;"	l
fstat	user/stressfs.asm	/^fstat:$/;"	l
fstat	user/symlinktest.asm	/^fstat:$/;"	l
fstat	user/usertests.asm	/^fstat:$/;"	l
fstat	user/usys.S	/^fstat:$/;"	l
fstat	user/wc.asm	/^fstat:$/;"	l
fstat	user/zombie.asm	/^fstat:$/;"	l
ftable	kernel/file.c	/^} ftable;$/;"	v	typeref:struct:__anonc1f1ee260108
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	m	class:QEMU
getcmd	user/sh.c	/^getcmd(char *buf, int nbuf)$/;"	f	typeref:typename:int
getpid	user/bigfile.asm	/^getpid:$/;"	l
getpid	user/cat.asm	/^getpid:$/;"	l
getpid	user/echo.asm	/^getpid:$/;"	l
getpid	user/forktest.asm	/^getpid:$/;"	l
getpid	user/grep.asm	/^getpid:$/;"	l
getpid	user/grind.asm	/^getpid:$/;"	l
getpid	user/init.asm	/^getpid:$/;"	l
getpid	user/kill.asm	/^getpid:$/;"	l
getpid	user/ln.asm	/^getpid:$/;"	l
getpid	user/ls.asm	/^getpid:$/;"	l
getpid	user/mkdir.asm	/^getpid:$/;"	l
getpid	user/rm.asm	/^getpid:$/;"	l
getpid	user/sh.asm	/^getpid:$/;"	l
getpid	user/stressfs.asm	/^getpid:$/;"	l
getpid	user/symlinktest.asm	/^getpid:$/;"	l
getpid	user/usertests.asm	/^getpid:$/;"	l
getpid	user/usys.S	/^getpid:$/;"	l
getpid	user/wc.asm	/^getpid:$/;"	l
getpid	user/zombie.asm	/^getpid:$/;"	l
gets	user/ulib.c	/^gets(char *buf, int max)$/;"	f	typeref:typename:char *
gettoken	user/sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f	typeref:typename:int
go	user/grind.c	/^go(int which_child)$/;"	f	typeref:typename:void
gp	kernel/proc.h	/^  \/*  56 *\/ uint64 gp;$/;"	m	struct:trapframe	typeref:typename:uint64
grade	Makefile	/^grade:$/;"	t
grep	user/grep.c	/^grep(char *pattern, int fd)$/;"	f	typeref:typename:void
growproc	kernel/proc.c	/^growproc(int n)$/;"	f	typeref:typename:int
handin	Makefile	/^handin: tarball-pref myapi.key$/;"	t
handin-check	Makefile	/^handin-check:$/;"	t
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:shell_script.setup_call_on_line	file:
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:QEMU
havekids	kernel/kernel.asm	/^        havekids = 1;$/;"	d
havekids	kernel/kernel.asm	/^    havekids = 0;$/;"	d
head	kernel/bio.c	/^  struct buf head;$/;"	m	struct:__anon6a7165400108	typeref:struct:buf	file:
header	user/umalloc.c	/^union header {$/;"	u	file:
hi	user/grind.asm	/^    hi = x \/ 127773;$/;"	d
holding	kernel/spinlock.c	/^holding(struct spinlock *lk)$/;"	f	typeref:typename:int
holdingsleep	kernel/sleeplock.c	/^holdingsleep(struct sleeplock *lk)$/;"	f	typeref:typename:int
hour	kernel/date.h	/^  uint hour;$/;"	m	struct:rtcdate	typeref:typename:uint
i	kernel/kernel.asm	/^  i = 0;$/;"	d
i	user/bigfile.asm	/^  i = 0;$/;"	d
i	user/cat.asm	/^  i = 0;$/;"	d
i	user/echo.asm	/^  i = 0;$/;"	d
i	user/grep.asm	/^  i = 0;$/;"	d
i	user/grind.asm	/^  i = 0;$/;"	d
i	user/init.asm	/^  i = 0;$/;"	d
i	user/kill.asm	/^  i = 0;$/;"	d
i	user/ln.asm	/^  i = 0;$/;"	d
i	user/ls.asm	/^  i = 0;$/;"	d
i	user/mkdir.asm	/^  i = 0;$/;"	d
i	user/rm.asm	/^  i = 0;$/;"	d
i	user/sh.asm	/^  i = 0;$/;"	d
i	user/stressfs.asm	/^  i = 0;$/;"	d
i	user/symlinktest.asm	/^  i = 0;$/;"	d
i	user/usertests.asm	/^      i = de.name[1] - '0';$/;"	d
i	user/usertests.asm	/^    i = read(fd, buf, BSIZE);$/;"	d
i	user/usertests.asm	/^  i = 0;$/;"	d
i	user/usertests.asm	/^  i = read(fd, buf, N*SZ*2);$/;"	d
i	user/wc.asm	/^  i = 0;$/;"	d
i	user/zombie.asm	/^  i = 0;$/;"	d
ialloc	kernel/fs.c	/^ialloc(uint dev, short type)$/;"	f	typeref:struct:inode *
ialloc	mkfs/mkfs.c	/^ialloc(ushort type)$/;"	f	typeref:typename:uint
iappend	mkfs/mkfs.c	/^iappend(uint inum, void *xp, int n)$/;"	f	typeref:typename:void
icache	kernel/fs.c	/^} icache;$/;"	v	typeref:struct:__anon033c111f0108
id	kernel/virtio.h	/^  uint32 id;   \/\/ index of start of completed descriptor chain$/;"	m	struct:virtq_used_elem	typeref:typename:uint32
idup	kernel/fs.c	/^idup(struct inode *ip)$/;"	f	typeref:struct:inode *
idx	kernel/virtio.h	/^  uint16 idx;   \/\/ device increments when it adds a ring[] entry$/;"	m	struct:virtq_used	typeref:typename:uint16
idx	kernel/virtio.h	/^  uint16 idx;   \/\/ driver will write ring[idx] next$/;"	m	struct:virtq_avail	typeref:typename:uint16
iget	kernel/fs.c	/^iget(uint dev, uint inum)$/;"	f	typeref:struct:inode *	file:
iinit	kernel/fs.c	/^iinit()$/;"	f	typeref:typename:void
ilock	kernel/fs.c	/^ilock(struct inode *ip)$/;"	f	typeref:typename:void
info	kernel/virtio_disk.c	/^  } info[NUM];$/;"	m	struct:disk	typeref:struct:disk::__anon0ecc7a2d0108[]	file:
init	user/initcode.S	/^init:$/;"	l
initcode	kernel/proc.c	/^uchar initcode[] = {$/;"	v	typeref:typename:uchar[]
initlock	kernel/spinlock.c	/^initlock(struct spinlock *lk, char *name)$/;"	f	typeref:typename:void
initlog	kernel/log.c	/^initlog(int dev, struct superblock *sb)$/;"	f	typeref:typename:void
initproc	kernel/kernel.asm	/^  initproc = p;$/;"	d
initproc	kernel/proc.c	/^struct proc *initproc;$/;"	v	typeref:struct:proc *
initsleeplock	kernel/sleeplock.c	/^initsleeplock(struct sleeplock *lk, char *name)$/;"	f	typeref:typename:void
ino	kernel/stat.h	/^  uint ino;    \/\/ Inode number$/;"	m	struct:stat	typeref:typename:uint
inode	kernel/file.h	/^struct inode {$/;"	s
inode	kernel/fs.c	/^  struct inode inode[NINODE];$/;"	m	struct:__anon033c111f0108	typeref:struct:inode[]	file:
inodestart	kernel/fs.h	/^  uint inodestart;   \/\/ Block number of first inode block$/;"	m	struct:superblock	typeref:typename:uint
install_trans	kernel/log.c	/^install_trans(int recovering)$/;"	f	typeref:typename:void	file:
int	kernel/kernel.asm	/^int$/;"	l
int	user/bigfile.asm	/^int$/;"	l
int	user/cat.asm	/^int$/;"	l
int	user/echo.asm	/^int$/;"	l
int	user/forktest.asm	/^int$/;"	l
int	user/grep.asm	/^int matchstar(int c, char *re, char *text)$/;"	l
int	user/grep.asm	/^int$/;"	l
int	user/grind.asm	/^int$/;"	l
int	user/init.asm	/^int$/;"	l
int	user/kill.asm	/^int$/;"	l
int	user/ln.asm	/^int$/;"	l
int	user/ls.asm	/^int$/;"	l
int	user/mkdir.asm	/^int$/;"	l
int	user/rm.asm	/^int$/;"	l
int	user/sh.asm	/^int$/;"	l
int	user/stressfs.asm	/^int$/;"	l
int	user/symlinktest.asm	/^int$/;"	l
int	user/usertests.asm	/^int$/;"	l
int	user/wc.asm	/^int$/;"	l
int	user/zombie.asm	/^int$/;"	l
intena	kernel/kernel.asm	/^  intena = mycpu()->intena;$/;"	d
intena	kernel/proc.h	/^  int intena;                 \/\/ Were interrupts enabled before push_off()?$/;"	m	struct:cpu	typeref:typename:int
intr_get	kernel/riscv.h	/^intr_get()$/;"	f	typeref:typename:int
intr_off	kernel/riscv.h	/^intr_off()$/;"	f	typeref:typename:void
intr_on	kernel/riscv.h	/^intr_on()$/;"	f	typeref:typename:void
inum	kernel/file.h	/^  uint inum;          \/\/ Inode number$/;"	m	struct:inode	typeref:typename:uint
inum	kernel/fs.h	/^  ushort inum;$/;"	m	struct:dirent	typeref:typename:ushort
inum	kernel/kernel.asm	/^      inum = de.inum;$/;"	d
inum	user/usertests.c	/^    ushort inum;$/;"	m	struct:concreate::__anon2469bfd60b08	typeref:typename:ushort	file:
inword	user/wc.asm	/^        inword = 0;$/;"	d
inword	user/wc.asm	/^        inword = 1;$/;"	d
inword	user/wc.asm	/^  inword = 0;$/;"	d
ip	kernel/file.h	/^  struct inode *ip;  \/\/ FD_INODE and FD_DEVICE$/;"	m	struct:file	typeref:struct:inode *
ip	kernel/kernel.asm	/^    ip = create(path, T_FILE, 0, 0,0);$/;"	d
ip	kernel/kernel.asm	/^    ip = idup(myproc()->cwd);$/;"	d
ip	kernel/kernel.asm	/^    ip = iget(ROOTDEV, ROOTINO);$/;"	d
ip	kernel/kernel.asm	/^    ip = next;$/;"	d
ip	kernel/kernel.asm	/^  ip = 0;$/;"	d
iput	kernel/fs.c	/^iput(struct inode *ip)$/;"	f	typeref:typename:void
iputtest	user/usertests.c	/^iputtest(char *s)$/;"	f	typeref:typename:void
iref	user/usertests.c	/^iref(char *s)$/;"	f	typeref:typename:void
isdirempty	kernel/sysfile.c	/^isdirempty(struct inode *dp)$/;"	f	typeref:typename:int	file:
iter	user/grind.c	/^iter()$/;"	f	typeref:typename:void
itrunc	kernel/fs.c	/^itrunc(struct inode *ip)$/;"	f	typeref:typename:void
iunlock	kernel/fs.c	/^iunlock(struct inode *ip)$/;"	f	typeref:typename:void
iunlockput	kernel/fs.c	/^iunlockput(struct inode *ip)$/;"	f	typeref:typename:void
iupdate	kernel/fs.c	/^iupdate(struct inode *ip)$/;"	f	typeref:typename:void
justone	user/usertests.asm	/^    justone = argv[1];$/;"	d
kalloc	kernel/kalloc.c	/^kalloc(void)$/;"	f	typeref:typename:void *
kernel_hartid	kernel/proc.h	/^  \/*  32 *\/ uint64 kernel_hartid; \/\/ saved kernel tp$/;"	m	struct:trapframe	typeref:typename:uint64
kernel_pagetable	kernel/kernel.asm	/^  kernel_pagetable = kvmmake();$/;"	d
kernel_pagetable	kernel/vm.c	/^pagetable_t kernel_pagetable;$/;"	v	typeref:typename:pagetable_t
kernel_satp	kernel/proc.h	/^  \/*   0 *\/ uint64 kernel_satp;   \/\/ kernel page table$/;"	m	struct:trapframe	typeref:typename:uint64
kernel_sp	kernel/proc.h	/^  \/*   8 *\/ uint64 kernel_sp;     \/\/ top of process's kernel stack$/;"	m	struct:trapframe	typeref:typename:uint64
kernel_trap	kernel/proc.h	/^  \/*  16 *\/ uint64 kernel_trap;   \/\/ usertrap()$/;"	m	struct:trapframe	typeref:typename:uint64
kerneltrap	kernel/trap.c	/^kerneltrap()$/;"	f	typeref:typename:void
kernelvec	kernel/kernelvec.S	/^kernelvec:$/;"	l
kernmem	user/usertests.c	/^kernmem(char *s)$/;"	f	typeref:typename:void
kfree	kernel/kalloc.c	/^kfree(void *pa)$/;"	f	typeref:typename:void
kill	gradelib.py	/^    def kill(self):$/;"	m	class:QEMU
kill	kernel/proc.c	/^kill(int pid)$/;"	f	typeref:typename:int
kill	user/bigfile.asm	/^kill:$/;"	l
kill	user/cat.asm	/^kill:$/;"	l
kill	user/echo.asm	/^kill:$/;"	l
kill	user/forktest.asm	/^kill:$/;"	l
kill	user/grep.asm	/^kill:$/;"	l
kill	user/grind.asm	/^kill:$/;"	l
kill	user/init.asm	/^kill:$/;"	l
kill	user/kill.asm	/^kill:$/;"	l
kill	user/ln.asm	/^kill:$/;"	l
kill	user/ls.asm	/^kill:$/;"	l
kill	user/mkdir.asm	/^kill:$/;"	l
kill	user/rm.asm	/^kill:$/;"	l
kill	user/sh.asm	/^kill:$/;"	l
kill	user/stressfs.asm	/^kill:$/;"	l
kill	user/symlinktest.asm	/^kill:$/;"	l
kill	user/usertests.asm	/^kill:$/;"	l
kill	user/usys.S	/^kill:$/;"	l
kill	user/wc.asm	/^kill:$/;"	l
kill	user/zombie.asm	/^kill:$/;"	l
killed	kernel/proc.h	/^  int killed;                  \/\/ If non-zero, have been killed$/;"	m	struct:proc	typeref:typename:int
kinit	kernel/kalloc.c	/^kinit()$/;"	f	typeref:typename:void
kmem	kernel/kalloc.c	/^} kmem;$/;"	v	typeref:struct:__anon3c3fa87c0108
kpgtbl	kernel/kernel.asm	/^  kpgtbl = (pagetable_t) kalloc();$/;"	d
kstack	kernel/proc.h	/^  uint64 kstack;               \/\/ Virtual address of kernel stack$/;"	m	struct:proc	typeref:typename:uint64
kvminit	kernel/vm.c	/^kvminit(void)$/;"	f	typeref:typename:void
kvminithart	kernel/vm.c	/^kvminithart()$/;"	f	typeref:typename:void
kvmmake	kernel/vm.c	/^kvmmake(void)$/;"	f	typeref:typename:pagetable_t
kvmmap	kernel/vm.c	/^kvmmap(pagetable_t kpgtbl, uint64 va, uint64 pa, uint64 sz, int perm)$/;"	f	typeref:typename:void
l	user/wc.asm	/^  l = w = c = 0;$/;"	d
last	kernel/kernel.asm	/^      last = s+1;$/;"	d
last	kernel/kernel.asm	/^  last = PGROUNDDOWN(va + size - 1);$/;"	d
left	user/sh.c	/^  struct cmd *left;$/;"	m	struct:listcmd	typeref:struct:cmd *	file:
left	user/sh.c	/^  struct cmd *left;$/;"	m	struct:pipecmd	typeref:struct:cmd *	file:
len	kernel/kernel.asm	/^  len = path - s;$/;"	d
len	kernel/virtio.h	/^  uint32 len;$/;"	m	struct:virtq_desc	typeref:typename:uint32
len	kernel/virtio.h	/^  uint32 len;$/;"	m	struct:virtq_used_elem	typeref:typename:uint32
lh	kernel/log.c	/^  struct logheader lh;$/;"	m	struct:log	typeref:struct:logheader	file:
link	user/bigfile.asm	/^link:$/;"	l
link	user/cat.asm	/^link:$/;"	l
link	user/echo.asm	/^link:$/;"	l
link	user/forktest.asm	/^link:$/;"	l
link	user/grep.asm	/^link:$/;"	l
link	user/grind.asm	/^link:$/;"	l
link	user/init.asm	/^link:$/;"	l
link	user/kill.asm	/^link:$/;"	l
link	user/ln.asm	/^link:$/;"	l
link	user/ls.asm	/^link:$/;"	l
link	user/mkdir.asm	/^link:$/;"	l
link	user/rm.asm	/^link:$/;"	l
link	user/sh.asm	/^link:$/;"	l
link	user/stressfs.asm	/^link:$/;"	l
link	user/symlinktest.asm	/^link:$/;"	l
link	user/usertests.asm	/^link:$/;"	l
link	user/usys.S	/^link:$/;"	l
link	user/wc.asm	/^link:$/;"	l
link	user/zombie.asm	/^link:$/;"	l
linktest	user/usertests.c	/^linktest(char *s)$/;"	f	typeref:typename:void
linkunlink	user/usertests.c	/^linkunlink(char *s)$/;"	f	typeref:typename:void
listcmd	user/sh.c	/^listcmd(struct cmd *left, struct cmd *right)$/;"	f	typeref:struct:cmd *
listcmd	user/sh.c	/^struct listcmd {$/;"	s	file:
lk	kernel/sleeplock.h	/^  struct spinlock lk; \/\/ spinlock protecting this sleep lock$/;"	m	struct:sleeplock	typeref:struct:spinlock
lo	user/grind.asm	/^    lo = x % 127773;$/;"	d
loadseg	kernel/exec.c	/^loadseg(pagetable_t pagetable, uint64 va, struct inode *ip, uint offset, uint sz)$/;"	f	typeref:typename:int	file:
lock	kernel/bio.c	/^  struct spinlock lock;$/;"	m	struct:__anon6a7165400108	typeref:struct:spinlock	file:
lock	kernel/buf.h	/^  struct sleeplock lock;$/;"	m	struct:buf	typeref:struct:sleeplock
lock	kernel/console.c	/^  struct spinlock lock;$/;"	m	struct:__anonb6393d190108	typeref:struct:spinlock	file:
lock	kernel/file.c	/^  struct spinlock lock;$/;"	m	struct:__anonc1f1ee260108	typeref:struct:spinlock	file:
lock	kernel/file.h	/^  struct sleeplock lock; \/\/ protects everything below here$/;"	m	struct:inode	typeref:struct:sleeplock
lock	kernel/fs.c	/^  struct spinlock lock;$/;"	m	struct:__anon033c111f0108	typeref:struct:spinlock	file:
lock	kernel/kalloc.c	/^  struct spinlock lock;$/;"	m	struct:__anon3c3fa87c0108	typeref:struct:spinlock	file:
lock	kernel/log.c	/^  struct spinlock lock;$/;"	m	struct:log	typeref:struct:spinlock	file:
lock	kernel/pipe.c	/^  struct spinlock lock;$/;"	m	struct:pipe	typeref:struct:spinlock	file:
lock	kernel/printf.c	/^  struct spinlock lock;$/;"	m	struct:__anonef4e5b790108	typeref:struct:spinlock	file:
lock	kernel/proc.h	/^  struct spinlock lock;$/;"	m	struct:proc	typeref:struct:spinlock
locked	kernel/sleeplock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:sleeplock	typeref:typename:uint
locked	kernel/spinlock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	typeref:typename:uint
locking	kernel/kernel.asm	/^  locking = pr.locking;$/;"	d
locking	kernel/printf.c	/^  int locking;$/;"	m	struct:__anonef4e5b790108	typeref:typename:int	file:
log	kernel/log.c	/^struct log log;$/;"	v	typeref:struct:log
log	kernel/log.c	/^struct log {$/;"	s	file:
log_write	kernel/log.c	/^log_write(struct buf *b)$/;"	f	typeref:typename:void
logheader	kernel/log.c	/^struct logheader {$/;"	s	file:
logstart	kernel/fs.h	/^  uint logstart;     \/\/ Block number of first log block$/;"	m	struct:superblock	typeref:typename:uint
ls	user/ls.c	/^ls(char *path)$/;"	f	typeref:typename:void
m	kernel/kernel.asm	/^      m = 1 << (bi % 8);$/;"	d
m	kernel/kernel.asm	/^    m = min(n - tot, BSIZE - off%BSIZE);$/;"	d
m	kernel/kernel.asm	/^  m = 1 << (bi % 8);$/;"	d
m	user/grep.asm	/^  m = 0;$/;"	d
m1	user/usertests.asm	/^      m1 = m2;$/;"	d
m1	user/usertests.asm	/^    m1 = 0;$/;"	d
m1	user/usertests.asm	/^    m1 = malloc(1024*20);$/;"	d
m2	user/usertests.asm	/^      m2 = *(char**)m1;$/;"	d
machine	kernel/elf.h	/^  ushort machine;$/;"	m	struct:elfhdr	typeref:typename:ushort
magic	kernel/elf.h	/^  uint magic;  \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr	typeref:typename:uint
magic	kernel/fs.h	/^  uint magic;        \/\/ Must be FSMAGIC$/;"	m	struct:superblock	typeref:typename:uint
main	kernel/main.c	/^main()$/;"	f	typeref:typename:void
main	mkfs/mkfs.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/bigfile.c	/^main()$/;"	f	typeref:typename:int
main	user/cat.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/echo.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/forktest.c	/^main(void)$/;"	f	typeref:typename:int
main	user/grep.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/grind.c	/^main()$/;"	f	typeref:typename:int
main	user/init.c	/^main(void)$/;"	f	typeref:typename:int
main	user/kill.c	/^main(int argc, char **argv)$/;"	f	typeref:typename:int
main	user/ln.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/ls.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/mkdir.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/rm.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/sh.c	/^main(void)$/;"	f	typeref:typename:int
main	user/stressfs.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/symlinktest.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/usertests.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/wc.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	user/zombie.c	/^main(void)$/;"	f	typeref:typename:int
major	kernel/file.h	/^  short major;       \/\/ FD_DEVICE$/;"	m	struct:file	typeref:typename:short
major	kernel/file.h	/^  short major;$/;"	m	struct:inode	typeref:typename:short
major	kernel/file.h	/^#define major(/;"	d
major	kernel/fs.h	/^  short major;          \/\/ Major device number (T_DEVICE only)$/;"	m	struct:dinode	typeref:typename:short
make	gradelib.py	/^def make(*target):$/;"	f
malloc	user/umalloc.c	/^malloc(uint nbytes)$/;"	f	typeref:typename:void *
manywrites	user/usertests.c	/^manywrites(char *s)$/;"	f	typeref:typename:void
mappages	kernel/vm.c	/^mappages(pagetable_t pagetable, uint64 va, uint64 size, uint64 pa, int perm)$/;"	f	typeref:typename:int
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match	user/grep.c	/^match(char *re, char *text)$/;"	f	typeref:typename:int
matchhere	user/grep.c	/^int matchhere(char *re, char *text)$/;"	f	typeref:typename:int
matchstar	user/grep.c	/^int matchstar(int c, char *re, char *text)$/;"	f	typeref:typename:int
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mem	kernel/kernel.asm	/^    mem = kalloc();$/;"	d
mem	kernel/kernel.asm	/^  mem = kalloc();$/;"	d
mem	user/usertests.c	/^mem(char *s)$/;"	f	typeref:typename:void
memcmp	kernel/string.c	/^memcmp(const void *v1, const void *v2, uint n)$/;"	f	typeref:typename:int
memcmp	user/ulib.c	/^memcmp(const void *s1, const void *s2, uint n)$/;"	f	typeref:typename:int
memcpy	kernel/string.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f	typeref:typename:void *
memcpy	user/ulib.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f	typeref:typename:void *
memmove	kernel/string.c	/^memmove(void *dst, const void *src, uint n)$/;"	f	typeref:typename:void *
memmove	user/ulib.c	/^memmove(void *vdst, const void *vsrc, int n)$/;"	f	typeref:typename:void *
memset	kernel/string.c	/^memset(void *dst, int c, uint n)$/;"	f	typeref:typename:void *
memset	user/ulib.c	/^memset(void *dst, int c, uint n)$/;"	f	typeref:typename:void *
memsz	kernel/elf.h	/^  uint64 memsz;$/;"	m	struct:proghdr	typeref:typename:uint64
min	kernel/fs.c	/^#define min(/;"	d	file:
min	mkfs/mkfs.c	/^#define min(/;"	d	file:
minor	kernel/file.h	/^  short minor;$/;"	m	struct:inode	typeref:typename:short
minor	kernel/file.h	/^#define minor(/;"	d
minor	kernel/fs.h	/^  short minor;          \/\/ Minor device number (T_DEVICE only)$/;"	m	struct:dinode	typeref:typename:short
minute	kernel/date.h	/^  uint minute;$/;"	m	struct:rtcdate	typeref:typename:uint
mkdev	kernel/file.h	/^#define	mkdev(/;"	d
mkdir	user/bigfile.asm	/^mkdir:$/;"	l
mkdir	user/cat.asm	/^mkdir:$/;"	l
mkdir	user/echo.asm	/^mkdir:$/;"	l
mkdir	user/forktest.asm	/^mkdir:$/;"	l
mkdir	user/grep.asm	/^mkdir:$/;"	l
mkdir	user/grind.asm	/^mkdir:$/;"	l
mkdir	user/init.asm	/^mkdir:$/;"	l
mkdir	user/kill.asm	/^mkdir:$/;"	l
mkdir	user/ln.asm	/^mkdir:$/;"	l
mkdir	user/ls.asm	/^mkdir:$/;"	l
mkdir	user/mkdir.asm	/^mkdir:$/;"	l
mkdir	user/rm.asm	/^mkdir:$/;"	l
mkdir	user/sh.asm	/^mkdir:$/;"	l
mkdir	user/stressfs.asm	/^mkdir:$/;"	l
mkdir	user/symlinktest.asm	/^mkdir:$/;"	l
mkdir	user/usertests.asm	/^mkdir:$/;"	l
mkdir	user/usys.S	/^mkdir:$/;"	l
mkdir	user/wc.asm	/^mkdir:$/;"	l
mkdir	user/zombie.asm	/^mkdir:$/;"	l
mkfs/mkfs	Makefile	/^mkfs\/mkfs: mkfs\/mkfs.c $K\/fs.h $K\/param.h$/;"	t
mknod	user/bigfile.asm	/^mknod:$/;"	l
mknod	user/cat.asm	/^mknod:$/;"	l
mknod	user/echo.asm	/^mknod:$/;"	l
mknod	user/forktest.asm	/^mknod:$/;"	l
mknod	user/grep.asm	/^mknod:$/;"	l
mknod	user/grind.asm	/^mknod:$/;"	l
mknod	user/init.asm	/^mknod:$/;"	l
mknod	user/kill.asm	/^mknod:$/;"	l
mknod	user/ln.asm	/^mknod:$/;"	l
mknod	user/ls.asm	/^mknod:$/;"	l
mknod	user/mkdir.asm	/^mknod:$/;"	l
mknod	user/rm.asm	/^mknod:$/;"	l
mknod	user/sh.asm	/^mknod:$/;"	l
mknod	user/stressfs.asm	/^mknod:$/;"	l
mknod	user/symlinktest.asm	/^mknod:$/;"	l
mknod	user/usertests.asm	/^mknod:$/;"	l
mknod	user/usys.S	/^mknod:$/;"	l
mknod	user/wc.asm	/^mknod:$/;"	l
mknod	user/zombie.asm	/^mknod:$/;"	l
mode	user/sh.c	/^  int mode;$/;"	m	struct:redircmd	typeref:typename:int	file:
month	kernel/date.h	/^  uint month;$/;"	m	struct:rtcdate	typeref:typename:uint
morecore	user/umalloc.c	/^morecore(uint nu)$/;"	f	typeref:typename:Header *	file:
myapi.key	Makefile	/^myapi.key:$/;"	t
mycpu	kernel/proc.c	/^mycpu(void) {$/;"	f	typeref:struct:cpu *
myproc	kernel/proc.c	/^myproc(void) {$/;"	f	typeref:struct:proc *
n	gradelib.py	/^            n = 0$/;"	v	class:shell_script.setup_call_on_line.context
n	kernel/kernel.asm	/^      n = PGSIZE;$/;"	d
n	kernel/kernel.asm	/^      n = len;$/;"	d
n	kernel/kernel.asm	/^      n = max;$/;"	d
n	kernel/kernel.asm	/^      n = sz - i;$/;"	d
n	kernel/kernel.asm	/^    n = PGSIZE - (dstva - va0);$/;"	d
n	kernel/kernel.asm	/^    n = PGSIZE - (srcva - va0);$/;"	d
n	kernel/kernel.asm	/^    n = ip->size - off;$/;"	d
n	kernel/log.c	/^  int n;$/;"	m	struct:logheader	typeref:typename:int	file:
n	user/bigfile.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/bigfile.asm	/^  n = 0;$/;"	d
n	user/cat.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/cat.asm	/^  n = 0;$/;"	d
n	user/echo.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/echo.asm	/^  n = 0;$/;"	d
n	user/forktest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/forktest.asm	/^  n = 0;$/;"	d
n	user/grep.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/grep.asm	/^  n = 0;$/;"	d
n	user/grind.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/grind.asm	/^  n = 0;$/;"	d
n	user/init.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/init.asm	/^  n = 0;$/;"	d
n	user/kill.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/kill.asm	/^  n = 0;$/;"	d
n	user/ln.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/ln.asm	/^  n = 0;$/;"	d
n	user/ls.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/ls.asm	/^  n = 0;$/;"	d
n	user/mkdir.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/mkdir.asm	/^  n = 0;$/;"	d
n	user/rm.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/rm.asm	/^  n = 0;$/;"	d
n	user/sh.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/sh.asm	/^  n = 0;$/;"	d
n	user/stressfs.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/stressfs.asm	/^  n = 0;$/;"	d
n	user/symlinktest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/symlinktest.asm	/^  n = 0;$/;"	d
n	user/usertests.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/usertests.asm	/^    n = read(fds[0], (void*)addr, 8192);$/;"	d
n	user/usertests.asm	/^    n = write(1, (char*)addr, 8192);$/;"	d
n	user/usertests.asm	/^    n = write(fds[1], "x", 1);$/;"	d
n	user/usertests.asm	/^    n = write(fds[1], (char*)addr, 8192);$/;"	d
n	user/usertests.asm	/^  n = 0;$/;"	d
n	user/usertests.asm	/^  n = read(fd, (void*)(a+4096), 10);$/;"	d
n	user/usertests.asm	/^  n = read(fd2, buf, sizeof(buf));$/;"	d
n	user/usertests.asm	/^  n = read(fd3, buf, sizeof(buf));$/;"	d
n	user/usertests.asm	/^  n = write(fd, (void*)(a+4096), 1024);$/;"	d
n	user/wc.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/wc.asm	/^  n = 0;$/;"	d
n	user/zombie.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/zombie.asm	/^  n = 0;$/;"	d
n1	kernel/kernel.asm	/^        n1 = max;$/;"	d
name	kernel/fs.h	/^  char name[DIRSIZ];$/;"	m	struct:dirent	typeref:typename:char[]
name	kernel/proc.h	/^  char name[16];               \/\/ Process name (debugging)$/;"	m	struct:proc	typeref:typename:char[16]
name	kernel/sleeplock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:sleeplock	typeref:typename:char *
name	kernel/spinlock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock	typeref:typename:char *
name	user/usertests.c	/^    char name[DIRSIZ];$/;"	m	struct:concreate::__anon2469bfd60b08	typeref:typename:char[]	file:
namecmp	kernel/fs.c	/^namecmp(const char *s, const char *t)$/;"	f	typeref:typename:int
namei	kernel/fs.c	/^namei(char *path)$/;"	f	typeref:struct:inode *
nameiparent	kernel/fs.c	/^nameiparent(char *path, char *name)$/;"	f	typeref:struct:inode *
namex	kernel/fs.c	/^namex(char *path, int nameiparent, char *name)$/;"	f	typeref:struct:inode *	file:
nbitmap	mkfs/mkfs.c	/^int nbitmap = FSSIZE\/(BSIZE*8) + 1;$/;"	v	typeref:typename:int
nblocks	kernel/fs.h	/^  uint nblocks;      \/\/ Number of data blocks$/;"	m	struct:superblock	typeref:typename:uint
nblocks	mkfs/mkfs.c	/^int nblocks;  \/\/ Number of data blocks$/;"	v	typeref:typename:int
nc	user/usertests.asm	/^  nc = np = 0;$/;"	d
neg	user/bigfile.asm	/^    neg = 1;$/;"	d
neg	user/bigfile.asm	/^  neg = 0;$/;"	d
neg	user/cat.asm	/^    neg = 1;$/;"	d
neg	user/cat.asm	/^  neg = 0;$/;"	d
neg	user/echo.asm	/^    neg = 1;$/;"	d
neg	user/echo.asm	/^  neg = 0;$/;"	d
neg	user/grep.asm	/^    neg = 1;$/;"	d
neg	user/grep.asm	/^  neg = 0;$/;"	d
neg	user/grind.asm	/^    neg = 1;$/;"	d
neg	user/grind.asm	/^  neg = 0;$/;"	d
neg	user/init.asm	/^    neg = 1;$/;"	d
neg	user/init.asm	/^  neg = 0;$/;"	d
neg	user/kill.asm	/^    neg = 1;$/;"	d
neg	user/kill.asm	/^  neg = 0;$/;"	d
neg	user/ln.asm	/^    neg = 1;$/;"	d
neg	user/ln.asm	/^  neg = 0;$/;"	d
neg	user/ls.asm	/^    neg = 1;$/;"	d
neg	user/ls.asm	/^  neg = 0;$/;"	d
neg	user/mkdir.asm	/^    neg = 1;$/;"	d
neg	user/mkdir.asm	/^  neg = 0;$/;"	d
neg	user/rm.asm	/^    neg = 1;$/;"	d
neg	user/rm.asm	/^  neg = 0;$/;"	d
neg	user/sh.asm	/^    neg = 1;$/;"	d
neg	user/sh.asm	/^  neg = 0;$/;"	d
neg	user/stressfs.asm	/^    neg = 1;$/;"	d
neg	user/stressfs.asm	/^  neg = 0;$/;"	d
neg	user/symlinktest.asm	/^    neg = 1;$/;"	d
neg	user/symlinktest.asm	/^  neg = 0;$/;"	d
neg	user/usertests.asm	/^    neg = 1;$/;"	d
neg	user/usertests.asm	/^  neg = 0;$/;"	d
neg	user/wc.asm	/^    neg = 1;$/;"	d
neg	user/wc.asm	/^  neg = 0;$/;"	d
neg	user/zombie.asm	/^    neg = 1;$/;"	d
neg	user/zombie.asm	/^  neg = 0;$/;"	d
next	kernel/buf.h	/^  struct buf *next;$/;"	m	struct:buf	typeref:struct:buf *
next	kernel/kalloc.c	/^  struct run *next;$/;"	m	struct:run	typeref:struct:run *	file:
next	kernel/virtio.h	/^  uint16 next;$/;"	m	struct:virtq_desc	typeref:typename:uint16
nextpid	kernel/kernel.asm	/^  nextpid = nextpid + 1;$/;"	d
nextpid	kernel/proc.c	/^int nextpid = 1;$/;"	v	typeref:typename:int
ninodeblocks	mkfs/mkfs.c	/^int ninodeblocks = NINODES \/ IPB + 1;$/;"	v	typeref:typename:int
ninodes	kernel/fs.h	/^  uint ninodes;      \/\/ Number of inodes.$/;"	m	struct:superblock	typeref:typename:uint
nlink	kernel/file.h	/^  short nlink;$/;"	m	struct:inode	typeref:typename:short
nlink	kernel/fs.h	/^  short nlink;          \/\/ Number of links to inode in file system$/;"	m	struct:dinode	typeref:typename:short
nlink	kernel/stat.h	/^  short nlink; \/\/ Number of links to file$/;"	m	struct:stat	typeref:typename:short
nlog	kernel/fs.h	/^  uint nlog;         \/\/ Number of log blocks$/;"	m	struct:superblock	typeref:typename:uint
nlog	mkfs/mkfs.c	/^int nlog = LOGSIZE;$/;"	v	typeref:typename:int
nmeta	mkfs/mkfs.c	/^int nmeta;    \/\/ Number of meta blocks (boot, sb, nlog, inode, bitmap)$/;"	v	typeref:typename:int
noff	kernel/proc.h	/^  int noff;                   \/\/ Depth of push_off() nesting.$/;"	m	struct:cpu	typeref:typename:int
nread	kernel/pipe.c	/^  uint nread;     \/\/ number of bytes read$/;"	m	struct:pipe	typeref:typename:uint	file:
nulterminate	user/sh.c	/^nulterminate(struct cmd *cmd)$/;"	f	typeref:struct:cmd *
num	kernel/kernel.asm	/^  num = p->trapframe->a7;$/;"	d
nunits	user/bigfile.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/cat.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/echo.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/grep.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/grind.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/init.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/kill.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/ln.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/ls.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/mkdir.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/rm.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/sh.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/stressfs.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/symlinktest.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/usertests.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/wc.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/zombie.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nwrite	kernel/pipe.c	/^  uint nwrite;    \/\/ number of bytes written$/;"	m	struct:pipe	typeref:typename:uint	file:
off	kernel/elf.h	/^  uint64 off;$/;"	m	struct:proghdr	typeref:typename:uint64
off	kernel/file.h	/^  uint off;          \/\/ FD_INODE$/;"	m	struct:file	typeref:typename:uint
ofile	kernel/proc.h	/^  struct file *ofile[NOFILE];  \/\/ Open files$/;"	m	struct:proc	typeref:struct:file * []
oldbrk	user/usertests.asm	/^  oldbrk = sbrk(0);$/;"	d
oldpagetable	kernel/kernel.asm	/^  oldpagetable = p->pagetable;$/;"	d
oldsz	kernel/kernel.asm	/^  oldsz = PGROUNDUP(oldsz);$/;"	d
open	user/bigfile.asm	/^open:$/;"	l
open	user/cat.asm	/^open:$/;"	l
open	user/echo.asm	/^open:$/;"	l
open	user/forktest.asm	/^open:$/;"	l
open	user/grep.asm	/^open:$/;"	l
open	user/grind.asm	/^open:$/;"	l
open	user/init.asm	/^open:$/;"	l
open	user/kill.asm	/^open:$/;"	l
open	user/ln.asm	/^open:$/;"	l
open	user/ls.asm	/^open:$/;"	l
open	user/mkdir.asm	/^open:$/;"	l
open	user/rm.asm	/^open:$/;"	l
open	user/sh.asm	/^open:$/;"	l
open	user/stressfs.asm	/^open:$/;"	l
open	user/symlinktest.asm	/^open:$/;"	l
open	user/usertests.asm	/^open:$/;"	l
open	user/usys.S	/^open:$/;"	l
open	user/wc.asm	/^open:$/;"	l
open	user/zombie.asm	/^open:$/;"	l
openiputtest	user/usertests.c	/^openiputtest(char *s)$/;"	f	typeref:typename:void
opentest	user/usertests.c	/^opentest(char *s)$/;"	f	typeref:typename:void
ops	kernel/virtio_disk.c	/^  struct virtio_blk_req ops[NUM];$/;"	m	struct:disk	typeref:struct:virtio_blk_req[]	file:
os	kernel/kernel.asm	/^  os = s;$/;"	d
os	user/bigfile.asm	/^  os = s;$/;"	d
os	user/cat.asm	/^  os = s;$/;"	d
os	user/echo.asm	/^  os = s;$/;"	d
os	user/forktest.asm	/^  os = s;$/;"	d
os	user/grep.asm	/^  os = s;$/;"	d
os	user/grind.asm	/^  os = s;$/;"	d
os	user/init.asm	/^  os = s;$/;"	d
os	user/kill.asm	/^  os = s;$/;"	d
os	user/ln.asm	/^  os = s;$/;"	d
os	user/ls.asm	/^  os = s;$/;"	d
os	user/mkdir.asm	/^  os = s;$/;"	d
os	user/rm.asm	/^  os = s;$/;"	d
os	user/sh.asm	/^  os = s;$/;"	d
os	user/stressfs.asm	/^  os = s;$/;"	d
os	user/symlinktest.asm	/^  os = s;$/;"	d
os	user/usertests.asm	/^  os = s;$/;"	d
os	user/wc.asm	/^  os = s;$/;"	d
os	user/zombie.asm	/^  os = s;$/;"	d
outstanding	kernel/log.c	/^  int outstanding; \/\/ how many FS sys calls are executing.$/;"	m	struct:log	typeref:typename:int	file:
p	kernel/kernel.asm	/^  p = (char*)PGROUNDUP((uint64)pa_start);$/;"	d
p	kernel/kernel.asm	/^  p = allocproc();$/;"	d
p	kernel/kernel.asm	/^  p = myproc();$/;"	d
p	user/bigfile.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/cat.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/echo.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/grep.asm	/^      p = q+1;$/;"	d
p	user/grep.asm	/^    p = buf;$/;"	d
p	user/grep.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/grind.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/init.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/kill.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/ln.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/ls.asm	/^    p = buf+strlen(buf);$/;"	d
p	user/ls.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/mkdir.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/rm.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/sh.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/stressfs.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/symlinktest.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/usertests.asm	/^  p = sbrk(amt);$/;"	d
p	user/usertests.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/wc.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/zombie.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
pa	kernel/kernel.asm	/^    pa = PTE2PA(*pte);$/;"	d
pa	kernel/kernel.asm	/^    pa = walkaddr(pagetable, va + i);$/;"	d
pa	kernel/kernel.asm	/^  pa = PTE2PA(*pte);$/;"	d
pa0	kernel/kernel.asm	/^    pa0 = walkaddr(pagetable, va0);$/;"	d
paddr	kernel/elf.h	/^  uint64 paddr;$/;"	m	struct:proghdr	typeref:typename:uint64
pages	kernel/virtio_disk.c	/^  char pages[2*PGSIZE];$/;"	m	struct:disk	typeref:typename:char[]	file:
pagetable	kernel/kernel.asm	/^      pagetable = (pagetable_t)PTE2PA(*pte);$/;"	d
pagetable	kernel/kernel.asm	/^  pagetable = (pagetable_t) kalloc();$/;"	d
pagetable	kernel/kernel.asm	/^  pagetable = uvmcreate();$/;"	d
pagetable	kernel/proc.h	/^  pagetable_t pagetable;       \/\/ User page table$/;"	m	struct:proc	typeref:typename:pagetable_t
pagetable_t	kernel/kernel.asm	/^pagetable_t$/;"	l
pagetable_t	kernel/riscv.h	/^typedef uint64 *pagetable_t; \/\/ 512 PTEs$/;"	t	typeref:typename:uint64 *
panic	kernel/printf.c	/^panic(char *s)$/;"	f	typeref:typename:void
panic	user/sh.c	/^panic(char *s)$/;"	f	typeref:typename:void
panicked	kernel/kernel.asm	/^  panicked = 1; \/\/ freeze uart output from other CPUs$/;"	d
panicked	kernel/printf.c	/^volatile int panicked = 0;$/;"	v	typeref:typename:volatile int
parent	kernel/proc.h	/^  struct proc *parent;         \/\/ Parent process$/;"	m	struct:proc	typeref:struct:proc *
parseblock	user/sh.c	/^parseblock(char **ps, char *es)$/;"	f	typeref:struct:cmd *
parsecmd	user/sh.c	/^parsecmd(char *s)$/;"	f	typeref:struct:cmd *
parseexec	user/sh.c	/^parseexec(char **ps, char *es)$/;"	f	typeref:struct:cmd *
parseline	user/sh.c	/^parseline(char **ps, char *es)$/;"	f	typeref:struct:cmd *
parsepipe	user/sh.c	/^parsepipe(char **ps, char *es)$/;"	f	typeref:struct:cmd *
parseredirs	user/sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f	typeref:struct:cmd *
pattern	user/grep.asm	/^  pattern = argv[1];$/;"	d
pde_t	kernel/types.h	/^typedef uint64 pde_t;$/;"	t	typeref:typename:uint64
peek	user/sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f	typeref:typename:int
pgbug	user/usertests.c	/^pgbug(char *s)$/;"	f	typeref:typename:void
ph	Makefile	/^ph: notxv6\/ph.c$/;"	t
phentsize	kernel/elf.h	/^  ushort phentsize;$/;"	m	struct:elfhdr	typeref:typename:ushort
phnum	kernel/elf.h	/^  ushort phnum;$/;"	m	struct:elfhdr	typeref:typename:ushort
phoff	kernel/elf.h	/^  uint64 phoff;$/;"	m	struct:elfhdr	typeref:typename:uint64
pi	kernel/kernel.asm	/^  pi = 0;$/;"	d
pid	kernel/kernel.asm	/^          pid = np->pid;$/;"	d
pid	kernel/kernel.asm	/^  pid = nextpid;$/;"	d
pid	kernel/kernel.asm	/^  pid = np->pid;$/;"	d
pid	kernel/proc.h	/^  int pid;                     \/\/ Process ID$/;"	m	struct:proc	typeref:typename:int
pid	kernel/sleeplock.h	/^  int pid;           \/\/ Process holding lock$/;"	m	struct:sleeplock	typeref:typename:int
pid	user/forktest.asm	/^    pid = fork();$/;"	d
pid	user/init.asm	/^    pid = fork();$/;"	d
pid	user/sh.asm	/^  pid = fork();$/;"	d
pid	user/symlinktest.asm	/^    pid = fork();$/;"	d
pid	user/usertests.asm	/^    pid = fork();$/;"	d
pid	user/usertests.asm	/^  pid = fork();$/;"	d
pid1	user/usertests.asm	/^  pid1 = fork();$/;"	d
pid2	user/usertests.asm	/^  pid2 = fork();$/;"	d
pid3	user/usertests.asm	/^  pid3 = fork();$/;"	d
pid_lock	kernel/proc.c	/^struct spinlock pid_lock;$/;"	v	typeref:struct:spinlock
ping	Makefile	/^ping:$/;"	t
pipe	kernel/file.h	/^  struct pipe *pipe; \/\/ FD_PIPE$/;"	m	struct:file	typeref:struct:pipe *
pipe	kernel/pipe.c	/^struct pipe {$/;"	s	file:
pipe	user/bigfile.asm	/^pipe:$/;"	l
pipe	user/cat.asm	/^pipe:$/;"	l
pipe	user/echo.asm	/^pipe:$/;"	l
pipe	user/forktest.asm	/^pipe:$/;"	l
pipe	user/grep.asm	/^pipe:$/;"	l
pipe	user/grind.asm	/^pipe:$/;"	l
pipe	user/init.asm	/^pipe:$/;"	l
pipe	user/kill.asm	/^pipe:$/;"	l
pipe	user/ln.asm	/^pipe:$/;"	l
pipe	user/ls.asm	/^pipe:$/;"	l
pipe	user/mkdir.asm	/^pipe:$/;"	l
pipe	user/rm.asm	/^pipe:$/;"	l
pipe	user/sh.asm	/^pipe:$/;"	l
pipe	user/stressfs.asm	/^pipe:$/;"	l
pipe	user/symlinktest.asm	/^pipe:$/;"	l
pipe	user/usertests.asm	/^pipe:$/;"	l
pipe	user/usys.S	/^pipe:$/;"	l
pipe	user/wc.asm	/^pipe:$/;"	l
pipe	user/zombie.asm	/^pipe:$/;"	l
pipe1	user/usertests.c	/^pipe1(char *s)$/;"	f	typeref:typename:void
pipealloc	kernel/pipe.c	/^pipealloc(struct file **f0, struct file **f1)$/;"	f	typeref:typename:int
pipeclose	kernel/pipe.c	/^pipeclose(struct pipe *pi, int writable)$/;"	f	typeref:typename:void
pipecmd	user/sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f	typeref:struct:cmd *
pipecmd	user/sh.c	/^struct pipecmd {$/;"	s	file:
piperead	kernel/pipe.c	/^piperead(struct pipe *pi, uint64 addr, int n)$/;"	f	typeref:typename:int
pipewrite	kernel/pipe.c	/^pipewrite(struct pipe *pi, uint64 addr, int n)$/;"	f	typeref:typename:int
plic_claim	kernel/plic.c	/^plic_claim(void)$/;"	f	typeref:typename:int
plic_complete	kernel/plic.c	/^plic_complete(int irq)$/;"	f	typeref:typename:void
plicinit	kernel/plic.c	/^plicinit(void)$/;"	f	typeref:typename:void
plicinithart	kernel/plic.c	/^plicinithart(void)$/;"	f	typeref:typename:void
pop_off	kernel/spinlock.c	/^pop_off(void)$/;"	f	typeref:typename:void
post_make	gradelib.py	/^def post_make():$/;"	f
pr	kernel/printf.c	/^} pr;$/;"	v	typeref:struct:__anonef4e5b790108
pre_make	gradelib.py	/^def pre_make():$/;"	f
preempt	user/usertests.c	/^preempt(char *s)$/;"	f	typeref:typename:void
prev	kernel/buf.h	/^  struct buf *prev; \/\/ LRU cache list$/;"	m	struct:buf	typeref:struct:buf *
print	user/forktest.c	/^print(const char *s)$/;"	f	typeref:typename:void
print-gdbport	Makefile	/^print-gdbport:$/;"	t
printf	kernel/printf.c	/^printf(char *fmt, ...)$/;"	f	typeref:typename:void
printf	user/printf.c	/^printf(const char *fmt, ...)$/;"	f	typeref:typename:void
printfinit	kernel/printf.c	/^printfinit(void)$/;"	f	typeref:typename:void
printint	kernel/printf.c	/^printint(int xx, int base, int sign)$/;"	f	typeref:typename:void	file:
printint	user/printf.c	/^printint(int fd, int xx, int base, int sgn)$/;"	f	typeref:typename:void	file:
printptr	kernel/printf.c	/^printptr(uint64 x)$/;"	f	typeref:typename:void	file:
printptr	user/printf.c	/^printptr(int fd, uint64 x) {$/;"	f	typeref:typename:void	file:
proc	kernel/proc.c	/^struct proc proc[NPROC];$/;"	v	typeref:struct:proc[]
proc	kernel/proc.h	/^  struct proc *proc;          \/\/ The process running on this cpu, or null.$/;"	m	struct:cpu	typeref:struct:proc *
proc	kernel/proc.h	/^struct proc {$/;"	s
proc_freepagetable	kernel/proc.c	/^proc_freepagetable(pagetable_t pagetable, uint64 sz)$/;"	f	typeref:typename:void
proc_mapstacks	kernel/proc.c	/^proc_mapstacks(pagetable_t kpgtbl) {$/;"	f	typeref:typename:void
proc_pagetable	kernel/proc.c	/^proc_pagetable(struct proc *p)$/;"	f	typeref:typename:pagetable_t
procdump	kernel/proc.c	/^procdump(void)$/;"	f	typeref:typename:void
procinit	kernel/proc.c	/^procinit(void)$/;"	f	typeref:typename:void
procstate	kernel/proc.h	/^enum procstate { UNUSED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	g
proghdr	kernel/elf.h	/^struct proghdr {$/;"	s
pte	kernel/kernel.asm	/^  pte = walk(pagetable, va, 0);$/;"	d
pte_t	kernel/kernel.asm	/^pte_t *$/;"	l
pte_t	kernel/riscv.h	/^typedef uint64 pte_t;$/;"	t	typeref:typename:uint64
ptr	user/umalloc.c	/^    union header *ptr;$/;"	m	struct:header::__anon3d351ad10108	typeref:union:header *	file:
push_off	kernel/spinlock.c	/^push_off(void)$/;"	f	typeref:typename:void
putc	user/printf.c	/^putc(int fd, char c)$/;"	f	typeref:typename:void	file:
qemu	Makefile	/^qemu: $K\/kernel fs.img$/;"	t
qemu-gdb	Makefile	/^qemu-gdb: $K\/kernel .gdbinit fs.img$/;"	t
r	grade-lab-fs	/^r = Runner(save("xv6.out"))$/;"	v
r	kernel/console.c	/^  uint r;  \/\/ Read index$/;"	m	struct:__anonb6393d190108	typeref:typename:uint	file:
r	kernel/kernel.asm	/^    r = devsw[f->major].read(1, addr, n);$/;"	d
r	kernel/kernel.asm	/^    r = piperead(f->pipe, addr, n);$/;"	d
r	kernel/kernel.asm	/^  r = (lk->locked && lk->cpu == mycpu());$/;"	d
r	kernel/kernel.asm	/^  r = (struct run*)pa;$/;"	d
r	kernel/kernel.asm	/^  r = kmem.freelist;$/;"	d
r	kernel/kernel.asm	/^  r = lk->locked && (lk->pid == myproc()->pid);$/;"	d
r	user/bigfile.asm	/^  r = fstat(fd, st);$/;"	d
r	user/cat.asm	/^  r = fstat(fd, st);$/;"	d
r	user/echo.asm	/^  r = fstat(fd, st);$/;"	d
r	user/forktest.asm	/^  r = fstat(fd, st);$/;"	d
r	user/grep.asm	/^  r = fstat(fd, st);$/;"	d
r	user/grind.asm	/^  r = fstat(fd, st);$/;"	d
r	user/init.asm	/^  r = fstat(fd, st);$/;"	d
r	user/kill.asm	/^  r = fstat(fd, st);$/;"	d
r	user/ln.asm	/^  r = fstat(fd, st);$/;"	d
r	user/ls.asm	/^  r = fstat(fd, st);$/;"	d
r	user/mkdir.asm	/^  r = fstat(fd, st);$/;"	d
r	user/rm.asm	/^  r = fstat(fd, st);$/;"	d
r	user/sh.asm	/^  r = fstat(fd, st);$/;"	d
r	user/stressfs.asm	/^  r = fstat(fd, st);$/;"	d
r	user/symlinktest.asm	/^  r = fstat(fd, st);$/;"	d
r	user/symlinktest.asm	/^  r = open("\/testsymlink\/b", O_RDWR);$/;"	d
r	user/symlinktest.asm	/^  r = read(fd1, &c2, 1);$/;"	d
r	user/symlinktest.asm	/^  r = symlink("\/testsymlink\/2", "\/testsymlink\/1");$/;"	d
r	user/symlinktest.asm	/^  r = symlink("\/testsymlink\/3", "\/testsymlink\/2");$/;"	d
r	user/symlinktest.asm	/^  r = symlink("\/testsymlink\/4", "\/testsymlink\/3");$/;"	d
r	user/symlinktest.asm	/^  r = symlink("\/testsymlink\/a", "\/testsymlink\/b");$/;"	d
r	user/symlinktest.asm	/^  r = symlink("\/testsymlink\/b", "\/testsymlink\/a");$/;"	d
r	user/symlinktest.asm	/^  r = symlink("\/testsymlink\/nonexistent", "\/testsymlink\/c");$/;"	d
r	user/symlinktest.asm	/^  r = write(fd2, &c, 1);$/;"	d
r	user/usertests.asm	/^  r = fstat(fd, st);$/;"	d
r	user/wc.asm	/^  r = fstat(fd, st);$/;"	d
r	user/zombie.asm	/^  r = fstat(fd, st);$/;"	d
r_mcounteren	kernel/riscv.h	/^r_mcounteren()$/;"	f	typeref:typename:uint64
r_medeleg	kernel/riscv.h	/^r_medeleg()$/;"	f	typeref:typename:uint64
r_mhartid	kernel/riscv.h	/^r_mhartid()$/;"	f	typeref:typename:uint64
r_mideleg	kernel/riscv.h	/^r_mideleg()$/;"	f	typeref:typename:uint64
r_mie	kernel/riscv.h	/^r_mie()$/;"	f	typeref:typename:uint64
r_mstatus	kernel/riscv.h	/^r_mstatus()$/;"	f	typeref:typename:uint64
r_ra	kernel/riscv.h	/^r_ra()$/;"	f	typeref:typename:uint64
r_satp	kernel/riscv.h	/^r_satp()$/;"	f	typeref:typename:uint64
r_scause	kernel/riscv.h	/^r_scause()$/;"	f	typeref:typename:uint64
r_sepc	kernel/riscv.h	/^r_sepc()$/;"	f	typeref:typename:uint64
r_sie	kernel/riscv.h	/^r_sie()$/;"	f	typeref:typename:uint64
r_sip	kernel/riscv.h	/^r_sip()$/;"	f	typeref:typename:uint64
r_sp	kernel/riscv.h	/^r_sp()$/;"	f	typeref:typename:uint64
r_sstatus	kernel/riscv.h	/^r_sstatus()$/;"	f	typeref:typename:uint64
r_stval	kernel/riscv.h	/^r_stval()$/;"	f	typeref:typename:uint64
r_stvec	kernel/riscv.h	/^r_stvec()$/;"	f	typeref:typename:uint64
r_time	kernel/riscv.h	/^r_time()$/;"	f	typeref:typename:uint64
r_tp	kernel/riscv.h	/^r_tp()$/;"	f	typeref:typename:uint64
ra	kernel/proc.h	/^  \/*  40 *\/ uint64 ra;$/;"	m	struct:trapframe	typeref:typename:uint64
ra	kernel/proc.h	/^  uint64 ra;$/;"	m	struct:context	typeref:typename:uint64
ramdiskinit	kernel/ramdisk.c	/^ramdiskinit(void)$/;"	f	typeref:typename:void
ramdiskrw	kernel/ramdisk.c	/^ramdiskrw(struct buf *b)$/;"	f	typeref:typename:void
rand	user/grind.c	/^rand(void)$/;"	f	typeref:typename:int
rand	user/usertests.c	/^rand()$/;"	f	typeref:typename:unsigned int
rand_next	user/grind.asm	/^    rand_next = 31;$/;"	d
rand_next	user/grind.asm	/^    rand_next = 7177;$/;"	d
rand_next	user/grind.c	/^unsigned long rand_next = 1;$/;"	v	typeref:typename:unsigned long
random_str	gradelib.py	/^def random_str(n=8):$/;"	f
randstate	user/usertests.asm	/^  randstate = randstate * 1664525 + 1013904223;$/;"	d
randstate	user/usertests.c	/^unsigned long randstate = 1;$/;"	v	typeref:typename:unsigned long
rcmd	user/sh.asm	/^    rcmd = (struct redircmd*)cmd;$/;"	d
read	kernel/file.h	/^  int (*read)(int, uint64, int);$/;"	m	struct:devsw	typeref:typename:int (*)(int,uint64,int)
read	user/bigfile.asm	/^read:$/;"	l
read	user/cat.asm	/^read:$/;"	l
read	user/echo.asm	/^read:$/;"	l
read	user/forktest.asm	/^read:$/;"	l
read	user/grep.asm	/^read:$/;"	l
read	user/grind.asm	/^read:$/;"	l
read	user/init.asm	/^read:$/;"	l
read	user/kill.asm	/^read:$/;"	l
read	user/ln.asm	/^read:$/;"	l
read	user/ls.asm	/^read:$/;"	l
read	user/mkdir.asm	/^read:$/;"	l
read	user/rm.asm	/^read:$/;"	l
read	user/sh.asm	/^read:$/;"	l
read	user/stressfs.asm	/^read:$/;"	l
read	user/symlinktest.asm	/^read:$/;"	l
read	user/usertests.asm	/^read:$/;"	l
read	user/usys.S	/^read:$/;"	l
read	user/wc.asm	/^read:$/;"	l
read	user/zombie.asm	/^read:$/;"	l
read_head	kernel/log.c	/^read_head(void)$/;"	f	typeref:typename:void	file:
readable	kernel/file.h	/^  char readable;$/;"	m	struct:file	typeref:typename:char
readi	kernel/fs.c	/^readi(struct inode *ip, int user_dst, uint64 dst, uint off, uint n)$/;"	f	typeref:typename:int
readopen	kernel/pipe.c	/^  int readopen;   \/\/ read fd is still open$/;"	m	struct:pipe	typeref:typename:int	file:
readsb	kernel/fs.c	/^readsb(int dev, struct superblock *sb)$/;"	f	typeref:typename:void	file:
recover_from_log	kernel/log.c	/^recover_from_log(void)$/;"	f	typeref:typename:void	file:
redircmd	user/sh.c	/^redircmd(struct cmd *subcmd, char *file, char *efile, int mode, int fd)$/;"	f	typeref:struct:cmd *
redircmd	user/sh.c	/^struct redircmd {$/;"	s	file:
ref	kernel/file.h	/^  int ref;            \/\/ Reference count$/;"	m	struct:inode	typeref:typename:int
ref	kernel/file.h	/^  int ref; \/\/ reference count$/;"	m	struct:file	typeref:typename:int
refcnt	kernel/buf.h	/^  uint refcnt;$/;"	m	struct:buf	typeref:typename:uint
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	file:
release	kernel/spinlock.c	/^release(struct spinlock *lk)$/;"	f	typeref:typename:void
releasesleep	kernel/sleeplock.c	/^releasesleep(struct sleeplock *lk)$/;"	f	typeref:typename:void
reparent	kernel/proc.c	/^reparent(struct proc *p)$/;"	f	typeref:typename:void
reparent	user/usertests.c	/^reparent(char *s)$/;"	f	typeref:typename:void
reparent2	user/usertests.c	/^reparent2(char *s)$/;"	f	typeref:typename:void
reserved	kernel/virtio.h	/^  uint32 reserved;$/;"	m	struct:virtio_blk_req	typeref:typename:uint32
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
ret	kernel/kernel.asm	/^    ret = (i == n ? n : -1);$/;"	d
ret	kernel/kernel.asm	/^    ret = devsw[f->major].write(1, addr, n);$/;"	d
ret	kernel/kernel.asm	/^    ret = pipewrite(f->pipe, addr, n);$/;"	d
ret	user/sh.asm	/^      ret = '+';$/;"	d
ret	user/sh.asm	/^    ret = 'a';$/;"	d
ret	user/sh.asm	/^    ret = parseredirs(ret, ps, es);$/;"	d
ret	user/sh.asm	/^  ret = *s;$/;"	d
ret	user/sh.asm	/^  ret = execcmd();$/;"	d
ret	user/sh.asm	/^  ret = parseredirs(ret, ps, es);$/;"	d
ret	user/usertests.asm	/^    ret = exec("echo", args2);$/;"	d
ret	user/usertests.asm	/^  ret = exec(b, args);$/;"	d
ret	user/usertests.asm	/^  ret = link(b, b);$/;"	d
right	user/sh.c	/^  struct cmd *right;$/;"	m	struct:listcmd	typeref:struct:cmd *	file:
right	user/sh.c	/^  struct cmd *right;$/;"	m	struct:pipecmd	typeref:struct:cmd *	file:
ring	kernel/virtio.h	/^  struct virtq_used_elem ring[NUM];$/;"	m	struct:virtq_used	typeref:struct:virtq_used_elem[]
ring	kernel/virtio.h	/^  uint16 ring[NUM]; \/\/ descriptor numbers of chain heads$/;"	m	struct:virtq_avail	typeref:typename:uint16[]
rinode	mkfs/mkfs.c	/^rinode(uint inum, struct dinode *ip)$/;"	f	typeref:typename:void
rmdot	user/usertests.c	/^rmdot(char *s)$/;"	f	typeref:typename:void
rsect	mkfs/mkfs.c	/^rsect(uint sec, void *buf)$/;"	f	typeref:typename:void
rtcdate	kernel/date.h	/^struct rtcdate {$/;"	s
run	kernel/kalloc.c	/^struct run {$/;"	s	file:
run	user/usertests.c	/^run(void f(char *), char *s) {$/;"	f	typeref:typename:int
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	member:Runner.run_qemu	file:
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	file:
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	user/sh.c	/^runcmd(struct cmd *cmd)$/;"	f	typeref:typename:void
rwsbrk	user/usertests.c	/^rwsbrk()$/;"	f	typeref:typename:void
s	kernel/kernel.asm	/^        s = "(null)";$/;"	d
s	kernel/kernel.asm	/^  s = src;$/;"	d
s	user/bigfile.asm	/^          s = "(null)";$/;"	d
s	user/bigfile.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/cat.asm	/^          s = "(null)";$/;"	d
s	user/cat.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/echo.asm	/^          s = "(null)";$/;"	d
s	user/echo.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/grep.asm	/^          s = "(null)";$/;"	d
s	user/grep.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/grind.asm	/^          s = "(null)";$/;"	d
s	user/grind.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/init.asm	/^          s = "(null)";$/;"	d
s	user/init.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/kill.asm	/^          s = "(null)";$/;"	d
s	user/kill.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/ln.asm	/^          s = "(null)";$/;"	d
s	user/ln.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/ls.asm	/^          s = "(null)";$/;"	d
s	user/ls.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/mkdir.asm	/^          s = "(null)";$/;"	d
s	user/mkdir.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/rm.asm	/^          s = "(null)";$/;"	d
s	user/rm.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/sh.asm	/^          s = "(null)";$/;"	d
s	user/sh.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/sh.asm	/^  s = *ps;$/;"	d
s	user/stressfs.asm	/^          s = "(null)";$/;"	d
s	user/stressfs.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/symlinktest.asm	/^          s = "(null)";$/;"	d
s	user/symlinktest.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/umalloc.c	/^  } s;$/;"	m	union:header	typeref:struct:header::__anon3d351ad10108	file:
s	user/usertests.asm	/^          s = "(null)";$/;"	d
s	user/usertests.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/usertests.c	/^    char *s;$/;"	m	struct:main::test	typeref:typename:char *	file:
s	user/wc.asm	/^          s = "(null)";$/;"	d
s	user/wc.asm	/^        s = va_arg(ap, char*);$/;"	d
s	user/zombie.asm	/^          s = "(null)";$/;"	d
s	user/zombie.asm	/^        s = va_arg(ap, char*);$/;"	d
s0	kernel/proc.h	/^  \/*  96 *\/ uint64 s0;$/;"	m	struct:trapframe	typeref:typename:uint64
s0	kernel/proc.h	/^  uint64 s0;$/;"	m	struct:context	typeref:typename:uint64
s1	kernel/kernel.asm	/^  s1 = v1;$/;"	d
s1	kernel/proc.h	/^  \/* 104 *\/ uint64 s1;$/;"	m	struct:trapframe	typeref:typename:uint64
s1	kernel/proc.h	/^  uint64 s1;$/;"	m	struct:context	typeref:typename:uint64
s10	kernel/proc.h	/^  \/* 240 *\/ uint64 s10;$/;"	m	struct:trapframe	typeref:typename:uint64
s10	kernel/proc.h	/^  uint64 s10;$/;"	m	struct:context	typeref:typename:uint64
s11	kernel/proc.h	/^  \/* 248 *\/ uint64 s11;$/;"	m	struct:trapframe	typeref:typename:uint64
s11	kernel/proc.h	/^  uint64 s11;$/;"	m	struct:context	typeref:typename:uint64
s2	kernel/kernel.asm	/^  s2 = v2;$/;"	d
s2	kernel/proc.h	/^  \/* 176 *\/ uint64 s2;$/;"	m	struct:trapframe	typeref:typename:uint64
s2	kernel/proc.h	/^  uint64 s2;$/;"	m	struct:context	typeref:typename:uint64
s3	kernel/proc.h	/^  \/* 184 *\/ uint64 s3;$/;"	m	struct:trapframe	typeref:typename:uint64
s3	kernel/proc.h	/^  uint64 s3;$/;"	m	struct:context	typeref:typename:uint64
s4	kernel/proc.h	/^  \/* 192 *\/ uint64 s4;$/;"	m	struct:trapframe	typeref:typename:uint64
s4	kernel/proc.h	/^  uint64 s4;$/;"	m	struct:context	typeref:typename:uint64
s5	kernel/proc.h	/^  \/* 200 *\/ uint64 s5;$/;"	m	struct:trapframe	typeref:typename:uint64
s5	kernel/proc.h	/^  uint64 s5;$/;"	m	struct:context	typeref:typename:uint64
s6	kernel/proc.h	/^  \/* 208 *\/ uint64 s6;$/;"	m	struct:trapframe	typeref:typename:uint64
s6	kernel/proc.h	/^  uint64 s6;$/;"	m	struct:context	typeref:typename:uint64
s7	kernel/proc.h	/^  \/* 216 *\/ uint64 s7;$/;"	m	struct:trapframe	typeref:typename:uint64
s7	kernel/proc.h	/^  uint64 s7;$/;"	m	struct:context	typeref:typename:uint64
s8	kernel/proc.h	/^  \/* 224 *\/ uint64 s8;$/;"	m	struct:trapframe	typeref:typename:uint64
s8	kernel/proc.h	/^  uint64 s8;$/;"	m	struct:context	typeref:typename:uint64
s9	kernel/proc.h	/^  \/* 232 *\/ uint64 s9;$/;"	m	struct:trapframe	typeref:typename:uint64
s9	kernel/proc.h	/^  uint64 s9;$/;"	m	struct:context	typeref:typename:uint64
safestrcpy	kernel/string.c	/^safestrcpy(char *s, const char *t, int n)$/;"	f	typeref:typename:char *
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	file:
sb	kernel/fs.c	/^struct superblock sb; $/;"	v	typeref:struct:superblock
sb	mkfs/mkfs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sbrk	user/bigfile.asm	/^sbrk:$/;"	l
sbrk	user/cat.asm	/^sbrk:$/;"	l
sbrk	user/echo.asm	/^sbrk:$/;"	l
sbrk	user/forktest.asm	/^sbrk:$/;"	l
sbrk	user/grep.asm	/^sbrk:$/;"	l
sbrk	user/grind.asm	/^sbrk:$/;"	l
sbrk	user/init.asm	/^sbrk:$/;"	l
sbrk	user/kill.asm	/^sbrk:$/;"	l
sbrk	user/ln.asm	/^sbrk:$/;"	l
sbrk	user/ls.asm	/^sbrk:$/;"	l
sbrk	user/mkdir.asm	/^sbrk:$/;"	l
sbrk	user/rm.asm	/^sbrk:$/;"	l
sbrk	user/sh.asm	/^sbrk:$/;"	l
sbrk	user/stressfs.asm	/^sbrk:$/;"	l
sbrk	user/symlinktest.asm	/^sbrk:$/;"	l
sbrk	user/usertests.asm	/^sbrk:$/;"	l
sbrk	user/usys.S	/^sbrk:$/;"	l
sbrk	user/wc.asm	/^sbrk:$/;"	l
sbrk	user/zombie.asm	/^sbrk:$/;"	l
sbrkarg	user/usertests.c	/^sbrkarg(char *s)$/;"	f	typeref:typename:void
sbrkbasic	user/usertests.c	/^sbrkbasic(char *s)$/;"	f	typeref:typename:void
sbrkbugs	user/usertests.c	/^sbrkbugs(char *s)$/;"	f	typeref:typename:void
sbrkfail	user/usertests.c	/^sbrkfail(char *s)$/;"	f	typeref:typename:void
sbrkmuch	user/usertests.c	/^sbrkmuch(char *s)$/;"	f	typeref:typename:void
sched	kernel/proc.c	/^sched(void)$/;"	f	typeref:typename:void
scheduler	kernel/proc.c	/^scheduler(void)$/;"	f	typeref:typename:void
second	kernel/date.h	/^  uint second;$/;"	m	struct:rtcdate	typeref:typename:uint
sector	kernel/virtio.h	/^  uint64 sector;$/;"	m	struct:virtio_blk_req	typeref:typename:uint64
server	Makefile	/^server:$/;"	t
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	file:
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	file:
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:shell_script	file:
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	file:
sfence_vma	kernel/riscv.h	/^sfence_vma()$/;"	f	typeref:typename:void
sharedfd	user/usertests.c	/^sharedfd(char *s)$/;"	f	typeref:typename:void
shell_script	gradelib.py	/^def shell_script(script, terminate_match=None):$/;"	f
shentsize	kernel/elf.h	/^  ushort shentsize;$/;"	m	struct:elfhdr	typeref:typename:ushort
shnum	kernel/elf.h	/^  ushort shnum;$/;"	m	struct:elfhdr	typeref:typename:ushort
shoff	kernel/elf.h	/^  uint64 shoff;$/;"	m	struct:elfhdr	typeref:typename:uint64
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	file:
shstrndx	kernel/elf.h	/^  ushort shstrndx;$/;"	m	struct:elfhdr	typeref:typename:ushort
size	kernel/file.h	/^  uint size;$/;"	m	struct:inode	typeref:typename:uint
size	kernel/fs.h	/^  uint size;            \/\/ Size of file (bytes)$/;"	m	struct:dinode	typeref:typename:uint
size	kernel/fs.h	/^  uint size;         \/\/ Size of file system image (blocks)$/;"	m	struct:superblock	typeref:typename:uint
size	kernel/log.c	/^  int size;$/;"	m	struct:log	typeref:typename:int	file:
size	kernel/stat.h	/^  uint64 size; \/\/ Size of file in bytes$/;"	m	struct:stat	typeref:typename:uint64
size	user/umalloc.c	/^    uint size;$/;"	m	struct:header::__anon3d351ad10108	typeref:typename:uint	file:
skipelem	kernel/fs.c	/^skipelem(char *path, char *name)$/;"	f	typeref:typename:char *	file:
sleep	kernel/proc.c	/^sleep(void *chan, struct spinlock *lk)$/;"	f	typeref:typename:void
sleep	user/bigfile.asm	/^sleep:$/;"	l
sleep	user/cat.asm	/^sleep:$/;"	l
sleep	user/echo.asm	/^sleep:$/;"	l
sleep	user/forktest.asm	/^sleep:$/;"	l
sleep	user/grep.asm	/^sleep:$/;"	l
sleep	user/grind.asm	/^sleep:$/;"	l
sleep	user/init.asm	/^sleep:$/;"	l
sleep	user/kill.asm	/^sleep:$/;"	l
sleep	user/ln.asm	/^sleep:$/;"	l
sleep	user/ls.asm	/^sleep:$/;"	l
sleep	user/mkdir.asm	/^sleep:$/;"	l
sleep	user/rm.asm	/^sleep:$/;"	l
sleep	user/sh.asm	/^sleep:$/;"	l
sleep	user/stressfs.asm	/^sleep:$/;"	l
sleep	user/symlinktest.asm	/^sleep:$/;"	l
sleep	user/usertests.asm	/^sleep:$/;"	l
sleep	user/usys.S	/^sleep:$/;"	l
sleep	user/wc.asm	/^sleep:$/;"	l
sleep	user/zombie.asm	/^sleep:$/;"	l
sleeplock	kernel/sleeplock.h	/^struct sleeplock {$/;"	s
sp	kernel/kernel.asm	/^  sp = sz;$/;"	d
sp	kernel/proc.h	/^  \/*  48 *\/ uint64 sp;$/;"	m	struct:trapframe	typeref:typename:uint64
sp	kernel/proc.h	/^  uint64 sp;$/;"	m	struct:context	typeref:typename:uint64
spin	kernel/entry.S	/^spin:$/;"	l
spinlock	kernel/spinlock.h	/^struct spinlock {$/;"	s
src	user/bigfile.asm	/^  src = vsrc;$/;"	d
src	user/cat.asm	/^  src = vsrc;$/;"	d
src	user/echo.asm	/^  src = vsrc;$/;"	d
src	user/forktest.asm	/^  src = vsrc;$/;"	d
src	user/grep.asm	/^  src = vsrc;$/;"	d
src	user/grind.asm	/^  src = vsrc;$/;"	d
src	user/init.asm	/^  src = vsrc;$/;"	d
src	user/kill.asm	/^  src = vsrc;$/;"	d
src	user/ln.asm	/^  src = vsrc;$/;"	d
src	user/ls.asm	/^  src = vsrc;$/;"	d
src	user/mkdir.asm	/^  src = vsrc;$/;"	d
src	user/rm.asm	/^  src = vsrc;$/;"	d
src	user/sh.asm	/^  src = vsrc;$/;"	d
src	user/stressfs.asm	/^  src = vsrc;$/;"	d
src	user/symlinktest.asm	/^  src = vsrc;$/;"	d
src	user/usertests.asm	/^  src = vsrc;$/;"	d
src	user/wc.asm	/^  src = vsrc;$/;"	d
src	user/zombie.asm	/^  src = vsrc;$/;"	d
srcva	kernel/kernel.asm	/^    srcva = va0 + PGSIZE;$/;"	d
stack0	kernel/start.c	/^__attribute__ ((aligned (16))) char stack0[4096 * NCPU];$/;"	v	typeref:typename:char[]
stackbase	kernel/kernel.asm	/^  stackbase = sp - PGSIZE;$/;"	d
stacktest	user/usertests.c	/^stacktest(char *s)$/;"	f	typeref:typename:void
start	kernel/log.c	/^  int start;$/;"	m	struct:log	typeref:typename:int	file:
start	kernel/start.c	/^start()$/;"	f	typeref:typename:void
start	user/initcode.S	/^start:$/;"	l
start	user/initcode.asm	/^start:$/;"	l
started	kernel/kernel.asm	/^    started = 1;$/;"	d
started	kernel/main.c	/^volatile static int started = 0;$/;"	v	typeref:typename:volatile int	file:
stat	kernel/stat.h	/^struct stat {$/;"	s
stat	mkfs/mkfs.c	/^#define stat /;"	d	file:
stat	user/ulib.c	/^stat(const char *n, struct stat *st)$/;"	f	typeref:typename:int
stat_slink	user/symlinktest.c	/^stat_slink(char *pn, struct stat *st)$/;"	f	typeref:typename:int	file:
state	kernel/kernel.asm	/^      state = "???";$/;"	d
state	kernel/kernel.asm	/^      state = states[p->state];$/;"	d
state	kernel/proc.h	/^  enum procstate state;        \/\/ Process state$/;"	m	struct:proc	typeref:enum:procstate
state	user/bigfile.asm	/^        state = '%';$/;"	d
state	user/bigfile.asm	/^      state = 0;$/;"	d
state	user/bigfile.asm	/^  state = 0;$/;"	d
state	user/cat.asm	/^        state = '%';$/;"	d
state	user/cat.asm	/^      state = 0;$/;"	d
state	user/cat.asm	/^  state = 0;$/;"	d
state	user/echo.asm	/^        state = '%';$/;"	d
state	user/echo.asm	/^      state = 0;$/;"	d
state	user/echo.asm	/^  state = 0;$/;"	d
state	user/grep.asm	/^        state = '%';$/;"	d
state	user/grep.asm	/^      state = 0;$/;"	d
state	user/grep.asm	/^  state = 0;$/;"	d
state	user/grind.asm	/^        state = '%';$/;"	d
state	user/grind.asm	/^      state = 0;$/;"	d
state	user/grind.asm	/^  state = 0;$/;"	d
state	user/init.asm	/^        state = '%';$/;"	d
state	user/init.asm	/^      state = 0;$/;"	d
state	user/init.asm	/^  state = 0;$/;"	d
state	user/kill.asm	/^        state = '%';$/;"	d
state	user/kill.asm	/^      state = 0;$/;"	d
state	user/kill.asm	/^  state = 0;$/;"	d
state	user/ln.asm	/^        state = '%';$/;"	d
state	user/ln.asm	/^      state = 0;$/;"	d
state	user/ln.asm	/^  state = 0;$/;"	d
state	user/ls.asm	/^        state = '%';$/;"	d
state	user/ls.asm	/^      state = 0;$/;"	d
state	user/ls.asm	/^  state = 0;$/;"	d
state	user/mkdir.asm	/^        state = '%';$/;"	d
state	user/mkdir.asm	/^      state = 0;$/;"	d
state	user/mkdir.asm	/^  state = 0;$/;"	d
state	user/rm.asm	/^        state = '%';$/;"	d
state	user/rm.asm	/^      state = 0;$/;"	d
state	user/rm.asm	/^  state = 0;$/;"	d
state	user/sh.asm	/^        state = '%';$/;"	d
state	user/sh.asm	/^      state = 0;$/;"	d
state	user/sh.asm	/^  state = 0;$/;"	d
state	user/stressfs.asm	/^        state = '%';$/;"	d
state	user/stressfs.asm	/^      state = 0;$/;"	d
state	user/stressfs.asm	/^  state = 0;$/;"	d
state	user/symlinktest.asm	/^        state = '%';$/;"	d
state	user/symlinktest.asm	/^      state = 0;$/;"	d
state	user/symlinktest.asm	/^  state = 0;$/;"	d
state	user/usertests.asm	/^        state = '%';$/;"	d
state	user/usertests.asm	/^      state = 0;$/;"	d
state	user/usertests.asm	/^  state = 0;$/;"	d
state	user/wc.asm	/^        state = '%';$/;"	d
state	user/wc.asm	/^      state = 0;$/;"	d
state	user/wc.asm	/^  state = 0;$/;"	d
state	user/zombie.asm	/^        state = '%';$/;"	d
state	user/zombie.asm	/^      state = 0;$/;"	d
state	user/zombie.asm	/^  state = 0;$/;"	d
stati	kernel/fs.c	/^stati(struct inode *ip, struct stat *st)$/;"	f	typeref:typename:void
static	kernel/kernel.asm	/^static char digits[] = "0123456789abcdef";$/;"	l
static	kernel/kernel.asm	/^static inline uint64$/;"	l
static	kernel/kernel.asm	/^static inline void $/;"	l
static	kernel/kernel.asm	/^static inline void$/;"	l
static	kernel/kernel.asm	/^static int loadseg(pde_t *pgdir, uint64 addr, struct inode *ip, uint offset, uint sz);$/;"	l
static	kernel/kernel.asm	/^static int$/;"	l
static	kernel/kernel.asm	/^static struct inode*$/;"	t
static	kernel/kernel.asm	/^static uint$/;"	l
static	kernel/kernel.asm	/^static uint64$/;"	l
static	kernel/kernel.asm	/^static void$/;"	l
static	user/bigfile.asm	/^static Header *freep;$/;"	l
static	user/bigfile.asm	/^static Header base;$/;"	l
static	user/bigfile.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/bigfile.asm	/^static void$/;"	l
static	user/cat.asm	/^static Header *freep;$/;"	l
static	user/cat.asm	/^static Header base;$/;"	l
static	user/cat.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/cat.asm	/^static void$/;"	l
static	user/echo.asm	/^static Header *freep;$/;"	l
static	user/echo.asm	/^static Header base;$/;"	l
static	user/echo.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/echo.asm	/^static void$/;"	l
static	user/grep.asm	/^static Header *freep;$/;"	l
static	user/grep.asm	/^static Header base;$/;"	l
static	user/grep.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/grep.asm	/^static void$/;"	l
static	user/grind.asm	/^static Header *freep;$/;"	l
static	user/grind.asm	/^static Header base;$/;"	l
static	user/grind.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/grind.asm	/^static void$/;"	l
static	user/init.asm	/^static Header *freep;$/;"	l
static	user/init.asm	/^static Header base;$/;"	l
static	user/init.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/init.asm	/^static void$/;"	l
static	user/kill.asm	/^static Header *freep;$/;"	l
static	user/kill.asm	/^static Header base;$/;"	l
static	user/kill.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/kill.asm	/^static void$/;"	l
static	user/ln.asm	/^static Header *freep;$/;"	l
static	user/ln.asm	/^static Header base;$/;"	l
static	user/ln.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/ln.asm	/^static void$/;"	l
static	user/ls.asm	/^static Header *freep;$/;"	l
static	user/ls.asm	/^static Header base;$/;"	l
static	user/ls.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/ls.asm	/^static void$/;"	l
static	user/mkdir.asm	/^static Header *freep;$/;"	l
static	user/mkdir.asm	/^static Header base;$/;"	l
static	user/mkdir.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/mkdir.asm	/^static void$/;"	l
static	user/rm.asm	/^static Header *freep;$/;"	l
static	user/rm.asm	/^static Header base;$/;"	l
static	user/rm.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/rm.asm	/^static void$/;"	l
static	user/sh.asm	/^static Header *freep;$/;"	l
static	user/sh.asm	/^static Header base;$/;"	l
static	user/sh.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/sh.asm	/^static void$/;"	l
static	user/stressfs.asm	/^static Header *freep;$/;"	l
static	user/stressfs.asm	/^static Header base;$/;"	l
static	user/stressfs.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/stressfs.asm	/^static void$/;"	l
static	user/symlinktest.asm	/^static Header *freep;$/;"	l
static	user/symlinktest.asm	/^static Header base;$/;"	l
static	user/symlinktest.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/symlinktest.asm	/^static int$/;"	l
static	user/symlinktest.asm	/^static void$/;"	l
static	user/usertests.asm	/^static Header *freep;$/;"	l
static	user/usertests.asm	/^static Header base;$/;"	l
static	user/usertests.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/usertests.asm	/^static inline uint64$/;"	l
static	user/usertests.asm	/^static void$/;"	l
static	user/wc.asm	/^static Header *freep;$/;"	l
static	user/wc.asm	/^static Header base;$/;"	l
static	user/wc.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/wc.asm	/^static void$/;"	l
static	user/zombie.asm	/^static Header *freep;$/;"	l
static	user/zombie.asm	/^static Header base;$/;"	l
static	user/zombie.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/zombie.asm	/^static void$/;"	l
static_assert	mkfs/mkfs.c	/^#define static_assert(/;"	d	file:
status	kernel/virtio_disk.c	/^    char status;$/;"	m	struct:disk::__anon0ecc7a2d0108	typeref:typename:char	file:
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	file:
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
strchr	user/ulib.c	/^strchr(const char *s, char c)$/;"	f	typeref:typename:char *
strcmp	user/ulib.c	/^strcmp(const char *p, const char *q)$/;"	f	typeref:typename:int
strcpy	user/ulib.c	/^strcpy(char *s, const char *t)$/;"	f	typeref:typename:char *
strlen	kernel/string.c	/^strlen(const char *s)$/;"	f	typeref:typename:int
strlen	user/ulib.c	/^strlen(const char *s)$/;"	f	typeref:typename:uint
strncmp	kernel/string.c	/^strncmp(const char *p, const char *q, uint n)$/;"	f	typeref:typename:int
strncpy	kernel/string.c	/^strncpy(char *s, const char *t, int n)$/;"	f	typeref:typename:char *
struct	kernel/kernel.asm	/^  struct proc *original_parent = p->parent;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p = c->proc;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p = myproc();$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *pr = myproc();$/;"	l
subdir	user/usertests.c	/^subdir(char *s)$/;"	f	typeref:typename:void
superblock	kernel/fs.h	/^struct superblock {$/;"	s
swtch	kernel/swtch.S	/^swtch:$/;"	l
symbols	user/sh.c	/^char symbols[] = "<|>&;()";$/;"	v	typeref:typename:char[]
symlink	user/bigfile.asm	/^symlink:$/;"	l
symlink	user/cat.asm	/^symlink:$/;"	l
symlink	user/echo.asm	/^symlink:$/;"	l
symlink	user/forktest.asm	/^symlink:$/;"	l
symlink	user/grep.asm	/^symlink:$/;"	l
symlink	user/grind.asm	/^symlink:$/;"	l
symlink	user/init.asm	/^symlink:$/;"	l
symlink	user/kill.asm	/^symlink:$/;"	l
symlink	user/ln.asm	/^symlink:$/;"	l
symlink	user/ls.asm	/^symlink:$/;"	l
symlink	user/mkdir.asm	/^symlink:$/;"	l
symlink	user/rm.asm	/^symlink:$/;"	l
symlink	user/sh.asm	/^symlink:$/;"	l
symlink	user/stressfs.asm	/^symlink:$/;"	l
symlink	user/symlinktest.asm	/^symlink:$/;"	l
symlink	user/usertests.asm	/^symlink:$/;"	l
symlink	user/usys.S	/^symlink:$/;"	l
symlink	user/wc.asm	/^symlink:$/;"	l
symlink	user/zombie.asm	/^symlink:$/;"	l
sys_chdir	kernel/sysfile.c	/^sys_chdir(void)$/;"	f	typeref:typename:uint64
sys_close	kernel/sysfile.c	/^sys_close(void)$/;"	f	typeref:typename:uint64
sys_dup	kernel/sysfile.c	/^sys_dup(void)$/;"	f	typeref:typename:uint64
sys_exec	kernel/sysfile.c	/^sys_exec(void)$/;"	f	typeref:typename:uint64
sys_exit	kernel/sysproc.c	/^sys_exit(void)$/;"	f	typeref:typename:uint64
sys_fork	kernel/sysproc.c	/^sys_fork(void)$/;"	f	typeref:typename:uint64
sys_fstat	kernel/sysfile.c	/^sys_fstat(void)$/;"	f	typeref:typename:uint64
sys_getpid	kernel/sysproc.c	/^sys_getpid(void)$/;"	f	typeref:typename:uint64
sys_kill	kernel/sysproc.c	/^sys_kill(void)$/;"	f	typeref:typename:uint64
sys_link	kernel/sysfile.c	/^sys_link(void)$/;"	f	typeref:typename:uint64
sys_mkdir	kernel/sysfile.c	/^sys_mkdir(void)$/;"	f	typeref:typename:uint64
sys_mknod	kernel/sysfile.c	/^sys_mknod(void)$/;"	f	typeref:typename:uint64
sys_open	kernel/sysfile.c	/^sys_open(void)$/;"	f	typeref:typename:uint64
sys_pipe	kernel/sysfile.c	/^sys_pipe(void)$/;"	f	typeref:typename:uint64
sys_read	kernel/sysfile.c	/^sys_read(void)$/;"	f	typeref:typename:uint64
sys_sbrk	kernel/sysproc.c	/^sys_sbrk(void)$/;"	f	typeref:typename:uint64
sys_sleep	kernel/sysproc.c	/^sys_sleep(void)$/;"	f	typeref:typename:uint64
sys_symlink	kernel/sysfile.c	/^sys_symlink(void){$/;"	f	typeref:typename:uint64
sys_unlink	kernel/sysfile.c	/^sys_unlink(void)$/;"	f	typeref:typename:uint64
sys_uptime	kernel/sysproc.c	/^sys_uptime(void)$/;"	f	typeref:typename:uint64
sys_wait	kernel/sysproc.c	/^sys_wait(void)$/;"	f	typeref:typename:uint64
sys_write	kernel/sysfile.c	/^sys_write(void)$/;"	f	typeref:typename:uint64
syscall	kernel/syscall.c	/^syscall(void)$/;"	f	typeref:typename:void
syscalls	kernel/syscall.c	/^static uint64 (*syscalls[])(void) = {$/;"	v	typeref:typename:uint64 (* [])(void)	file:
sz	kernel/kernel.asm	/^    sz = uvmdealloc(p->pagetable, sz, sz + n);$/;"	d
sz	kernel/kernel.asm	/^  sz = PGROUNDUP(sz);$/;"	d
sz	kernel/kernel.asm	/^  sz = p->sz;$/;"	d
sz	kernel/kernel.asm	/^  sz = sz1;$/;"	d
sz	kernel/proc.h	/^  uint64 sz;                   \/\/ Size of process memory (bytes)$/;"	m	struct:proc	typeref:typename:uint64
t0	kernel/proc.h	/^  \/*  72 *\/ uint64 t0;$/;"	m	struct:trapframe	typeref:typename:uint64
t1	kernel/proc.h	/^  \/*  80 *\/ uint64 t1;$/;"	m	struct:trapframe	typeref:typename:uint64
t2	kernel/proc.h	/^  \/*  88 *\/ uint64 t2;$/;"	m	struct:trapframe	typeref:typename:uint64
t3	kernel/proc.h	/^  \/* 256 *\/ uint64 t3;$/;"	m	struct:trapframe	typeref:typename:uint64
t4	kernel/proc.h	/^  \/* 264 *\/ uint64 t4;$/;"	m	struct:trapframe	typeref:typename:uint64
t5	kernel/proc.h	/^  \/* 272 *\/ uint64 t5;$/;"	m	struct:trapframe	typeref:typename:uint64
t6	kernel/proc.h	/^  \/* 280 *\/ uint64 t6;$/;"	m	struct:trapframe	typeref:typename:uint64
tags	Makefile	/^tags: $(OBJS) _init$/;"	t
tarball	Makefile	/^tarball: handin-check$/;"	t
tarball-pref	Makefile	/^tarball-pref: handin-check$/;"	t
target	kernel/kernel.asm	/^  target = n;$/;"	d
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test	user/usertests.c	/^  struct test {$/;"	s	function:main	file:
test_bigfile	grade-lab-fs	/^def test_bigfile():$/;"	f
test_symlinktest	grade-lab-fs	/^def test_symlinktest():$/;"	f
test_symlinktest_symlinks	grade-lab-fs	/^def test_symlinktest_symlinks():$/;"	f
test_time	grade-lab-fs	/^def test_time():$/;"	f
test_usertests	grade-lab-fs	/^def test_usertests():$/;"	f
testsymlink	user/symlinktest.c	/^testsymlink(void)$/;"	f	typeref:typename:void	file:
ticks	kernel/trap.c	/^uint ticks;$/;"	v	typeref:typename:uint
ticks0	kernel/kernel.asm	/^  ticks0 = ticks;$/;"	d
tickslock	kernel/trap.c	/^struct spinlock tickslock;$/;"	v	typeref:struct:spinlock
timer_scratch	kernel/start.c	/^uint64 timer_scratch[NCPU][5];$/;"	v	typeref:typename:uint64[][5]
timerinit	kernel/start.c	/^timerinit()$/;"	f	typeref:typename:void
timervec	kernel/kernelvec.S	/^timervec:$/;"	l
tok	user/sh.asm	/^    tok = gettoken(ps, es, 0, 0);$/;"	d
top	user/usertests.asm	/^  top = (uint64) sbrk(0);$/;"	d
tot	kernel/kernel.asm	/^      tot = -1;$/;"	d
total	user/usertests.asm	/^    total = 0;$/;"	d
total	user/usertests.asm	/^  total = 0;$/;"	d
tp	kernel/proc.h	/^  \/*  64 *\/ uint64 tp;$/;"	m	struct:trapframe	typeref:typename:uint64
trampoline	kernel/trampoline.S	/^trampoline:$/;"	l
trapframe	kernel/proc.h	/^  struct trapframe *trapframe; \/\/ data page for trampoline.S$/;"	m	struct:proc	typeref:struct:trapframe *
trapframe	kernel/proc.h	/^struct trapframe {$/;"	s
trapinit	kernel/trap.c	/^trapinit(void)$/;"	f	typeref:typename:void
trapinithart	kernel/trap.c	/^trapinithart(void)$/;"	f	typeref:typename:void
truncate1	user/usertests.c	/^truncate1(char *s)$/;"	f	typeref:typename:void
truncate2	user/usertests.c	/^truncate2(char *s)$/;"	f	typeref:typename:void
truncate3	user/usertests.c	/^truncate3(char *s)$/;"	f	typeref:typename:void
twochildren	user/usertests.c	/^twochildren(char *s)$/;"	f	typeref:typename:void
type	kernel/elf.h	/^  uint32 type;$/;"	m	struct:proghdr	typeref:typename:uint32
type	kernel/elf.h	/^  ushort type;$/;"	m	struct:elfhdr	typeref:typename:ushort
type	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	m	struct:file	typeref:enum:file::__anonc1f1ee2b0103
type	kernel/file.h	/^  short type;         \/\/ copy of disk inode$/;"	m	struct:inode	typeref:typename:short
type	kernel/fs.h	/^  short type;           \/\/ File type$/;"	m	struct:dinode	typeref:typename:short
type	kernel/stat.h	/^  short type;  \/\/ Type of file$/;"	m	struct:stat	typeref:typename:short
type	kernel/virtio.h	/^  uint32 type; \/\/ VIRTIO_BLK_T_IN or ..._OUT$/;"	m	struct:virtio_blk_req	typeref:typename:uint32
type	user/sh.c	/^  int type;$/;"	m	struct:backcmd	typeref:typename:int	file:
type	user/sh.c	/^  int type;$/;"	m	struct:cmd	typeref:typename:int	file:
type	user/sh.c	/^  int type;$/;"	m	struct:execcmd	typeref:typename:int	file:
type	user/sh.c	/^  int type;$/;"	m	struct:listcmd	typeref:typename:int	file:
type	user/sh.c	/^  int type;$/;"	m	struct:pipecmd	typeref:typename:int	file:
type	user/sh.c	/^  int type;$/;"	m	struct:redircmd	typeref:typename:int	file:
uart_tx_buf	kernel/uart.c	/^char uart_tx_buf[UART_TX_BUF_SIZE];$/;"	v	typeref:typename:char[]
uart_tx_lock	kernel/uart.c	/^struct spinlock uart_tx_lock;$/;"	v	typeref:struct:spinlock
uart_tx_r	kernel/uart.c	/^uint64 uart_tx_r; \/\/ read next from uart_tx_buf[uar_tx_r % UART_TX_BUF_SIZE]$/;"	v	typeref:typename:uint64
uart_tx_w	kernel/uart.c	/^uint64 uart_tx_w; \/\/ write next to uart_tx_buf[uart_tx_w % UART_TX_BUF_SIZE]$/;"	v	typeref:typename:uint64
uartgetc	kernel/uart.c	/^uartgetc(void)$/;"	f	typeref:typename:int
uartinit	kernel/uart.c	/^uartinit(void)$/;"	f	typeref:typename:void
uartintr	kernel/uart.c	/^uartintr(void)$/;"	f	typeref:typename:void
uartputc	kernel/uart.c	/^uartputc(int c)$/;"	f	typeref:typename:void
uartputc_sync	kernel/uart.c	/^uartputc_sync(int c)$/;"	f	typeref:typename:void
uartstart	kernel/uart.c	/^uartstart()$/;"	f	typeref:typename:void
uchar	kernel/types.h	/^typedef unsigned char  uchar;$/;"	t	typeref:typename:unsigned char
uint	kernel/types.h	/^typedef unsigned int   uint;$/;"	t	typeref:typename:unsigned int
uint	user/bigfile.asm	/^uint$/;"	l
uint	user/cat.asm	/^uint$/;"	l
uint	user/echo.asm	/^uint$/;"	l
uint	user/forktest.asm	/^uint$/;"	l
uint	user/grep.asm	/^uint$/;"	l
uint	user/grind.asm	/^uint$/;"	l
uint	user/init.asm	/^uint$/;"	l
uint	user/kill.asm	/^uint$/;"	l
uint	user/ln.asm	/^uint$/;"	l
uint	user/ls.asm	/^uint$/;"	l
uint	user/mkdir.asm	/^uint$/;"	l
uint	user/rm.asm	/^uint$/;"	l
uint	user/sh.asm	/^uint$/;"	l
uint	user/stressfs.asm	/^uint$/;"	l
uint	user/symlinktest.asm	/^uint$/;"	l
uint	user/usertests.asm	/^uint$/;"	l
uint	user/wc.asm	/^uint$/;"	l
uint	user/zombie.asm	/^uint$/;"	l
uint16	kernel/types.h	/^typedef unsigned short uint16;$/;"	t	typeref:typename:unsigned short
uint32	kernel/types.h	/^typedef unsigned int  uint32;$/;"	t	typeref:typename:unsigned int
uint64	kernel/kernel.asm	/^uint64 $/;"	l
uint64	kernel/kernel.asm	/^uint64$/;"	l
uint64	kernel/types.h	/^typedef unsigned long uint64;$/;"	t	typeref:typename:unsigned long
uint8	kernel/types.h	/^typedef unsigned char uint8;$/;"	t	typeref:typename:unsigned char
uninit	user/usertests.c	/^char uninit[10000];$/;"	v	typeref:typename:char[10000]
unlink	user/bigfile.asm	/^unlink:$/;"	l
unlink	user/cat.asm	/^unlink:$/;"	l
unlink	user/echo.asm	/^unlink:$/;"	l
unlink	user/forktest.asm	/^unlink:$/;"	l
unlink	user/grep.asm	/^unlink:$/;"	l
unlink	user/grind.asm	/^unlink:$/;"	l
unlink	user/init.asm	/^unlink:$/;"	l
unlink	user/kill.asm	/^unlink:$/;"	l
unlink	user/ln.asm	/^unlink:$/;"	l
unlink	user/ls.asm	/^unlink:$/;"	l
unlink	user/mkdir.asm	/^unlink:$/;"	l
unlink	user/rm.asm	/^unlink:$/;"	l
unlink	user/sh.asm	/^unlink:$/;"	l
unlink	user/stressfs.asm	/^unlink:$/;"	l
unlink	user/symlinktest.asm	/^unlink:$/;"	l
unlink	user/usertests.asm	/^unlink:$/;"	l
unlink	user/usys.S	/^unlink:$/;"	l
unlink	user/wc.asm	/^unlink:$/;"	l
unlink	user/zombie.asm	/^unlink:$/;"	l
unlinkread	user/usertests.c	/^unlinkread(char *s)$/;"	f	typeref:typename:void
unsigned	user/grind.asm	/^unsigned long rand_next = 1;$/;"	l
unused	kernel/virtio.h	/^  uint16 unused;$/;"	m	struct:virtq_avail	typeref:typename:uint16
uptime	user/bigfile.asm	/^uptime:$/;"	l
uptime	user/cat.asm	/^uptime:$/;"	l
uptime	user/echo.asm	/^uptime:$/;"	l
uptime	user/forktest.asm	/^uptime:$/;"	l
uptime	user/grep.asm	/^uptime:$/;"	l
uptime	user/grind.asm	/^uptime:$/;"	l
uptime	user/init.asm	/^uptime:$/;"	l
uptime	user/kill.asm	/^uptime:$/;"	l
uptime	user/ln.asm	/^uptime:$/;"	l
uptime	user/ls.asm	/^uptime:$/;"	l
uptime	user/mkdir.asm	/^uptime:$/;"	l
uptime	user/rm.asm	/^uptime:$/;"	l
uptime	user/sh.asm	/^uptime:$/;"	l
uptime	user/stressfs.asm	/^uptime:$/;"	l
uptime	user/symlinktest.asm	/^uptime:$/;"	l
uptime	user/usertests.asm	/^uptime:$/;"	l
uptime	user/usys.S	/^uptime:$/;"	l
uptime	user/wc.asm	/^uptime:$/;"	l
uptime	user/zombie.asm	/^uptime:$/;"	l
used	kernel/virtio_disk.c	/^  struct virtq_used *used;$/;"	m	struct:disk	typeref:struct:virtq_used *	file:
used_idx	kernel/virtio_disk.c	/^  uint16 used_idx; \/\/ we've looked this far in used[2..NUM].$/;"	m	struct:disk	typeref:typename:uint16	file:
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
userinit	kernel/proc.c	/^userinit(void)$/;"	f	typeref:typename:void
userret	kernel/trampoline.S	/^userret:$/;"	l
usertrap	kernel/trap.c	/^usertrap(void)$/;"	f	typeref:typename:void
usertrapret	kernel/trap.c	/^usertrapret(void)$/;"	f	typeref:typename:void
uservec	kernel/trampoline.S	/^uservec:    $/;"	l
ushort	kernel/types.h	/^typedef unsigned short ushort;$/;"	t	typeref:typename:unsigned short
uvmalloc	kernel/vm.c	/^uvmalloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)$/;"	f	typeref:typename:uint64
uvmclear	kernel/vm.c	/^uvmclear(pagetable_t pagetable, uint64 va)$/;"	f	typeref:typename:void
uvmcopy	kernel/vm.c	/^uvmcopy(pagetable_t old, pagetable_t new, uint64 sz)$/;"	f	typeref:typename:int
uvmcreate	kernel/vm.c	/^uvmcreate()$/;"	f	typeref:typename:pagetable_t
uvmdealloc	kernel/vm.c	/^uvmdealloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)$/;"	f	typeref:typename:uint64
uvmfree	kernel/vm.c	/^uvmfree(pagetable_t pagetable, uint64 sz)$/;"	f	typeref:typename:void
uvminit	kernel/vm.c	/^uvminit(pagetable_t pagetable, uchar *src, uint sz)$/;"	f	typeref:typename:void
uvmunmap	kernel/vm.c	/^uvmunmap(pagetable_t pagetable, uint64 va, uint64 npages, int do_free)$/;"	f	typeref:typename:void
va0	kernel/kernel.asm	/^    va0 = PGROUNDDOWN(dstva);$/;"	d
va0	kernel/kernel.asm	/^    va0 = PGROUNDDOWN(srcva);$/;"	d
vaddr	kernel/elf.h	/^  uint64 vaddr;$/;"	m	struct:proghdr	typeref:typename:uint64
valid	kernel/buf.h	/^  int valid;   \/\/ has data been read from disk?$/;"	m	struct:buf	typeref:typename:int
valid	kernel/file.h	/^  int valid;          \/\/ inode has been read from disk?$/;"	m	struct:inode	typeref:typename:int
validatetest	user/usertests.c	/^validatetest(char *s)$/;"	f	typeref:typename:void
variableA	kernel/kernel.asm	/^    variableA = bn\/NDINDIRECT;$/;"	d
variableB	kernel/kernel.asm	/^    variableB = bn - (NDINDIRECT * variableA);$/;"	d
variableC	kernel/kernel.asm	/^    variableC = variableB % NINDIRECT;$/;"	d
vdisk_lock	kernel/virtio_disk.c	/^  struct spinlock vdisk_lock;$/;"	m	struct:disk	typeref:struct:spinlock	file:
version	kernel/elf.h	/^  uint version;$/;"	m	struct:elfhdr	typeref:typename:uint
virtio_blk_req	kernel/virtio.h	/^struct virtio_blk_req {$/;"	s
virtio_disk_init	kernel/virtio_disk.c	/^virtio_disk_init(void)$/;"	f	typeref:typename:void
virtio_disk_intr	kernel/virtio_disk.c	/^virtio_disk_intr()$/;"	f	typeref:typename:void
virtio_disk_rw	kernel/virtio_disk.c	/^virtio_disk_rw(struct buf *b, int write)$/;"	f	typeref:typename:void
virtq_avail	kernel/virtio.h	/^struct virtq_avail {$/;"	s
virtq_desc	kernel/virtio.h	/^struct virtq_desc {$/;"	s
virtq_used	kernel/virtio.h	/^struct virtq_used {$/;"	s
virtq_used_elem	kernel/virtio.h	/^struct virtq_used_elem {$/;"	s
void	kernel/kernel.asm	/^void *$/;"	l
void	kernel/kernel.asm	/^void uartstart();$/;"	l
void	kernel/kernel.asm	/^void$/;"	l
void	user/bigfile.asm	/^void *$/;"	l
void	user/bigfile.asm	/^void$/;"	l
void	user/cat.asm	/^void *$/;"	l
void	user/cat.asm	/^void$/;"	l
void	user/echo.asm	/^void *$/;"	l
void	user/echo.asm	/^void$/;"	l
void	user/forktest.asm	/^void *$/;"	l
void	user/forktest.asm	/^void$/;"	l
void	user/grep.asm	/^void *$/;"	l
void	user/grep.asm	/^void$/;"	l
void	user/grind.asm	/^void *$/;"	l
void	user/grind.asm	/^void$/;"	l
void	user/init.asm	/^void *$/;"	l
void	user/init.asm	/^void$/;"	l
void	user/kill.asm	/^void *$/;"	l
void	user/kill.asm	/^void$/;"	l
void	user/ln.asm	/^void *$/;"	l
void	user/ln.asm	/^void$/;"	l
void	user/ls.asm	/^void *$/;"	l
void	user/ls.asm	/^void$/;"	l
void	user/mkdir.asm	/^void *$/;"	l
void	user/mkdir.asm	/^void$/;"	l
void	user/rm.asm	/^void *$/;"	l
void	user/rm.asm	/^void$/;"	l
void	user/sh.asm	/^void *$/;"	l
void	user/sh.asm	/^void$/;"	l
void	user/stressfs.asm	/^void *$/;"	l
void	user/stressfs.asm	/^void$/;"	l
void	user/symlinktest.asm	/^void *$/;"	l
void	user/symlinktest.asm	/^void$/;"	l
void	user/usertests.asm	/^void *$/;"	l
void	user/usertests.asm	/^void$/;"	l
void	user/wc.asm	/^void *$/;"	l
void	user/wc.asm	/^void$/;"	l
void	user/zombie.asm	/^void *$/;"	l
void	user/zombie.asm	/^void$/;"	l
volatile	kernel/kernel.asm	/^volatile static int started = 0;$/;"	l
vprintf	user/printf.c	/^vprintf(int fd, const char *fmt, va_list ap)$/;"	f	typeref:typename:void
w	kernel/console.c	/^  uint w;  \/\/ Write index$/;"	m	struct:__anonb6393d190108	typeref:typename:uint	file:
w_mcounteren	kernel/riscv.h	/^w_mcounteren(uint64 x)$/;"	f	typeref:typename:void
w_medeleg	kernel/riscv.h	/^w_medeleg(uint64 x)$/;"	f	typeref:typename:void
w_mepc	kernel/riscv.h	/^w_mepc(uint64 x)$/;"	f	typeref:typename:void
w_mideleg	kernel/riscv.h	/^w_mideleg(uint64 x)$/;"	f	typeref:typename:void
w_mie	kernel/riscv.h	/^w_mie(uint64 x)$/;"	f	typeref:typename:void
w_mscratch	kernel/riscv.h	/^w_mscratch(uint64 x)$/;"	f	typeref:typename:void
w_mstatus	kernel/riscv.h	/^w_mstatus(uint64 x)$/;"	f	typeref:typename:void
w_mtvec	kernel/riscv.h	/^w_mtvec(uint64 x)$/;"	f	typeref:typename:void
w_satp	kernel/riscv.h	/^w_satp(uint64 x)$/;"	f	typeref:typename:void
w_sepc	kernel/riscv.h	/^w_sepc(uint64 x)$/;"	f	typeref:typename:void
w_sie	kernel/riscv.h	/^w_sie(uint64 x)$/;"	f	typeref:typename:void
w_sip	kernel/riscv.h	/^w_sip(uint64 x)$/;"	f	typeref:typename:void
w_sscratch	kernel/riscv.h	/^w_sscratch(uint64 x)$/;"	f	typeref:typename:void
w_sstatus	kernel/riscv.h	/^w_sstatus(uint64 x)$/;"	f	typeref:typename:void
w_stvec	kernel/riscv.h	/^w_stvec(uint64 x)$/;"	f	typeref:typename:void
w_tp	kernel/riscv.h	/^w_tp(uint64 x)$/;"	f	typeref:typename:void
wait	gradelib.py	/^    def wait(self):$/;"	m	class:QEMU
wait	kernel/proc.c	/^wait(uint64 addr)$/;"	f	typeref:typename:int
wait	user/bigfile.asm	/^wait:$/;"	l
wait	user/cat.asm	/^wait:$/;"	l
wait	user/echo.asm	/^wait:$/;"	l
wait	user/forktest.asm	/^wait:$/;"	l
wait	user/grep.asm	/^wait:$/;"	l
wait	user/grind.asm	/^wait:$/;"	l
wait	user/init.asm	/^wait:$/;"	l
wait	user/kill.asm	/^wait:$/;"	l
wait	user/ln.asm	/^wait:$/;"	l
wait	user/ls.asm	/^wait:$/;"	l
wait	user/mkdir.asm	/^wait:$/;"	l
wait	user/rm.asm	/^wait:$/;"	l
wait	user/sh.asm	/^wait:$/;"	l
wait	user/stressfs.asm	/^wait:$/;"	l
wait	user/symlinktest.asm	/^wait:$/;"	l
wait	user/usertests.asm	/^wait:$/;"	l
wait	user/usys.S	/^wait:$/;"	l
wait	user/wc.asm	/^wait:$/;"	l
wait	user/zombie.asm	/^wait:$/;"	l
wakeup	kernel/proc.c	/^wakeup(void *chan)$/;"	f	typeref:typename:void
wakeup1	kernel/proc.c	/^wakeup1(struct proc *p)$/;"	f	typeref:typename:void	file:
walk	kernel/vm.c	/^walk(pagetable_t pagetable, uint64 va, int alloc)$/;"	f	typeref:typename:pte_t *
walkaddr	kernel/vm.c	/^walkaddr(pagetable_t pagetable, uint64 va)$/;"	f	typeref:typename:uint64
wc	user/wc.c	/^wc(int fd, char *name)$/;"	f	typeref:typename:void
whitespace	user/sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v	typeref:typename:char[]
winode	mkfs/mkfs.c	/^winode(uint inum, struct dinode *ip)$/;"	f	typeref:typename:void
wpid	user/init.asm	/^      wpid = wait((int *) 0);$/;"	d
writable	kernel/file.h	/^  char writable;$/;"	m	struct:file	typeref:typename:char
write	gradelib.py	/^    def write(self, buf):$/;"	m	class:QEMU
write	kernel/file.h	/^  int (*write)(int, uint64, int);$/;"	m	struct:devsw	typeref:typename:int (*)(int,uint64,int)
write	user/bigfile.asm	/^write:$/;"	l
write	user/cat.asm	/^write:$/;"	l
write	user/echo.asm	/^write:$/;"	l
write	user/forktest.asm	/^write:$/;"	l
write	user/grep.asm	/^write:$/;"	l
write	user/grind.asm	/^write:$/;"	l
write	user/init.asm	/^write:$/;"	l
write	user/kill.asm	/^write:$/;"	l
write	user/ln.asm	/^write:$/;"	l
write	user/ls.asm	/^write:$/;"	l
write	user/mkdir.asm	/^write:$/;"	l
write	user/rm.asm	/^write:$/;"	l
write	user/sh.asm	/^write:$/;"	l
write	user/stressfs.asm	/^write:$/;"	l
write	user/symlinktest.asm	/^write:$/;"	l
write	user/usertests.asm	/^write:$/;"	l
write	user/usys.S	/^write:$/;"	l
write	user/wc.asm	/^write:$/;"	l
write	user/zombie.asm	/^write:$/;"	l
write_head	kernel/log.c	/^write_head(void)$/;"	f	typeref:typename:void	file:
write_log	kernel/log.c	/^write_log(void)$/;"	f	typeref:typename:void	file:
writebig	user/usertests.c	/^writebig(char *s)$/;"	f	typeref:typename:void
writei	kernel/fs.c	/^writei(struct inode *ip, int user_src, uint64 src, uint off, uint n)$/;"	f	typeref:typename:int
writeopen	kernel/pipe.c	/^  int writeopen;  \/\/ write fd is still open$/;"	m	struct:pipe	typeref:typename:int	file:
writetest	user/usertests.c	/^writetest(char *s)$/;"	f	typeref:typename:void
wsect	mkfs/mkfs.c	/^wsect(uint sec, void *buf)$/;"	f	typeref:typename:void
x	kernel/kernel.asm	/^    x = -xx;$/;"	d
x	kernel/kernel.asm	/^    x = xx;$/;"	d
x	user/bigfile.asm	/^    x = -xx;$/;"	d
x	user/bigfile.asm	/^    x = xx;$/;"	d
x	user/cat.asm	/^    x = -xx;$/;"	d
x	user/cat.asm	/^    x = xx;$/;"	d
x	user/echo.asm	/^    x = -xx;$/;"	d
x	user/echo.asm	/^    x = xx;$/;"	d
x	user/grep.asm	/^    x = -xx;$/;"	d
x	user/grep.asm	/^    x = xx;$/;"	d
x	user/grind.asm	/^    x = (*ctx % 0x7ffffffe) + 1;$/;"	d
x	user/grind.asm	/^    x = -xx;$/;"	d
x	user/grind.asm	/^    x = 16807 * lo - 2836 * hi;$/;"	d
x	user/grind.asm	/^    x = xx;$/;"	d
x	user/init.asm	/^    x = -xx;$/;"	d
x	user/init.asm	/^    x = xx;$/;"	d
x	user/kill.asm	/^    x = -xx;$/;"	d
x	user/kill.asm	/^    x = xx;$/;"	d
x	user/ln.asm	/^    x = -xx;$/;"	d
x	user/ln.asm	/^    x = xx;$/;"	d
x	user/ls.asm	/^    x = -xx;$/;"	d
x	user/ls.asm	/^    x = xx;$/;"	d
x	user/mkdir.asm	/^    x = -xx;$/;"	d
x	user/mkdir.asm	/^    x = xx;$/;"	d
x	user/rm.asm	/^    x = -xx;$/;"	d
x	user/rm.asm	/^    x = xx;$/;"	d
x	user/sh.asm	/^    x = -xx;$/;"	d
x	user/sh.asm	/^    x = xx;$/;"	d
x	user/stressfs.asm	/^    x = -xx;$/;"	d
x	user/stressfs.asm	/^    x = xx;$/;"	d
x	user/symlinktest.asm	/^        x = x * 1103515245 + 12345;$/;"	d
x	user/symlinktest.asm	/^    x = -xx;$/;"	d
x	user/symlinktest.asm	/^    x = xx;$/;"	d
x	user/umalloc.c	/^  Align x;$/;"	m	union:header	typeref:typename:Align	file:
x	user/usertests.asm	/^    x = -xx;$/;"	d
x	user/usertests.asm	/^    x = x * 1103515245 + 12345;$/;"	d
x	user/usertests.asm	/^    x = xx;$/;"	d
x	user/wc.asm	/^    x = -xx;$/;"	d
x	user/wc.asm	/^    x = xx;$/;"	d
x	user/zombie.asm	/^    x = -xx;$/;"	d
x	user/zombie.asm	/^    x = xx;$/;"	d
xint	mkfs/mkfs.c	/^xint(uint x)$/;"	f	typeref:typename:uint
xshort	mkfs/mkfs.c	/^xshort(ushort x)$/;"	f	typeref:typename:ushort
xstate	kernel/proc.h	/^  int xstate;                  \/\/ Exit status to be returned to parent's wait$/;"	m	struct:proc	typeref:typename:int
xticks	kernel/kernel.asm	/^  xticks = ticks;$/;"	d
year	kernel/date.h	/^  uint year;$/;"	m	struct:rtcdate	typeref:typename:uint
yield	kernel/proc.c	/^yield(void)$/;"	f	typeref:typename:void
zeroes	mkfs/mkfs.c	/^char zeroes[BSIZE];$/;"	v	typeref:typename:char[]
